Vulnerability ID: CVE-2017-18640
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/util/DeserializationUtils.readYamlValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
             ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIV3Parser.readLocation(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
             ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
              ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
               ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
             ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
              ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
               ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readLocation(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/converter/SwaggerConverter.readResult(Lio/swagger/parser/util/SwaggerDeserializationResult;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
             ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
              ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
               ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
                ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                 ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                  ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                   ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/converter/SwaggerConverter.readResult(Lio/swagger/parser/util/SwaggerDeserializationResult;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
             ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
              ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
               ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
                ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                 ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                  ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                   ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
             ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
              ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
             ->io/swagger/v3/parser/processors/ComponentsProcessor.processCallbacks(Ljava/util/Set;Ljava/util/Map;)V
              ->io/swagger/v3/parser/processors/CallbackProcessor.processCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
               ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
                ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                 ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                  ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                   ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
            ->io/swagger/v3/parser/processors/PathsProcessor.processPaths()V
             ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
              ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
               ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processResponses(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
              ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processLinks(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLinks(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/v3/parser/processors/PathsProcessor.processReferencePath(Lio/swagger/v3/oas/models/PathItem;)Lio/swagger/v3/oas/models/PathItem;
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLinks(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLinks(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLink(Lio/swagger/v3/oas/models/links/Link;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/CallbackProcessor.processCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
            ->io/swagger/v3/parser/processors/CallbackProcessor.processReferenceCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processRequestBodies(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
              ->io/swagger/v3/parser/processors/RequestBodyProcessor.processReferenceRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
             ->io/swagger/v3/parser/processors/RequestBodyProcessor.processReferenceRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processSecuritySchemes(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/SecuritySchemeProcessor.processSecurityScheme(Lio/swagger/v3/oas/models/security/SecurityScheme;)Lio/swagger/v3/oas/models/security/SecurityScheme;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSecurityScheme(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSecurityScheme(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/CallbackProcessor.processCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processParameters(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processHeaders(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
            ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeaders(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeader(Lio/swagger/v3/oas/models/headers/Header;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeaders(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Ljava/util/List;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processExamples(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExample(Lio/swagger/v3/oas/models/examples/Example;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/PathsProcessor.processReferencePath(Lio/swagger/v3/oas/models/PathItem;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processComposedSchema(Lio/swagger/v3/oas/models/media/ComposedSchema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processSchemas(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processNotSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processArraySchema(Lio/swagger/v3/oas/models/media/ArraySchema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processPropertySchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processAdditionalProperties(Ljava/lang/Object;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processComposedSchema(Lio/swagger/v3/oas/models/media/ComposedSchema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processNotSchema(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processArraySchema(Lio/swagger/v3/oas/models/media/ArraySchema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processPropertySchema(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processAdditionalProperties(Ljava/lang/Object;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLink(Lio/swagger/v3/oas/models/links/Link;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeader(Lio/swagger/v3/oas/models/headers/Header;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processDiscriminator(Lio/swagger/v3/oas/models/media/Discriminator;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processDiscriminatorMapping(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.lambda$processRefToExternalPathItem$1(Ljava/lang/String;Lio/swagger/v3/oas/models/parameters/Parameter;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExample(Lio/swagger/v3/oas/models/examples/Example;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readLocation(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;)Lio/swagger/parser/util/SwaggerDeserializationResult;
            ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/config/CodegenConfigurator.toClientOptInput()Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorService.generationRequest(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/v3/service/GeneratorService;
            ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
             ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;)Lio/swagger/models/Swagger;
              ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
               ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
                ->io/swagger/parser/processors/PathsProcessor.processPaths()V
                 ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                  ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                   ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                    ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                     ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                      ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                        ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                         ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                          ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/Codegen.main([Ljava/lang/String;)V
            ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.parse(Ljava/lang/String;)Lio/swagger/models/Swagger;
            ->io/swagger/parser/SwaggerParser.parse(Ljava/lang/String;Ljava/util/List;)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
             ->io/swagger/parser/processors/PathsProcessor.processPaths()V
              ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
               ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;)Lio/swagger/models/Swagger;
            ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/List;Z)Lio/swagger/models/Swagger;
              ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
               ->io/swagger/parser/processors/PathsProcessor.processPaths()V
                ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                  ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                   ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                    ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                     ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                        ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                         ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
            ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
             ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
              ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processObjectProperty(Lio/swagger/models/properties/ObjectProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processComposedProperty(Lio/swagger/models/properties/ComposedProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processArrayProperty(Lio/swagger/models/properties/ArrayProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processMapProperty(Lio/swagger/models/properties/MapProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
            ->io/swagger/parser/processors/ModelProcessor.processComposedModel(Lio/swagger/models/ComposedModel;)V
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
            ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
             ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
              ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
               ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                 ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
            ->io/swagger/parser/processors/DefinitionsProcessor.processDefinitions()V
             ->io/swagger/parser/processors/DefinitionsProcessor.processDefinitions(Ljava/util/Set;Ljava/util/Map;)V
              ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
               ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
                ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                 ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
            ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
            ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
            ->io/swagger/parser/processors/ModelProcessor.processArrayModel(Lio/swagger/models/ArrayModel;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processComposedProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefModel(Lio/swagger/models/RefModel;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/models/Model;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefModel(Lio/swagger/models/RefModel;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefModel(Lio/swagger/models/RefModel;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processDiscriminatorAsRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processComposedModel(Lio/swagger/models/ComposedModel;)V
            ->io/swagger/parser/processors/ModelProcessor.processRefModel(Lio/swagger/models/RefModel;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
            ->io/swagger/parser/processors/ModelProcessor.processRefModel(Lio/swagger/models/RefModel;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
               ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
               ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processDiscriminator(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
               ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Lio/swagger/models/parameters/BodyParameter;)V
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Lio/swagger/models/RefModel;)V
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
            ->io/swagger/parser/Swagger20Parser.readWithInfo(Ljava/lang/String;Ljava/util/List;)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/Swagger20Parser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
            ->io/swagger/parser/Swagger20Parser.read(Ljava/lang/String;Ljava/util/List;)Lio/swagger/models/Swagger;
             ->io/swagger/parser/Swagger20Parser.convertToSwagger(Ljava/lang/String;)Lio/swagger/models/Swagger;
              ->io/swagger/parser/Swagger20Parser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.parse(Ljava/lang/String;Ljava/util/List;)Lio/swagger/models/Swagger;
            ->io/swagger/parser/Swagger20Parser.parse(Ljava/lang/String;)Lio/swagger/models/Swagger;
             ->io/swagger/parser/Swagger20Parser.convertToSwagger(Ljava/lang/String;)Lio/swagger/models/Swagger;
              ->io/swagger/parser/Swagger20Parser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
            ->io/swagger/parser/SwaggerParser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
             ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
               ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.load(Ljava/io/Reader;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseMap$0(Ljava/lang/String;)Ljava/util/Map;
            ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
             ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseList$1(Ljava/lang/String;)Ljava/util/List;
            ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
             ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.load(Ljava/io/InputStream;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
            ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
            ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.process(Lorg/springframework/beans/factory/config/YamlProcessor$MatchCallback;)V
            ->org/springframework/beans/factory/config/YamlProcessor.process(Lorg/springframework/beans/factory/config/YamlProcessor$MatchCallback;Lorg/yaml/snakeyaml/Yaml;Lorg/springframework/core/io/Resource;)Z
             ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
Vulnerability ID: CVE-2022-25857
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
              ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
               ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->io/swagger/v3/parser/util/DeserializationUtils.readYamlValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
               ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
                ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
               ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
                ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
               ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
                ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseMap$0(Ljava/lang/String;)Ljava/util/Map;
            ->org/yaml/snakeyaml/Yaml.<init>()V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
              ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseList$1(Ljava/lang/String;)Ljava/util/List;
            ->org/yaml/snakeyaml/Yaml.<init>()V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
              ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/LoaderOptions;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
              ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.process(Lorg/springframework/beans/factory/config/YamlProcessor$MatchCallback;)V
            ->org/springframework/beans/factory/config/YamlProcessor.createYaml()Lorg/yaml/snakeyaml/Yaml;
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
               ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
            ->org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>()V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
Vulnerability ID: GHSA-57j2-w4cx-62h2
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Map;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArrayToArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)[Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArrayToArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)[Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Map;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Collection;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: GHSA-4g9r-vxhx-9pgx
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getCount()I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead()J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveSummary.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.detectFormat(Ljava/io/File;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
              ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.update([B)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.close()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveSummary.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextDumpEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.listStream(Ljava/io/File;[Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/Lister.createArchiveInputStream([Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                   ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                   ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                   ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.createArchiveInputStream([Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/InputStream;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
Vulnerability ID: GHSA-vmq6-5m68-f53m
  Vulnerable Code: ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
      Execution Path: 
           ->ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
Vulnerability ID: CVE-2018-8088
  Vulnerable Code: org/slf4j/ext/EventData.put(Ljava/lang/String;Ljava/io/Serializable;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.put(Ljava/lang/String;Ljava/io/Serializable;)V
  Vulnerable Code: org/slf4j/ext/EventData.toString()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.toString()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.hashCode()I
      Execution Path: 
           ->org/slf4j/ext/EventData.hashCode()I
  Vulnerable Code: org/slf4j/ext/EventData.getEventId()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventId()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.get(Ljava/lang/String;)Ljava/io/Serializable;
      Execution Path: 
           ->org/slf4j/ext/EventData.get(Ljava/lang/String;)Ljava/io/Serializable;
  Vulnerable Code: org/slf4j/ext/EventData.toXML(Ljava/util/Map;)Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.toXML()Ljava/lang/String;
            ->org/slf4j/ext/EventData.toXML(Ljava/util/Map;)Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.getEventDateTime()Ljava/util/Date;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventDateTime()Ljava/util/Date;
  Vulnerable Code: org/slf4j/ext/EventData.toXML()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.toString()Ljava/lang/String;
            ->org/slf4j/ext/EventData.toXML()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventLogger.logEvent(Lorg/slf4j/ext/EventData;)V
            ->org/slf4j/ext/EventData.toXML()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.getEntrySetIterator()Ljava/util/Iterator;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEntrySetIterator()Ljava/util/Iterator;
  Vulnerable Code: org/slf4j/ext/EventData.<init>(Ljava/util/Map;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.<init>(Ljava/util/Map;)V
  Vulnerable Code: org/slf4j/ext/EventData.getEventType()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventType()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.<init>()V
      Execution Path: 
           ->org/slf4j/ext/EventData.<init>()V
  Vulnerable Code: org/slf4j/ext/EventData.<init>(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.<init>(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.getEventMap()Ljava/util/Map;
      Execution Path: 
           ->org/slf4j/ext/EventData.equals(Ljava/lang/Object;)Z
            ->org/slf4j/ext/EventData.getEventMap()Ljava/util/Map;
  Vulnerable Code: org/slf4j/ext/EventData.getMessage()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.getMessage()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.setMessage(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setMessage(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.getSize()I
      Execution Path: 
           ->org/slf4j/ext/EventData.getSize()I
  Vulnerable Code: org/slf4j/ext/EventData.setEventDateTime(Ljava/util/Date;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setEventDateTime(Ljava/util/Date;)V
  Vulnerable Code: org/slf4j/ext/EventData.setEventId(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setEventId(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.setEventType(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setEventType(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.equals(Ljava/lang/Object;)Z
      Execution Path: 
           ->org/slf4j/ext/EventData.equals(Ljava/lang/Object;)Z
  Vulnerable Code: org/slf4j/ext/EventData.putAll(Ljava/util/Map;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.putAll(Ljava/util/Map;)V
Vulnerability ID: CVE-2020-25649
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
            ->com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer$NodeDeserializer.<init>()V
            ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer$DocumentDeserializer.<init>()V
            ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
Vulnerability ID: CVE-2021-46877
  Vulnerable Code: com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
Vulnerability ID: CVE-2021-36090
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read()I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([B)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read()I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/CommandLineTextExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createEncryptedOOXMLExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbededDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbeddedDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/ooxml/extractor/ExtractorFactory.createEncryptedOOXMLExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
               ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XMLSlideShow.<init>()V
            ->org/apache/poi/xslf/usermodel/XMLSlideShow.empty()Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xwpf/usermodel/XWPFDocument.<init>(Ljava/io/InputStream;)V
            ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Lorg/apache/poi/openxml4j/opc/PackagePart;)V
            ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.plot(Lorg/apache/poi/xddf/usermodel/chart/XDDFChartData;)V
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.formatRange(Lorg/apache/poi/ss/util/CellRangeAddress;)Ljava/lang/String;
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.setSheetTitle(Ljava/lang/String;I)Lorg/apache/poi/ss/util/CellReference;
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XMLSlideShow.<init>(Ljava/io/InputStream;)V
            ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/util/HierarchyPrinter.main([Ljava/lang/String;)V
            ->org/apache/poi/xdgf/usermodel/XmlVisioDocument.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/util/VsdxToPng.main([Ljava/lang/String;)V
            ->org/apache/poi/xdgf/usermodel/XmlVisioDocument.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbookFactory.createWorkbook(Ljava/io/InputStream;)Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFMetroShape.parseShape([B)Lorg/apache/poi/sl/usermodel/Shape;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFSlideShowFactory.createSlideShow(Ljava/io/InputStream;)Lorg/apache/poi/xslf/usermodel/XMLSlideShow;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbeddedDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/util/PackageHelper.clone(Lorg/apache/poi/openxml4j/opc/OPCPackage;Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                    ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/OPCPackage.openOrCreate(Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                    ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/extractor/XDGFVisioExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/POIXMLDocument.openPackage(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xwpf/extractor/XWPFWordExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/POIXMLDocument.openPackage(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/extractor/XSSFBEventBasedExcelExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/xssf/extractor/XSSFBEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
             ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                     ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                      ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                        ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbookFactory.createWorkbook(Ljava/io/File;Z)Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/File;)V
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFSlideShowFactory.createSlideShow(Ljava/io/File;Z)Lorg/apache/poi/xslf/usermodel/XMLSlideShow;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/SXSSFWorkbookWithCustomZipEntrySource.write(Ljava/io/OutputStream;)V
            ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.createZipEntrySource(Ljava/io/InputStream;)Lorg/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource;
             ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches([BI)Z
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
            ->org/apache/poi/openxml4j/opc/internal/ZipHelper.openZipStream(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
            ->org/apache/poi/openxml4j/opc/internal/ZipHelper.openZipStream(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
Vulnerability ID: CVE-2022-42004
Vulnerability ID: GHSA-mjmj-j48q-9wg2
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
            ->org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor$FilteringConstructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
            ->org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/CustomClassLoaderConstructor.<init>(Ljava/lang/ClassLoader;)V
            ->org/yaml/snakeyaml/constructor/CustomClassLoaderConstructor.<init>(Ljava/lang/Class;Ljava/lang/ClassLoader;)V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/extensions/compactnotation/PackageCompactConstructor.<init>(Ljava/lang/String;)V
            ->org/yaml/snakeyaml/extensions/compactnotation/CompactConstructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
                ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/LoaderOptions;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>()V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/springframework/boot/env/OriginTrackedYamlLoader$OriginTrackingConstructor.<init>(Lorg/springframework/boot/env/OriginTrackedYamlLoader;Lorg/springframework/boot/env/OriginTrackedYamlLoader$1;)V
             ->org/springframework/boot/env/OriginTrackedYamlLoader$OriginTrackingConstructor.<init>(Lorg/springframework/boot/env/OriginTrackedYamlLoader;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
                ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
                 ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
            ->org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.construct(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.getConstructor(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
             ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.construct2ndStep(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)V
            ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.getConstructor(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
             ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
            ->org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
Vulnerability ID: CVE-2022-42003
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: GHSA-288c-cq4h-88gq
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
Vulnerability ID: GHSA-rvwf-54qp-4r6v
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
Vulnerability ID: CVE-2022-4244
  Vulnerable Code: org/codehaus/plexus/util/Expand.extractFile(Ljava/io/File;Ljava/io/File;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Date;Z)V
      Execution Path: 
           ->org/codehaus/plexus/util/Expand.execute()V
            ->org/codehaus/plexus/util/Expand.expandFile(Ljava/io/File;Ljava/io/File;)V
             ->org/codehaus/plexus/util/Expand.extractFile(Ljava/io/File;Ljava/io/File;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Date;Z)V
Vulnerability ID: GHSA-w77p-8cfg-2x43
  Vulnerable Code: org/slf4j/ext/EventData.put(Ljava/lang/String;Ljava/io/Serializable;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.put(Ljava/lang/String;Ljava/io/Serializable;)V
  Vulnerable Code: org/slf4j/ext/EventData.toString()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.toString()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.hashCode()I
      Execution Path: 
           ->org/slf4j/ext/EventData.hashCode()I
  Vulnerable Code: org/slf4j/ext/EventData.getEventId()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventId()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.get(Ljava/lang/String;)Ljava/io/Serializable;
      Execution Path: 
           ->org/slf4j/ext/EventData.get(Ljava/lang/String;)Ljava/io/Serializable;
  Vulnerable Code: org/slf4j/ext/EventData.toXML(Ljava/util/Map;)Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.toXML(Ljava/util/Map;)Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.getEventDateTime()Ljava/util/Date;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventDateTime()Ljava/util/Date;
  Vulnerable Code: org/slf4j/ext/EventData.toXML()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.toXML()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.getEntrySetIterator()Ljava/util/Iterator;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEntrySetIterator()Ljava/util/Iterator;
  Vulnerable Code: org/slf4j/ext/EventData.<init>(Ljava/util/Map;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.<init>(Ljava/util/Map;)V
  Vulnerable Code: org/slf4j/ext/EventData.getEventType()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventType()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.<init>()V
      Execution Path: 
           ->org/slf4j/ext/EventData.<init>()V
  Vulnerable Code: org/slf4j/ext/EventData.<init>(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.<init>(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.getEventMap()Ljava/util/Map;
      Execution Path: 
           ->org/slf4j/ext/EventData.getEventMap()Ljava/util/Map;
  Vulnerable Code: org/slf4j/ext/EventData.getMessage()Ljava/lang/String;
      Execution Path: 
           ->org/slf4j/ext/EventData.getMessage()Ljava/lang/String;
  Vulnerable Code: org/slf4j/ext/EventData.setMessage(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setMessage(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.getSize()I
      Execution Path: 
           ->org/slf4j/ext/EventData.getSize()I
  Vulnerable Code: org/slf4j/ext/EventData.setEventDateTime(Ljava/util/Date;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setEventDateTime(Ljava/util/Date;)V
  Vulnerable Code: org/slf4j/ext/EventData.setEventId(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setEventId(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.setEventType(Ljava/lang/String;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.setEventType(Ljava/lang/String;)V
  Vulnerable Code: org/slf4j/ext/EventData.equals(Ljava/lang/Object;)Z
      Execution Path: 
           ->org/slf4j/ext/EventData.equals(Ljava/lang/Object;)Z
  Vulnerable Code: org/slf4j/ext/EventData.putAll(Ljava/util/Map;)V
      Execution Path: 
           ->org/slf4j/ext/EventData.putAll(Ljava/util/Map;)V
Vulnerability ID: GHSA-jjjh-jjxp-wpff
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: GHSA-2f88-5hg8-9x2x
  Vulnerable Code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
      Execution Path: 
           ->org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
  Vulnerable Code: org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
      Execution Path: 
           ->org/apache/maven/repository/DefaultMirrorSelector.getMirror(Lorg/apache/maven/artifact/repository/ArtifactRepository;Ljava/util/List;)Lorg/apache/maven/settings/Mirror;
            ->org/apache/maven/repository/DefaultMirrorSelector.matchPattern(Lorg/apache/maven/artifact/repository/ArtifactRepository;Ljava/lang/String;)Z
             ->org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
Vulnerability ID: GHSA-g6ph-x5wf-g337
  Vulnerable Code: org/codehaus/plexus/util/Expand.extractFile(Ljava/io/File;Ljava/io/File;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Date;Z)V
      Execution Path: 
           ->org/codehaus/plexus/util/Expand.extractFile(Ljava/io/File;Ljava/io/File;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Date;Z)V
Vulnerability ID: CVE-2022-1471
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
Vulnerability ID: GHSA-3x8x-79m2-3w2w
  Vulnerable Code: com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
Vulnerability ID: GHSA-rgv9-q543-rqg4
Vulnerability ID: CVE-2020-36518
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: GHSA-7hfm-57qf-j43q
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                   ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                    ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                   ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                   ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                  ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                   ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                    ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                     ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                   ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                    ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                  ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
            ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
             ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
             ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander$5.getNextReadableEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
               ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
               ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
               ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
Vulnerability ID: CVE-2021-35517
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.writePaxHeaders(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/command/CopyArchiveToContainerCmdImpl.exec()Ljava/lang/Object;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/CopyArchiveToContainerCmdImpl.exec()Ljava/lang/Void;
             ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.tar(Ljava/nio/file/Path;Ljava/nio/file/Path;ZZ)V
              ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                  ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.visitFile(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
            ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
             ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lcom/github/dockerjava/api/command/BuildImageCmd;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lorg/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl;
             ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar()Ljava/io/InputStream;
              ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar(Ljava/io/File;)Ljava/io/InputStream;
               ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.archiveTARFiles(Ljava/io/File;Ljava/lang/Iterable;Ljava/lang/String;)Ljava/io/File;
                ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                  ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                   ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                    ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/DockerClientImpl.buildImageCmd(Ljava/io/File;)Lcom/github/dockerjava/api/command/BuildImageCmd;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.<init>(Lcom/github/dockerjava/api/command/BuildImageCmd$Exec;Ljava/io/File;)V
             ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lorg/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl;
              ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar()Ljava/io/InputStream;
               ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar(Ljava/io/File;)Ljava/io/InputStream;
                ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.archiveTARFiles(Ljava/io/File;Ljava/lang/Iterable;Ljava/lang/String;)Ljava/io/File;
                 ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
                  ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                   ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                    ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                     ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.preVisitDirectory(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
            ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.preVisitDirectory(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
            ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/utility/MountableFile.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
            ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.handleLongName(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileToContainer(Lorg/testcontainers/utility/MountableFile;Ljava/lang/String;)V
            ->org/testcontainers/containers/ContainerState.copyFileToContainer(Lorg/testcontainers/images/builder/Transferable;Ljava/lang/String;)V
             ->org/testcontainers/images/builder/Transferable.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/images/builder/ImageFromDockerfile.resolve()Ljava/lang/Object;
            ->org/testcontainers/images/builder/ImageFromDockerfile.resolve()Ljava/lang/String;
             ->org/testcontainers/images/builder/Transferable.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
              ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField(J[BIIZ)I
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
              ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField(J[BIIZ)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
             ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/testcontainers/containers/VncRecordingContainer.saveRecordingToFile(Ljava/io/File;)V
            ->org/testcontainers/containers/VncRecordingContainer.streamRecording()Ljava/io/InputStream;
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Ljava/lang/String;)V
            ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                 ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([B)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
             ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.<init>([B)V
              ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/testcontainers/containers/VncRecordingContainer.streamRecording()Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
Vulnerability ID: CVE-2021-35516
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$2.getUncompressedCount()J
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI$Mode$2.takeAction(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander$6.writeEntryDataTo(Lorg/apache/commons/compress/archivers/ArchiveEntry;Ljava/io/OutputStream;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read()I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read([B)I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read([BII)I
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$2.getCompressedCount()J
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
Vulnerability ID: CVE-2021-35515
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
Vulnerability ID: CVE-2021-26291
  Vulnerable Code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
      Execution Path: 
           ->org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
  Vulnerable Code: org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
      Execution Path: 
           ->org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
Vulnerability ID: CVE-2023-2976
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.<init>(IZ)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.<init>(I)V
            ->com/google/common/io/FileBackedOutputStream.<init>(IZ)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.write(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write(I)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.update(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write([B)V
            ->com/google/common/io/FileBackedOutputStream.write([BII)V
             ->com/google/common/io/FileBackedOutputStream.update(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write(I)V
            ->com/google/common/io/FileBackedOutputStream.update(I)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.openInputStream()Ljava/io/InputStream;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream$2.openStream()Ljava/io/InputStream;
            ->com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
             ->com/google/common/io/FileBackedOutputStream.openInputStream()Ljava/io/InputStream;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream$1.openStream()Ljava/io/InputStream;
            ->com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
             ->com/google/common/io/FileBackedOutputStream.openInputStream()Ljava/io/InputStream;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.flush()V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.flush()V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.<init>(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.<init>(I)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.asByteSource()Lcom/google/common/io/ByteSource;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.asByteSource()Lcom/google/common/io/ByteSource;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.write([B)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write([B)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.close()V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream$1.finalize()V
            ->com/google/common/io/FileBackedOutputStream.reset()V
             ->com/google/common/io/FileBackedOutputStream.close()V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.getFile()Ljava/io/File;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.getFile()Ljava/io/File;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.reset()V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.reset()V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.write([BII)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write([BII)V
Vulnerability ID: GHSA-xqfj-vm6h-2x34
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
Vulnerability ID: GHSA-3mc7-4q67-w48m
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.<init>()V
Vulnerability ID: GHSA-mc84-pj99-q6hh
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
Vulnerability ID: CVE-2023-6378
  Vulnerable Code: ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
      Execution Path: 
           ->ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
Vulnerability ID: GHSA-crv7-7245-f45f
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
