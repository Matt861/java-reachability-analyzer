Vulnerability ID: CVE-2021-36090
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read()I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([B)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read()I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/CommandLineTextExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createEncryptedOOXMLExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbededDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbeddedDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/ooxml/extractor/ExtractorFactory.createEncryptedOOXMLExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
               ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XMLSlideShow.<init>()V
            ->org/apache/poi/xslf/usermodel/XMLSlideShow.empty()Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xwpf/usermodel/XWPFDocument.<init>(Ljava/io/InputStream;)V
            ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Lorg/apache/poi/openxml4j/opc/PackagePart;)V
            ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.plot(Lorg/apache/poi/xddf/usermodel/chart/XDDFChartData;)V
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.formatRange(Lorg/apache/poi/ss/util/CellRangeAddress;)Ljava/lang/String;
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.setSheetTitle(Ljava/lang/String;I)Lorg/apache/poi/ss/util/CellReference;
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XMLSlideShow.<init>(Ljava/io/InputStream;)V
            ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/util/HierarchyPrinter.main([Ljava/lang/String;)V
            ->org/apache/poi/xdgf/usermodel/XmlVisioDocument.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/util/VsdxToPng.main([Ljava/lang/String;)V
            ->org/apache/poi/xdgf/usermodel/XmlVisioDocument.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbookFactory.createWorkbook(Ljava/io/InputStream;)Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFMetroShape.parseShape([B)Lorg/apache/poi/sl/usermodel/Shape;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFSlideShowFactory.createSlideShow(Ljava/io/InputStream;)Lorg/apache/poi/xslf/usermodel/XMLSlideShow;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbeddedDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/util/PackageHelper.clone(Lorg/apache/poi/openxml4j/opc/OPCPackage;Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                    ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/OPCPackage.openOrCreate(Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                    ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/extractor/XDGFVisioExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/POIXMLDocument.openPackage(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xwpf/extractor/XWPFWordExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/POIXMLDocument.openPackage(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/extractor/XSSFBEventBasedExcelExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/xssf/extractor/XSSFBEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
             ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                     ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                      ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                        ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbookFactory.createWorkbook(Ljava/io/File;Z)Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/File;)V
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFSlideShowFactory.createSlideShow(Ljava/io/File;Z)Lorg/apache/poi/xslf/usermodel/XMLSlideShow;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/SXSSFWorkbookWithCustomZipEntrySource.write(Ljava/io/OutputStream;)V
            ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.createZipEntrySource(Ljava/io/InputStream;)Lorg/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource;
             ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.detectFormat(Ljava/io/File;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches([BI)Z
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.listStream(Ljava/io/File;[Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/Lister.createArchiveInputStream([Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.createArchiveInputStream([Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/InputStream;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
            ->org/apache/poi/openxml4j/opc/internal/ZipHelper.openZipStream(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
            ->org/apache/poi/openxml4j/opc/internal/ZipHelper.openZipStream(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
Vulnerability ID: CVE-2024-31573
  Vulnerable Code: org/xmlunit/util/TransformerFactoryConfigurer.<clinit>()V
      Execution Path: 
           ->org/xmlunit/util/TransformerFactoryConfigurer.<clinit>()V
  Vulnerable Code: org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lorg/xmlunit/util/TransformerFactoryConfigurer$1;)V
      Execution Path: 
           ->org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lorg/xmlunit/util/TransformerFactoryConfigurer$1;)V
  Vulnerable Code: org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      Execution Path: 
           ->org/xmlunit/diff/DefaultComparisonFormatter.createXmlTransformer(I)Ljavax/xml/transform/Transformer;
            ->org/xmlunit/util/TransformerFactoryConfigurer$Builder.build()Lorg/xmlunit/util/TransformerFactoryConfigurer;
             ->org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lorg/xmlunit/util/TransformerFactoryConfigurer$1;)V
              ->org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      Execution Path: 
           ->org/xmlunit/util/TransformerFactoryConfigurer.<clinit>()V
            ->org/xmlunit/util/TransformerFactoryConfigurer$Builder.build()Lorg/xmlunit/util/TransformerFactoryConfigurer;
             ->org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lorg/xmlunit/util/TransformerFactoryConfigurer$1;)V
              ->org/xmlunit/util/TransformerFactoryConfigurer.<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
  Vulnerable Code: org/xmlunit/util/TransformerFactoryConfigurer.builder()Lorg/xmlunit/util/TransformerFactoryConfigurer$Builder;
      Execution Path: 
           ->org/xmlunit/diff/DefaultComparisonFormatter.getDetails(Lorg/xmlunit/diff/Comparison$Detail;Lorg/xmlunit/diff/ComparisonType;Z)Ljava/lang/String;
            ->org/xmlunit/diff/DefaultComparisonFormatter.getFullFormattedXml(Lorg/w3c/dom/Node;Lorg/xmlunit/diff/ComparisonType;Z)Ljava/lang/String;
             ->org/xmlunit/diff/DefaultComparisonFormatter.getFormattedNodeXml(Lorg/w3c/dom/Node;Z)Ljava/lang/String;
              ->org/xmlunit/diff/DefaultComparisonFormatter.createXmlTransformer(I)Ljavax/xml/transform/Transformer;
               ->org/xmlunit/util/TransformerFactoryConfigurer.builder()Lorg/xmlunit/util/TransformerFactoryConfigurer$Builder;
      Execution Path: 
           ->org/xmlunit/util/TransformerFactoryConfigurer.<clinit>()V
            ->org/xmlunit/util/TransformerFactoryConfigurer.builder()Lorg/xmlunit/util/TransformerFactoryConfigurer$Builder;
  Vulnerable Code: org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/diff/DefaultComparisonFormatter.createXmlTransformer(I)Ljavax/xml/transform/Transformer;
            ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/Transform$TransformationBuilder.to(Ljavax/xml/transform/Result;)V
            ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
             ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/springframework/test/web/servlet/result/ContentResultMatchers.lambda$xml$6(Ljava/lang/String;Lorg/springframework/test/web/servlet/MvcResult;)V
            ->org/springframework/test/util/XmlExpectationsHelper.assertXmlEqual(Ljava/lang/String;Ljava/lang/String;)V
             ->org/springframework/test/util/XmlExpectationsHelper$XmlUnitDiff.<init>(Ljava/lang/String;Ljava/lang/String;)V
              ->org/xmlunit/builder/DiffBuilder.build()Lorg/xmlunit/diff/Diff;
               ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
                ->org/xmlunit/input/CommentLessSource.<init>(Ljavax/xml/transform/Source;Ljava/lang/String;)V
                 ->org/xmlunit/transform/Transformation.transformToDocument()Lorg/w3c/dom/Document;
                  ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
                   ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/springframework/test/web/client/match/ContentRequestMatchers$2.matchInternal(Lorg/springframework/mock/http/client/MockClientHttpRequest;)V
            ->org/springframework/test/util/XmlExpectationsHelper.assertXmlEqual(Ljava/lang/String;Ljava/lang/String;)V
             ->org/springframework/test/util/XmlExpectationsHelper$XmlUnitDiff.<init>(Ljava/lang/String;Ljava/lang/String;)V
              ->org/xmlunit/builder/DiffBuilder.build()Lorg/xmlunit/diff/Diff;
               ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
                ->org/xmlunit/input/CommentLessSource.<init>(Ljavax/xml/transform/Source;Ljava/lang/String;)V
                 ->org/xmlunit/transform/Transformation.transformToDocument()Lorg/w3c/dom/Document;
                  ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
                   ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/springframework/test/web/reactive/server/DefaultWebTestClient$DefaultBodyContentSpec.lambda$xml$2(Ljava/lang/String;)V
            ->org/springframework/test/util/XmlExpectationsHelper.assertXmlEqual(Ljava/lang/String;Ljava/lang/String;)V
             ->org/springframework/test/util/XmlExpectationsHelper$XmlUnitDiff.<init>(Ljava/lang/String;Ljava/lang/String;)V
              ->org/xmlunit/builder/DiffBuilder.build()Lorg/xmlunit/diff/Diff;
               ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
                ->org/xmlunit/input/CommentLessSource.<init>(Ljavax/xml/transform/Source;Ljava/lang/String;)V
                 ->org/xmlunit/transform/Transformation.transformToDocument()Lorg/w3c/dom/Document;
                  ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
                   ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/CommentLessSource.<init>(Ljavax/xml/transform/Source;)V
             ->org/xmlunit/input/CommentLessSource.<init>(Ljavax/xml/transform/Source;Ljava/lang/String;)V
              ->org/xmlunit/transform/Transformation.transformToDocument()Lorg/w3c/dom/Document;
               ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
                ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/Transform$TransformationBuilder.toDocument()Lorg/w3c/dom/Document;
            ->org/xmlunit/transform/Transformation.transformToDocument()Lorg/w3c/dom/Document;
             ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
              ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/Input$Transformation.build()Ljavax/xml/transform/Source;
            ->org/xmlunit/transform/Transformation.transformToDocument()Lorg/w3c/dom/Document;
             ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
              ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/Transform$TransformationBuilder.toString()Ljava/lang/String;
            ->org/xmlunit/transform/Transformation.transformToString()Ljava/lang/String;
             ->org/xmlunit/transform/Transformation.transformTo(Ljavax/xml/transform/Result;)V
              ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/xpath/JAXPXPathEngine.evaluate(Ljava/lang/String;Ljavax/xml/transform/Source;)Ljava/lang/String;
            ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
             ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
              ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/WhitespaceStrippedSource.<init>(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)V
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/ElementContentWhitespaceStrippedSource.<init>(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)V
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.build()Lorg/xmlunit/diff/Diff;
            ->org/xmlunit/diff/DOMDifferenceEngine.compare(Ljavax/xml/transform/Source;Ljavax/xml/transform/Source;)V
             ->org/xmlunit/util/Convert.toNode(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Node;
              ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                 ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/WhitespaceNormalizedSource.<init>(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)V
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/ElementContentWhitespaceStrippedSource.<init>(Ljavax/xml/transform/Source;)V
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                 ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/WhitespaceStrippedSource.<init>(Ljavax/xml/transform/Source;)V
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                 ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/builder/DiffBuilder.wrap(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Source;
            ->org/xmlunit/input/WhitespaceNormalizedSource.<init>(Ljavax/xml/transform/Source;)V
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                 ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/input/NormalizedSource.<init>(Ljavax/xml/transform/Source;)V
            ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;
             ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
              ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
               ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
                ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/util/Convert.toNode(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Node;
            ->org/xmlunit/util/Convert.toDocument(Ljavax/xml/transform/Source;Ljavax/xml/parsers/DocumentBuilderFactory;)Lorg/w3c/dom/Document;
             ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
              ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
               ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/validation/ParsingValidator.validateInstance(Ljavax/xml/transform/Source;)Lorg/xmlunit/validation/ValidationResult;
            ->org/xmlunit/validation/ParsingValidator.validateInstance(Ljavax/xml/transform/Source;Ljavax/xml/parsers/SAXParserFactory;)Lorg/xmlunit/validation/ValidationResult;
             ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
              ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
               ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
      Execution Path: 
           ->org/xmlunit/xpath/JAXPXPathEngine.selectNodes(Ljava/lang/String;Ljavax/xml/transform/Source;)Ljava/lang/Iterable;
            ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;)Lorg/xml/sax/InputSource;
             ->org/xmlunit/util/Convert.toInputSource(Ljavax/xml/transform/Source;Ljavax/xml/transform/TransformerFactory;)Lorg/xml/sax/InputSource;
              ->org/xmlunit/util/TransformerFactoryConfigurer.configure(Ljavax/xml/transform/TransformerFactory;)Ljavax/xml/transform/TransformerFactory;
Vulnerability ID: CVE-2023-1370
  Vulnerable Code: net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      Execution Path: 
           ->net/minidev/json/parser/JSONParserBase.parse(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
            ->net/minidev/json/parser/JSONParserBase.readFirst(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
             ->net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      Execution Path: 
           ->net/minidev/json/parser/JSONParserBase.readFirst(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
            ->net/minidev/json/parser/JSONParserBase.readArray(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
             ->net/minidev/json/parser/JSONParserBase.readMain(Lnet/minidev/json/writer/JsonReaderI;[Z)Ljava/lang/Object;
              ->net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      Execution Path: 
           ->net/minidev/json/parser/JSONParserBase.readMain(Lnet/minidev/json/writer/JsonReaderI;[Z)Ljava/lang/Object;
            ->net/minidev/json/parser/JSONParserBase.readArray(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
             ->net/minidev/json/parser/JSONParserBase.readMain(Lnet/minidev/json/writer/JsonReaderI;[Z)Ljava/lang/Object;
              ->net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      Execution Path: 
           ->net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
            ->net/minidev/json/parser/JSONParserBase.readMain(Lnet/minidev/json/writer/JsonReaderI;[Z)Ljava/lang/Object;
             ->net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
Vulnerability ID: GHSA-4g9r-vxhx-9pgx
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getCount()I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead()J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveSummary.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.update([B)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.close()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveSummary.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextDumpEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
Vulnerability ID: CVE-2023-20883
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
            ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
            ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
             ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
            ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
Vulnerability ID: GHSA-493p-pfq6-5258
  Vulnerable Code: net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      Execution Path: 
           ->net/minidev/json/parser/JSONParserBase.readObject(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
Vulnerability ID: GHSA-7hfm-57qf-j43q
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                   ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                    ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                   ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                   ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                  ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                   ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                    ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                     ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                  ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                   ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                    ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
                 ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                  ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
                ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
            ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
             ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
             ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander$5.getNextReadableEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
               ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
               ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
               ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
Vulnerability ID: CVE-2019-12402
  Vulnerable Code: org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
Vulnerability ID: CVE-2021-35517
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.writePaxHeaders(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/command/CopyArchiveToContainerCmdImpl.exec()Ljava/lang/Object;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/CopyArchiveToContainerCmdImpl.exec()Ljava/lang/Void;
             ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.tar(Ljava/nio/file/Path;Ljava/nio/file/Path;ZZ)V
              ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                  ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.visitFile(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
            ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
             ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lcom/github/dockerjava/api/command/BuildImageCmd;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lorg/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl;
             ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar()Ljava/io/InputStream;
              ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar(Ljava/io/File;)Ljava/io/InputStream;
               ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.archiveTARFiles(Ljava/io/File;Ljava/lang/Iterable;Ljava/lang/String;)Ljava/io/File;
                ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                  ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                   ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                    ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/DockerClientImpl.buildImageCmd(Ljava/io/File;)Lcom/github/dockerjava/api/command/BuildImageCmd;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.<init>(Lcom/github/dockerjava/api/command/BuildImageCmd$Exec;Ljava/io/File;)V
             ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lorg/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl;
              ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar()Ljava/io/InputStream;
               ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar(Ljava/io/File;)Ljava/io/InputStream;
                ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.archiveTARFiles(Ljava/io/File;Ljava/lang/Iterable;Ljava/lang/String;)Ljava/io/File;
                 ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
                  ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                   ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                    ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                     ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.preVisitDirectory(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
            ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.preVisitDirectory(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
            ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/utility/MountableFile.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
            ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.handleLongName(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileToContainer(Lorg/testcontainers/utility/MountableFile;Ljava/lang/String;)V
            ->org/testcontainers/containers/ContainerState.copyFileToContainer(Lorg/testcontainers/images/builder/Transferable;Ljava/lang/String;)V
             ->org/testcontainers/images/builder/Transferable.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/images/builder/ImageFromDockerfile.resolve()Ljava/lang/Object;
            ->org/testcontainers/images/builder/ImageFromDockerfile.resolve()Ljava/lang/String;
             ->org/testcontainers/images/builder/Transferable.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
              ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField(J[BIIZ)I
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
              ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField(J[BIIZ)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
             ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/testcontainers/containers/VncRecordingContainer.saveRecordingToFile(Ljava/io/File;)V
            ->org/testcontainers/containers/VncRecordingContainer.streamRecording()Ljava/io/InputStream;
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Ljava/lang/String;)V
            ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                 ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([B)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
             ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.<init>([B)V
              ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/testcontainers/containers/VncRecordingContainer.streamRecording()Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
Vulnerability ID: CVE-2021-35516
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$2.getUncompressedCount()J
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI$Mode$2.takeAction(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander$6.writeEntryDataTo(Lorg/apache/commons/compress/archivers/ArchiveEntry;Ljava/io/OutputStream;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read()I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read([B)I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read([BII)I
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$2.getCompressedCount()J
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
Vulnerability ID: CVE-2021-35515
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
Vulnerability ID: GHSA-53x6-4x5p-rrvv
  Vulnerable Code: org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
Vulnerability ID: CVE-2022-27772
  Vulnerable Code: org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir(Ljava/lang/String;)Ljava/io/File;
      Execution Path: 
           ->org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir(Ljava/lang/String;)Ljava/io/File;
Vulnerability ID: CVE-2021-31684
  Vulnerable Code: net/minidev/json/parser/JSONParserByteArray.indexOf(CI)I
      Execution Path: 
           ->net/minidev/json/parser/JSONParserByteArray.indexOf(CI)I
Vulnerability ID: GHSA-xqfj-vm6h-2x34
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
Vulnerability ID: GHSA-mc84-pj99-q6hh
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
Vulnerability ID: GHSA-xf96-w227-r7c4
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
Vulnerability ID: GHSA-crv7-7245-f45f
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
