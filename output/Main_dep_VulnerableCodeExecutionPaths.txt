Vulnerability ID: GHSA-f3jh-qvm4-mg39
  Vulnerable Code: org/springframework/security/access/vote/AuthenticatedVoter.isFullyAuthenticated(Lorg/springframework/security/core/Authentication;)Z
      Execution Path: 
           ->org/springframework/security/access/vote/AuthenticatedVoter.vote(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)I
            ->org/springframework/security/access/vote/AuthenticatedVoter.isFullyAuthenticated(Lorg/springframework/security/core/Authentication;)Z
Vulnerability ID: CVE-2023-34040
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/apache/kafka/clients/consumer/Consumer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/apache/kafka/clients/consumer/Consumer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$500(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)[Lorg/springframework/kafka/support/TopicPartitionOffset;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.<init>(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/springframework/kafka/listener/GenericMessageListener;Lorg/springframework/kafka/listener/ListenerType;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.subscribeOrAssignTopics(Lorg/apache/kafka/clients/consumer/Consumer;)V
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$500(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)[Lorg/springframework/kafka/support/TopicPartitionOffset;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$800(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$800(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStartingEvent()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.run()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$800(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStartingEvent()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1500(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.wrapUp()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1500(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.isContainerPaused()Z
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.isContainerPaused()Z
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.lambda$new$2(I)[Lorg/springframework/kafka/support/TopicPartitionOffset;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.lambda$new$2(I)[Lorg/springframework/kafka/support/TopicPartitionOffset;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
      Execution Path: 
           ->org/springframework/kafka/listener/ConcurrentMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
      Execution Path: 
           ->org/springframework/kafka/listener/ConcurrentMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishIdleContainerEvent(JLorg/apache/kafka/clients/consumer/Consumer;Z)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.run()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke()V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.checkIdle()V
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;JLorg/apache/kafka/clients/consumer/Consumer;Z)V
               ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishIdleContainerEvent(JLorg/apache/kafka/clients/consumer/Consumer;Z)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.setClientIdSuffix(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/kafka/listener/ConcurrentMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.setClientIdSuffix(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Ljava/lang/String;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.<init>(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/springframework/kafka/listener/GenericMessageListener;Lorg/springframework/kafka/listener/ListenerType;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Ljava/lang/String;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.<init>(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/springframework/kafka/listener/GenericMessageListener;Lorg/springframework/kafka/listener/ListenerType;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.toString()Ljava/lang/String;
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Ljava/lang/String;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.<init>(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/springframework/kafka/listener/GenericMessageListener;Lorg/springframework/kafka/listener/ListenerType;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.checkGroupInstance(Ljava/util/Properties;Lorg/springframework/kafka/core/ConsumerFactory;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Ljava/lang/String;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerFailedToStart()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerFailedToStart()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.toString()Ljava/lang/String;
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.checkIdle()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishIdleContainerEvent(JLorg/apache/kafka/clients/consumer/Consumer;Z)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishNonResponsiveConsumerEvent(JLorg/apache/kafka/clients/consumer/Consumer;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.wrapUp()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStoppingEvent(Lorg/apache/kafka/clients/consumer/Consumer;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.getAssignedPartitions()Ljava/util/Collection;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.checkAckMode(Lorg/springframework/kafka/listener/ContainerProperties;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.checkAckMode(Lorg/springframework/kafka/listener/ContainerProperties;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.metrics()Ljava/util/Map;
      Execution Path: 
           ->org/springframework/kafka/listener/ConcurrentMessageListenerContainer.metrics()Ljava/util/Map;
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.metrics()Ljava/util/Map;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1200(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1200(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Ljava/util/Collection;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionOffset;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$700()Z
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.<init>(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/springframework/kafka/listener/GenericMessageListener;Lorg/springframework/kafka/listener/ListenerType;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.obtainMicrometerHolder()Lorg/springframework/kafka/listener/KafkaMessageListenerContainer$MicrometerHolder;
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$700()Z
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.determineListenerType(Lorg/springframework/kafka/listener/GenericMessageListener;)Lorg/springframework/kafka/listener/ListenerType;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.determineListenerType(Lorg/springframework/kafka/listener/GenericMessageListener;)Lorg/springframework/kafka/listener/ListenerType;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$900(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.run()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$900(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishNonResponsiveConsumerEvent(JLorg/apache/kafka/clients/consumer/Consumer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.checkConsumer()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$600(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;JLorg/apache/kafka/clients/consumer/Consumer;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishNonResponsiveConsumerEvent(JLorg/apache/kafka/clients/consumer/Consumer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.<clinit>()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<clinit>()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.lambda$null$0()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.lambda$null$0()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$600(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;JLorg/apache/kafka/clients/consumer/Consumer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$600(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;JLorg/apache/kafka/clients/consumer/Consumer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStoppedEvent()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1500(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStoppedEvent()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;JLorg/apache/kafka/clients/consumer/Consumer;Z)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1300(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;JLorg/apache/kafka/clients/consumer/Consumer;Z)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.doStop(Ljava/lang/Runnable;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.doStop(Ljava/lang/Runnable;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer$3.doInTransactionWithoutResult(Lorg/springframework/transaction/TransactionStatus;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.access$2000(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer;Lorg/apache/kafka/clients/consumer/ConsumerRecord;Lorg/apache/kafka/clients/producer/Producer;Ljava/util/Iterator;)Ljava/lang/RuntimeException;
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(Lorg/apache/kafka/clients/consumer/ConsumerRecord;Lorg/apache/kafka/clients/producer/Producer;Ljava/util/Iterator;)Ljava/lang/RuntimeException;
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(Lorg/apache/kafka/clients/consumer/ConsumerRecord;Lorg/apache/kafka/clients/producer/Producer;Ljava/util/Iterator;Ljava/lang/RuntimeException;)V
               ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeListener(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)V
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)V
               ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(Lorg/apache/kafka/clients/consumer/ConsumerRecord;Lorg/apache/kafka/clients/producer/Producer;Ljava/util/Iterator;)Ljava/lang/RuntimeException;
                ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(Lorg/apache/kafka/clients/consumer/ConsumerRecord;Lorg/apache/kafka/clients/producer/Producer;Ljava/util/Iterator;Ljava/lang/RuntimeException;)V
                 ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.<init>(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/springframework/kafka/listener/GenericMessageListener;Lorg/springframework/kafka/listener/ListenerType;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeListener(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(Lorg/apache/kafka/clients/consumer/ConsumerRecords;Ljava/util/List;Lorg/apache/kafka/clients/producer/Producer;)Ljava/lang/RuntimeException;
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(Lorg/apache/kafka/clients/consumer/ConsumerRecords;Ljava/util/List;Ljava/lang/RuntimeException;)V
               ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer$1.doInTransactionWithoutResult(Lorg/springframework/transaction/TransactionStatus;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.access$1800(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer;Lorg/apache/kafka/clients/consumer/ConsumerRecords;Ljava/util/List;Lorg/apache/kafka/clients/producer/Producer;)Ljava/lang/RuntimeException;
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(Lorg/apache/kafka/clients/consumer/ConsumerRecords;Ljava/util/List;Lorg/apache/kafka/clients/producer/Producer;)Ljava/lang/RuntimeException;
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(Lorg/apache/kafka/clients/consumer/ConsumerRecords;Ljava/util/List;Ljava/lang/RuntimeException;)V
               ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.run()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(Ljava/lang/Exception;)V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1000(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Ljava/lang/Runnable;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.run()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1000(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)Ljava/lang/Runnable;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStoppingEvent(Lorg/apache/kafka/clients/consumer/Consumer;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.run()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.wrapUp()V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1400(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Lorg/apache/kafka/clients/consumer/Consumer;)V
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStoppingEvent(Lorg/apache/kafka/clients/consumer/Consumer;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.doStart()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.doStart()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.toString()Ljava/lang/String;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.toString()Ljava/lang/String;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.parentOrThis()Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.parentOrThis()Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1100(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.pauseConsumerIfNecessary()V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1100(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Ljava/util/Collection;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStartedEvent()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$900(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerStartedEvent()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.lambda$new$1()V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.lambda$new$1()V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.setEmergencyStop(Ljava/lang/Runnable;)V
      Execution Path: 
           ->org/springframework/kafka/listener/ConcurrentMessageListenerContainer.doStart()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.setEmergencyStop(Ljava/lang/Runnable;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerResumedEvent(Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke()V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer.resumeConsumerIfNeccessary()V
             ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1200(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Ljava/util/Collection;)V
              ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerResumedEvent(Ljava/util/Collection;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerPausedEvent(Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.access$1100(Lorg/springframework/kafka/listener/KafkaMessageListenerContainer;Ljava/util/Collection;)V
            ->org/springframework/kafka/listener/KafkaMessageListenerContainer.publishConsumerPausedEvent(Ljava/util/Collection;)V
  Vulnerable Code: org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionInitialOffset;)V
      Execution Path: 
           ->org/springframework/kafka/listener/KafkaMessageListenerContainer.<init>(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Lorg/springframework/kafka/core/ConsumerFactory;Lorg/springframework/kafka/listener/ContainerProperties;[Lorg/springframework/kafka/support/TopicPartitionInitialOffset;)V
Vulnerability ID: CVE-2017-18640
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/util/DeserializationUtils.readYamlValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
             ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIV3Parser.readLocation(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
             ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
              ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
               ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
             ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
              ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
               ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readLocation(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/converter/SwaggerConverter.readResult(Lio/swagger/parser/util/SwaggerDeserializationResult;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
             ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
              ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
               ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
                ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                 ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                  ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                   ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/v3/parser/converter/SwaggerConverter.readResult(Lio/swagger/parser/util/SwaggerDeserializationResult;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
             ->io/swagger/v3/parser/OpenAPIV3Parser.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
              ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
               ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
                ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                 ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                  ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                   ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
             ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
              ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
             ->io/swagger/v3/parser/processors/ComponentsProcessor.processCallbacks(Ljava/util/Set;Ljava/util/Map;)V
              ->io/swagger/v3/parser/processors/CallbackProcessor.processCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
               ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
                ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
                 ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                  ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                   ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/OpenAPIResolver.resolve()Lio/swagger/v3/oas/models/OpenAPI;
            ->io/swagger/v3/parser/processors/PathsProcessor.processPaths()V
             ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
              ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
               ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processResponses(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
              ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processLinks(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLinks(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/v3/parser/processors/PathsProcessor.processReferencePath(Lio/swagger/v3/oas/models/PathItem;)Lio/swagger/v3/oas/models/PathItem;
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLinks(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLinks(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLink(Lio/swagger/v3/oas/models/links/Link;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalLink(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/CallbackProcessor.processCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
            ->io/swagger/v3/parser/processors/CallbackProcessor.processReferenceCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalCallback(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processRequestBodies(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
              ->io/swagger/v3/parser/processors/RequestBodyProcessor.processReferenceRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
             ->io/swagger/v3/parser/processors/RequestBodyProcessor.processReferenceRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processSecuritySchemes(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/SecuritySchemeProcessor.processSecurityScheme(Lio/swagger/v3/oas/models/security/SecurityScheme;)Lio/swagger/v3/oas/models/security/SecurityScheme;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSecurityScheme(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSecurityScheme(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/CallbackProcessor.processCallback(Lio/swagger/v3/oas/models/callbacks/Callback;)V
            ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processParameters(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalRequestBody(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processHeaders(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/LinkProcessor.processLink(Lio/swagger/v3/oas/models/links/Link;)V
            ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeaders(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeader(Lio/swagger/v3/oas/models/headers/Header;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeaders(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Ljava/util/List;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processExamples(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
            ->io/swagger/v3/parser/processors/ExampleProcessor.processExample(Lio/swagger/v3/oas/models/examples/Example;)V
             ->io/swagger/v3/parser/processors/ExampleProcessor.processReferenceExample(Lio/swagger/v3/oas/models/examples/Example;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExamples(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExample(Lio/swagger/v3/oas/models/examples/Example;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalExample(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/PathsProcessor.processReferencePath(Lio/swagger/v3/oas/models/PathItem;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/OperationProcessor.processOperation(Lio/swagger/v3/oas/models/Operation;)V
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processComposedSchema(Lio/swagger/v3/oas/models/media/ComposedSchema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameter(Lio/swagger/v3/oas/models/parameters/Parameter;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/HeaderProcessor.processHeader(Lio/swagger/v3/oas/models/headers/Header;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ComponentsProcessor.processComponents()V
            ->io/swagger/v3/parser/processors/ComponentsProcessor.processSchemas(Ljava/util/Set;Ljava/util/Map;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                 ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                  ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ResponseProcessor.processResponse(Lio/swagger/v3/oas/models/responses/ApiResponse;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/RequestBodyProcessor.processRequestBody(Lio/swagger/v3/oas/models/parameters/RequestBody;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processNotSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processArraySchema(Lio/swagger/v3/oas/models/media/ArraySchema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processPropertySchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processAdditionalProperties(Ljava/lang/Object;)V
             ->io/swagger/v3/parser/processors/SchemaProcessor.processSchemaType(Lio/swagger/v3/oas/models/media/Schema;)V
              ->io/swagger/v3/parser/processors/SchemaProcessor.processDiscriminatorSchema(Lio/swagger/v3/oas/models/media/Schema;)V
               ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processComposedSchema(Lio/swagger/v3/oas/models/media/ComposedSchema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processNotSchema(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processArraySchema(Lio/swagger/v3/oas/models/media/ArraySchema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processPropertySchema(Lio/swagger/v3/oas/models/media/Schema;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/SchemaProcessor.processAdditionalProperties(Ljava/lang/Object;)V
            ->io/swagger/v3/parser/processors/SchemaProcessor.processReferenceSchema(Lio/swagger/v3/oas/models/media/Schema;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefLink(Lio/swagger/v3/oas/models/links/Link;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefHeader(Lio/swagger/v3/oas/models/headers/Header;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
               ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processDiscriminator(Lio/swagger/v3/oas/models/media/Discriminator;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processDiscriminatorMapping(Ljava/util/Map;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
                ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                 ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefContent(Ljava/util/Map;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalParameter(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalHeader(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.lambda$processRefToExternalPathItem$1(Ljava/lang/String;Lio/swagger/v3/oas/models/parameters/Parameter;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalPathItem(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Lio/swagger/v3/oas/models/PathItem;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
              ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
               ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
                ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchema(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
             ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
              ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/v3/oas/models/media/Schema;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefExample(Lio/swagger/v3/oas/models/examples/Example;Ljava/lang/String;)V
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
            ->io/swagger/v3/parser/processors/ExternalRefProcessor.processRefToExternalSchema(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;)Ljava/lang/String;
             ->io/swagger/v3/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/v3/parser/models/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/v3/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readLocation(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;)Lio/swagger/parser/util/SwaggerDeserializationResult;
            ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/config/CodegenConfigurator.toClientOptInput()Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorService.generationRequest(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/v3/service/GeneratorService;
            ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
             ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;)Lio/swagger/models/Swagger;
              ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
               ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
                ->io/swagger/parser/processors/PathsProcessor.processPaths()V
                 ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                  ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                   ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                    ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                     ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                      ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                        ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                         ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                          ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/Codegen.main([Ljava/lang/String;)V
            ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.parse(Ljava/lang/String;)Lio/swagger/models/Swagger;
            ->io/swagger/parser/SwaggerParser.parse(Ljava/lang/String;Ljava/util/List;)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/v3/parser/converter/SwaggerConverter.readContents(Ljava/lang/String;Ljava/util/List;Lio/swagger/v3/parser/core/models/ParseOptions;)Lio/swagger/v3/parser/core/models/SwaggerParseResult;
            ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
             ->io/swagger/parser/processors/PathsProcessor.processPaths()V
              ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
               ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;)Lio/swagger/models/Swagger;
            ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/List;Z)Lio/swagger/models/Swagger;
              ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
               ->io/swagger/parser/processors/PathsProcessor.processPaths()V
                ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                  ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                   ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                    ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                     ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                        ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                         ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/codegen/v3/service/GeneratorUtil.getClientOptInputV2(Lio/swagger/codegen/v3/service/GenerationRequest;)Lio/swagger/codegen/ClientOptInput;
            ->io/swagger/parser/SwaggerParser.read(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/List;Z)Lio/swagger/models/Swagger;
             ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
              ->io/swagger/parser/processors/PathsProcessor.processPaths()V
               ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
                ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
                 ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
            ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
             ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
              ->io/swagger/parser/processors/ResponseProcessor.processReferenceResponse(Lio/swagger/models/RefResponse;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processObjectProperty(Lio/swagger/models/properties/ObjectProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processComposedProperty(Lio/swagger/models/properties/ComposedProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processArrayProperty(Lio/swagger/models/properties/ArrayProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
            ->io/swagger/parser/processors/PropertyProcessor.processMapProperty(Lio/swagger/models/properties/MapProperty;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
            ->io/swagger/parser/processors/ModelProcessor.processComposedModel(Lio/swagger/models/ComposedModel;)V
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ResponseProcessor.processResponse(Lio/swagger/models/Response;)V
            ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
             ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
              ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
               ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                 ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                  ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                      ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
            ->io/swagger/parser/processors/DefinitionsProcessor.processDefinitions()V
             ->io/swagger/parser/processors/DefinitionsProcessor.processDefinitions(Ljava/util/Set;Ljava/util/Map;)V
              ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
               ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
                ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                 ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                  ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                   ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                    ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                       ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                        ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/OperationProcessor.processOperation(Lio/swagger/models/Operation;)V
            ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/PathsProcessor.processPaths()V
            ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerResolver.resolve()Lio/swagger/models/Swagger;
            ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
             ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
              ->io/swagger/parser/processors/ModelProcessor.processModelImpl(Lio/swagger/models/ModelImpl;)V
               ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
                ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
                 ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                  ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                   ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                     ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                      ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                       ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
            ->io/swagger/parser/processors/ModelProcessor.processArrayModel(Lio/swagger/models/ArrayModel;)V
             ->io/swagger/parser/processors/PropertyProcessor.processProperty(Lio/swagger/models/properties/Property;)V
              ->io/swagger/parser/processors/PropertyProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processComposedProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefModel(Lio/swagger/models/RefModel;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalResponse(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/models/Model;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefModel(Lio/swagger/models/RefModel;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefModel(Lio/swagger/models/RefModel;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processDiscriminatorAsRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processComposedModel(Lio/swagger/models/ComposedModel;)V
            ->io/swagger/parser/processors/ModelProcessor.processRefModel(Lio/swagger/models/RefModel;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ModelProcessor.processModel(Lio/swagger/models/Model;)V
            ->io/swagger/parser/processors/ModelProcessor.processRefModel(Lio/swagger/models/RefModel;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
               ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
               ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processSchema(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processProperties(Ljava/util/Collection;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
               ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
                ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                 ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                    ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                     ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
            ->io/swagger/parser/processors/ExternalRefProcessor.processDiscriminator(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
             ->io/swagger/parser/processors/ExternalRefProcessor.processRefProperty(Lio/swagger/models/properties/RefProperty;Ljava/lang/String;)V
              ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
               ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
                ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                   ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                    ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ExternalRefProcessor.processRefSchemaObject(Lio/swagger/models/Model;Ljava/lang/String;)V
            ->io/swagger/parser/processors/ExternalRefProcessor.processRefToExternalDefinition(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;)Ljava/lang/String;
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
              ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                  ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/processors/ParameterProcessor.processParameters(Ljava/util/List;)Ljava/util/List;
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
             ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
            ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Lio/swagger/models/parameters/BodyParameter;)V
             ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Lio/swagger/models/RefModel;)V
              ->io/swagger/parser/ResolverCache.loadRef(Ljava/lang/String;Lio/swagger/models/refs/RefFormat;Ljava/lang/Class;)Ljava/lang/Object;
               ->io/swagger/parser/ResolverCache.deserialize(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->io/swagger/parser/util/DeserializationUtils.deserializeIntoTree(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                 ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                  ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                   ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
            ->io/swagger/parser/Swagger20Parser.readWithInfo(Ljava/lang/String;Ljava/util/List;)Lio/swagger/parser/util/SwaggerDeserializationResult;
             ->io/swagger/parser/Swagger20Parser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.read(Ljava/lang/String;Ljava/util/List;Z)Lio/swagger/models/Swagger;
            ->io/swagger/parser/Swagger20Parser.read(Ljava/lang/String;Ljava/util/List;)Lio/swagger/models/Swagger;
             ->io/swagger/parser/Swagger20Parser.convertToSwagger(Ljava/lang/String;)Lio/swagger/models/Swagger;
              ->io/swagger/parser/Swagger20Parser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.parse(Ljava/lang/String;Ljava/util/List;)Lio/swagger/models/Swagger;
            ->io/swagger/parser/Swagger20Parser.parse(Ljava/lang/String;)Lio/swagger/models/Swagger;
             ->io/swagger/parser/Swagger20Parser.convertToSwagger(Ljava/lang/String;)Lio/swagger/models/Swagger;
              ->io/swagger/parser/Swagger20Parser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
               ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
                ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
                 ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->io/swagger/parser/SwaggerParser.readWithInfo(Ljava/lang/String;Z)Lio/swagger/parser/util/SwaggerDeserializationResult;
            ->io/swagger/parser/SwaggerParser.deserializeYaml(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
             ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
              ->org/yaml/snakeyaml/Yaml.load(Ljava/lang/String;)Ljava/lang/Object;
               ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.load(Ljava/io/Reader;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseMap$0(Ljava/lang/String;)Ljava/util/Map;
            ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
             ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseList$1(Ljava/lang/String;)Ljava/util/List;
            ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
             ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.load(Ljava/io/InputStream;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAs(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
            ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
            ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.process(Lorg/springframework/beans/factory/config/YamlProcessor$MatchCallback;)V
            ->org/springframework/beans/factory/config/YamlProcessor.process(Lorg/springframework/beans/factory/config/YamlProcessor$MatchCallback;Lorg/yaml/snakeyaml/Yaml;Lorg/springframework/core/io/Resource;)Z
             ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
Vulnerability ID: GHSA-4g9r-vxhx-9pgx
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16([BI)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getCount()I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead()J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead()J
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveSummary.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.detectFormat(Ljava/io/File;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
              ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches([BI)Z
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.calculateChecksum([B)I
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.update([B)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.read([BII)I
              ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
             ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify([B)Z
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32([BI)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.close()V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.peek()[B
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.getIno([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize(IZ)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock(Z)V
            ->org/apache/commons/compress/archivers/dump/TapeInputStream.readFully([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveSummary.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/TapeInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextDumpEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.listStream(Ljava/io/File;[Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/Lister.createArchiveInputStream([Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                   ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                   ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                   ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.createArchiveInputStream([Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/io/InputStream;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
             ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
              ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
               ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
                ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
                 ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                  ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS()V
               ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
                ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
            ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
             ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI()V
             ->org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
              ->org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert64([BI)J
Vulnerability ID: GHSA-hgjh-9rj2-g67j
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/jetty/JettyWebSocketClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
            ->org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.uriComponents()Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/client/reactive/MockClientHttpRequest.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/web/savedrequest/CookieRequestCache.getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
            ->org/springframework/security/web/savedrequest/CookieRequestCache.getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.put(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.options(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.post(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.head(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->springfox/documentation/spring/web/PropertySourcedRequestMappingHandlerMapping.lookupHandlerMethod(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/method/HandlerMethod;
            ->org/springframework/web/util/UriTemplate.<init>(Ljava/lang/String;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/reactive/result/view/RedirectView.renderInternal(Ljava/util/Map;Lorg/springframework/http/MediaType;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
            ->org/springframework/web/reactive/result/view/RedirectView.sendRedirect(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
             ->org/springframework/web/reactive/result/view/RedirectView.isRemoteHost(Ljava/lang/String;)Z
              ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration.jwtDecoderByIssuerUri()Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.fromIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
             ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.withProviderConfiguration(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
              ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.withJwkSetUri(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
               ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$1;)V
                ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;)V
                 ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
                  ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                   ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                    ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                     ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                      ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.fromOidcIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.withProviderConfiguration(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
             ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.withJwkSetUri(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
              ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$1;)V
               ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;)V
                ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
                 ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                  ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                   ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                    ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                     ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/config/web/server/ServerJwtDsl$get$1.invoke(Ljava/lang/Object;)Ljava/lang/Object;
            ->org/springframework/security/config/web/server/ServerJwtDsl$get$1.invoke(Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;)V
             ->org/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec.jwkSetUri(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;
              ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.<init>(Ljava/lang/String;)V
               ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.withJwkSetUri(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
                ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$1;)V
                 ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;)V
                  ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
                   ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                    ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                     ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                      ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                       ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration.jwtDecoder()Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.withJwkSetUri(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
             ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$1;)V
              ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.<init>(Ljava/lang/String;)V
               ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
                ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                 ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                  ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                   ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                    ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder.<init>(Ljava/lang/String;)V
            ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.processor()Lorg/springframework/core/convert/converter/Converter;
             ->org/springframework/security/oauth2/jwt/ReactiveRemoteJWKSource.<init>(Ljava/lang/String;)V
              ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
               ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                 ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                  ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                   ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.withProviderConfiguration(Ljava/util/Map;Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.build()Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder;
             ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.processor()Lorg/springframework/core/convert/converter/Converter;
              ->org/springframework/security/oauth2/jwt/ReactiveRemoteJWKSource.<init>(Ljava/lang/String;)V
               ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
                ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                 ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                  ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                   ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                    ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration.jwtDecoder()Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.build()Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder;
             ->org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder.processor()Lorg/springframework/core/convert/converter/Converter;
              ->org/springframework/security/oauth2/jwt/ReactiveRemoteJWKSource.<init>(Ljava/lang/String;)V
               ->org/springframework/web/reactive/function/client/WebClient.create()Lorg/springframework/web/reactive/function/client/WebClient;
                ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.build()Lorg/springframework/web/reactive/function/client/WebClient;
                 ->org/springframework/web/reactive/function/client/DefaultWebClientBuilder.initUriBuilderFactory()Lorg/springframework/web/util/UriBuilderFactory;
                  ->org/springframework/web/util/DefaultUriBuilderFactory.<init>(Ljava/lang/String;)V
                   ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                    ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory.builder()Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.<init>(Lorg/springframework/web/util/DefaultUriBuilderFactory;Ljava/lang/String;)V
             ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/oauth2/core/endpoint/OAuth2AuthorizationRequest$Builder.build()Lorg/springframework/security/oauth2/core/endpoint/OAuth2AuthorizationRequest;
            ->org/springframework/security/oauth2/core/endpoint/OAuth2AuthorizationRequest$Builder.buildAuthorizationRequestUri()Ljava/lang/String;
             ->org/springframework/web/util/DefaultUriBuilderFactory.uriString(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
              ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.<init>(Lorg/springframework/web/util/DefaultUriBuilderFactory;Ljava/lang/String;)V
               ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory.expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriBuilderFactory.uriString(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
             ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.<init>(Lorg/springframework/web/util/DefaultUriBuilderFactory;Ljava/lang/String;)V
              ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory.expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriBuilderFactory.uriString(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
             ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.<init>(Lorg/springframework/web/util/DefaultUriBuilderFactory;Ljava/lang/String;)V
              ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/AbstractWebSocketClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/support/RequestContext.getContextUrl(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/view/RedirectView.renderMergedOutputModel(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/servlet/view/RedirectView.sendRedirect(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Z)V
             ->org/springframework/web/servlet/view/RedirectView.isRemoteHost(Ljava/lang/String;)Z
              ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/reactive/result/view/RequestContext.getContextUrl(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/client/match/MockRestRequestMatchers.requestToUriTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/client/RequestMatcher;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/standard/AnnotatedEndpointConnectionManager.<init>(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/socket/client/ConnectionManagerSupport.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/WebSocketConnectionManager.<init>(Lorg/springframework/web/socket/client/WebSocketClient;Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/socket/client/ConnectionManagerSupport.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/standard/AnnotatedEndpointConnectionManager.<init>(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/socket/client/ConnectionManagerSupport.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/standard/EndpointConnectionManager.<init>(Ljavax/websocket/Endpoint;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/socket/client/ConnectionManagerSupport.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/client/standard/EndpointConnectionManager.<init>(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/socket/client/ConnectionManagerSupport.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.expandInternal(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriTemplateHandler.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.expandInternal(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriTemplateHandler.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/messaging/WebSocketStompClient.connect(Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/socket/messaging/WebSocketStompClient.connect(Ljava/lang/String;Lorg/springframework/web/socket/WebSocketHttpHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
             ->org/springframework/web/socket/messaging/WebSocketStompClient.connect(Ljava/lang/String;Lorg/springframework/web/socket/WebSocketHttpHeaders;Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
              ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcResultMatchersDsl.forwardedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/test/web/servlet/result/MockMvcResultMatchers.forwardedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.post$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.post(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.post(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.multipart$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.multipart(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.multipart(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
                ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                 ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.fileUpload(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
            ->org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
             ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
               ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.delete$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.delete(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/setup/AbstractMockMvcBuilder.build()Lorg/springframework/test/web/servlet/MockMvc;
            ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
             ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
               ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.get$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.get(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.merge(Ljava/lang/Object;)Ljava/lang/Object;
            ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
             ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
               ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.put$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.put(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.put(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.options$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.options(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.options(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.patch$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.patch(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.head$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.head(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.head(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/MockMvcExtensionsKt.request$default(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
            ->org/springframework/test/web/servlet/MockMvcExtensionsKt.request(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
             ->org/springframework/test/web/servlet/request/MockMvcRequestBuilders.request(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
              ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
               ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
                ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/AbstractUriTemplateHandler.setBaseUrl(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/result/MockMvcResultMatchers.redirectedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/view/RedirectView.renderMergedOutputModel(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/servlet/support/RequestContextUtils.saveOutputFlashMap(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
             ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;)V
            ->org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.saveFlashAttributes(Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/String;)V
             ->org/springframework/web/servlet/support/RequestContextUtils.saveOutputFlashMap(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
              ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.getResourceListingPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
            ->springfox/documentation/spring/web/paths/AbstractPathProvider.agnosticUriComponentBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/OpaqueUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.getCallbackParam(Lorg/springframework/http/server/ServerHttpRequest;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
            ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/test/web/reactive/server/HttpHandlerConnector.lambda$doConnect$1(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lorg/springframework/mock/http/client/reactive/MockClientHttpRequest;Lorg/springframework/mock/http/server/reactive/MockServerHttpResponse;Lreactor/core/publisher/MonoProcessor;Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Mono;
            ->org/springframework/test/web/reactive/server/HttpHandlerConnector.adaptRequest(Lorg/springframework/mock/http/client/reactive/MockClientHttpRequest;Lorg/reactivestreams/Publisher;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
             ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
              ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
               ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
             ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/web/session/RequestedUrlRedirectInvalidSessionStrategy.onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/security/web/server/transport/HttpsRedirectWebFilter.createRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getInfoUrl()Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getTransportUrl(Lorg/springframework/web/socket/sockjs/transport/TransportType;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/OpaqueUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.parsePathIfNecessary(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->springfox/documentation/spring/web/paths/PathMappingAdjuster.adjustedPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents$FullPathComponent.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->springfox/documentation/spring/web/paths/PathMappingAdjuster.adjustedPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.agnosticUriComponentBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;)V
            ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.getOperationPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromController(Ljava/lang/Class;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromController(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.withController(Ljava/lang/Class;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromController(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.getOperationPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
             ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/WebUtils.isSameOrigin(Lorg/springframework/http/HttpRequest;)Z
            ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/cors/reactive/CorsUtils.isSameOrigin(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z
            ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/cors/CorsUtils.isCorsRequest(Ljavax/servlet/http/HttpServletRequest;)Z
            ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.contributeMethodArgument(Lorg/springframework/core/MethodParameter;Ljava/lang/Object;Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;Lorg/springframework/core/convert/ConversionService;)V
            ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.getCallbackParam(Lorg/springframework/http/server/ServerHttpRequest;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointHandlerMapping$WebFluxLinksHandler.links(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;
            ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/reactive/result/method/annotation/ServerWebExchangeMethodArgumentResolver.resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
            ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.fromIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.getConfigurationForIssuerLocation(Ljava/lang/String;)Ljava/util/Map;
             ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidcRfc8414(Ljava/net/URI;)Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwtConfiguration$JwtDecoderConfiguration.jwtDecoderByIssuerUri()Lorg/springframework/security/oauth2/jwt/JwtDecoder;
            ->org/springframework/security/oauth2/jwt/JwtDecoders.fromIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtDecoder;
             ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.getConfigurationForIssuerLocation(Ljava/lang/String;)Ljava/util/Map;
              ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidcRfc8414(Ljava/net/URI;)Ljava/net/URI;
               ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                   ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/reactive/function/server/DefaultServerRequest.uriBuilder()Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointHandlerMapping$WebFluxLinksHandler.links(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.getConfigurationForIssuerLocation(Ljava/lang/String;)Ljava/util/Map;
            ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oauth(Ljava/net/URI;)Ljava/net/URI;
             ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.getConfigurationForIssuerLocation(Ljava/lang/String;)Ljava/util/Map;
            ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidc(Ljava/net/URI;)Ljava/net/URI;
             ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoders.fromOidcIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtDecoder;
            ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.getConfigurationForOidcIssuerLocation(Ljava/lang/String;)Ljava/util/Map;
             ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidc(Ljava/net/URI;)Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/ReactiveJwtDecoders.fromOidcIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
            ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.getConfigurationForOidcIssuerLocation(Ljava/lang/String;)Ljava/util/Map;
             ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidc(Ljava/net/URI;)Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/web/server/transport/HttpsRedirectWebFilter.createRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/socket/sockjs/client/SockJsClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Lorg/springframework/web/socket/WebSocketHttpHeaders;Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
             ->org/springframework/web/socket/sockjs/client/SockJsClient.getServerInfo(Lorg/springframework/web/socket/sockjs/client/SockJsUrlInfo;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/socket/sockjs/client/SockJsClient$ServerInfo;
              ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getInfoUrl()Ljava/net/URI;
               ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                   ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.getUrlToUse()Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/DefaultTransportRequest.toString()Ljava/lang/String;
            ->org/springframework/web/socket/sockjs/client/DefaultTransportRequest.getTransportUrl()Ljava/net/URI;
             ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getTransportUrl(Lorg/springframework/web/socket/sockjs/transport/TransportType;)Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/AbstractXhrTransport.connect(Lorg/springframework/web/socket/sockjs/client/TransportRequest;Lorg/springframework/web/socket/WebSocketHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/socket/sockjs/client/XhrClientSockJsSession.<init>(Lorg/springframework/web/socket/sockjs/client/TransportRequest;Lorg/springframework/web/socket/WebSocketHandler;Lorg/springframework/web/socket/sockjs/client/XhrTransport;Lorg/springframework/util/concurrent/SettableListenableFuture;)V
             ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getTransportUrl(Lorg/springframework/web/socket/sockjs/transport/TransportType;)Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
                 ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                  ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/test/web/client/match/MockRestRequestMatchers.getQueryParams(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/util/MultiValueMap;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/reactive/result/method/annotation/ServerWebExchangeMethodArgumentResolver.resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/servlet/function/DefaultServerRequestBuilder$BuiltServerRequest.uriBuilder()Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/mock/web/reactive/function/server/MockServerRequest.uriBuilder()Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
                ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/servlet/support/AbstractFlashMapManager.getOriginatingRequestParams(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
            ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.getUrlToUse()Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
            ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/web/server/transport/HttpsRedirectWebFilter.createRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.port(I)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/web/session/RequestedUrlRedirectInvalidSessionStrategy.onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidcRfc8414(Ljava/net/URI;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oauth(Ljava/net/URI;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.parsePathIfNecessary(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidc(Ljava/net/URI;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/reactive/result/method/annotation/ServerWebExchangeMethodArgumentResolver.resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
            ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.getResourceListingPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/HierarchicalUriComponents$PathSegmentComponent.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.parsePathIfNecessary(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getInfoUrl()Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getTransportUrl(Lorg/springframework/web/socket/sockjs/transport/TransportType;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.encode()Lorg/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.getQueryParamValue(Ljava/lang/Object;)Ljava/lang/String;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.getQueryParamValue(Ljava/lang/Object;)Ljava/lang/String;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
      Execution Path: 
           ->org/springframework/web/util/OpaqueUriComponents.copyToUriComponentsBuilder(Lorg/springframework/web/util/UriComponentsBuilder;)V
            ->org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/server/adapter/HttpWebHandlerAdapter.handle(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lreactor/core/publisher/Mono;
            ->org/springframework/web/server/adapter/ForwardedHeaderTransformer.apply(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
             ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/server/adapter/ForwardedHeaderTransformer.apply(Ljava/lang/Object;)Ljava/lang/Object;
            ->org/springframework/web/server/adapter/ForwardedHeaderTransformer.apply(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
             ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->springfox/documentation/swagger2/web/Swagger2Controller.getDocumentation(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
            ->springfox/documentation/swagger/common/HostNameProvider.componentsFrom(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter.doFilterNestedErrorDispatch(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
            ->org/springframework/web/filter/ForwardedHeaderFilter.doFilterInternal(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
             ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingRequest.<init>(Ljavax/servlet/http/HttpServletRequest;)V
              ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.withMethodCall(Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodCall(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.buildAndExpand([Ljava/lang/Object;)Ljava/lang/String;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.access$300(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.build()Ljava/lang/String;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.access$300(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodName(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.withMethodName(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodName(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodCall(Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.withMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethod(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.applyContributors(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
               ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      Execution Path: 
           ->org/springframework/web/server/adapter/ForwardedHeaderTransformer.apply(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
            ->org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingRequest.<init>(Ljavax/servlet/http/HttpServletRequest;)V
            ->org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.lambda$buildInternal$0(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$buildInternal$0(Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.build(Ljava/util/Map;)Ljava/net/URI;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.uriComponents()Lorg/springframework/web/util/UriComponents;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.getResourceListingPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/security/web/savedrequest/CookieRequestCache.getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.getCallbackParam(Lorg/springframework/http/server/ServerHttpRequest;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriTemplate.<init>(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/reactive/result/view/RedirectView.isRemoteHost(Ljava/lang/String;)Z
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.parsePathIfNecessary(Lorg/springframework/web/util/UriComponentsBuilder;)V
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/view/RedirectView.isRemoteHost(Ljava/lang/String;)Z
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/server/support/OriginHandshakeInterceptor.beforeHandshake(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;Lorg/springframework/web/socket/WebSocketHandler;Ljava/util/Map;)Z
            ->org/springframework/web/util/WebUtils.isSameOrigin(Lorg/springframework/http/HttpRequest;)Z
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/server/support/OriginHandshakeInterceptor.beforeHandshake(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;Lorg/springframework/web/socket/WebSocketHandler;Ljava/util/Map;)Z
            ->org/springframework/web/util/WebUtils.isValidOrigin(Lorg/springframework/http/HttpRequest;Ljava/util/Collection;)Z
             ->org/springframework/web/util/WebUtils.isSameOrigin(Lorg/springframework/http/HttpRequest;)Z
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/support/AbstractSockJsService$InfoHandler.handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V
            ->org/springframework/web/socket/sockjs/support/AbstractSockJsService.checkOrigin(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;[Lorg/springframework/http/HttpMethod;)Z
             ->org/springframework/web/util/WebUtils.isValidOrigin(Lorg/springframework/http/HttpRequest;Ljava/util/Collection;)Z
              ->org/springframework/web/util/WebUtils.isSameOrigin(Lorg/springframework/http/HttpRequest;)Z
               ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/support/AbstractSockJsService.checkOrigin(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;[Lorg/springframework/http/HttpMethod;)Z
            ->org/springframework/web/util/WebUtils.isSameOrigin(Lorg/springframework/http/HttpRequest;)Z
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/support/RequestContext.getContextUrl(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/reactive/result/view/RequestContext.getContextUrl(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.expandInternal(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriTemplateHandler.expandAndEncode(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/security/web/server/transport/HttpsRedirectWebFilter.lambda$filter$1(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult;)Ljava/net/URI;
            ->org/springframework/security/web/server/transport/HttpsRedirectWebFilter.createRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Ljava/net/URI;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->springfox/documentation/swagger/common/HostNameProvider.componentsFrom(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/web/util/UriComponents;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->springfox/documentation/spring/web/paths/PathMappingDecorator$1.apply(Ljava/lang/Object;)Ljava/lang/Object;
            ->springfox/documentation/spring/web/paths/PathMappingDecorator$1.apply(Ljava/lang/String;)Ljava/lang/String;
             ->springfox/documentation/spring/web/paths/PathMappingAdjuster.adjustedPath(Ljava/lang/String;)Ljava/lang/String;
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/security/web/session/RequestedUrlRedirectInvalidSessionStrategy.onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointHandlerMapping$WebFluxLinksHandler.links(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
            ->org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointHandlerMapping$WebFluxLinksHandler.links(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;
             ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/client/jetty/JettyWebSocketClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/mock/http/client/reactive/MockClientHttpRequest.<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest.method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriTemplateHandler.expandInternal(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/DefaultUriTemplateHandler.expandAndEncode(Lorg/springframework/web/util/UriComponentsBuilder;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/client/AbstractWebSocketClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/client/match/MockRestRequestMatchers.requestToUriTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/client/RequestMatcher;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/client/ConnectionManagerSupport.<init>(Ljava/lang/String;[Ljava/lang/Object;)V
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.build()Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.body(Lorg/reactivestreams/Publisher;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;
             ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.getUrlToUse()Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
               ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.body(Ljava/lang/String;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;
            ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.body(Lorg/reactivestreams/Publisher;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;
             ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.getUrlToUse()Ljava/net/URI;
              ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
               ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/messaging/WebSocketStompClient.connect(Ljava/lang/String;Lorg/springframework/web/socket/WebSocketHttpHeaders;Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/servlet/result/MockMvcResultMatchers.forwardedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.initUri(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.buildAndExpand([Ljava/lang/Object;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/servlet/result/MockMvcResultMatchers.redirectedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsClient.doHandshake(Lorg/springframework/web/socket/WebSocketHandler;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
            ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/AbstractUriTemplateHandler.setBaseUrl(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/cors/reactive/DefaultCorsProcessor.process(Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/web/server/ServerWebExchange;)Z
            ->org/springframework/web/cors/reactive/CorsUtils.isCorsRequest(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z
             ->org/springframework/web/cors/reactive/CorsUtils.isSameOrigin(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/client/match/MockRestRequestMatchers.lambda$queryParam$6(Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/http/client/ClientHttpRequest;)V
            ->org/springframework/test/web/client/match/MockRestRequestMatchers.getQueryParams(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/util/MultiValueMap;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/test/web/client/match/MockRestRequestMatchers.lambda$queryParam$5(Ljava/lang/String;[Lorg/hamcrest/Matcher;Lorg/springframework/http/client/ClientHttpRequest;)V
            ->org/springframework/test/web/client/match/MockRestRequestMatchers.getQueryParams(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/util/MultiValueMap;
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse.sendRedirect(Ljava/lang/String;)V
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/cors/DefaultCorsProcessor.processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/springframework/web/cors/CorsUtils.isCorsRequest(Ljavax/servlet/http/HttpServletRequest;)Z
             ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.build()Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/support/AbstractFlashMapManager.retrieveAndUpdate(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/FlashMap;
            ->org/springframework/web/servlet/support/AbstractFlashMapManager.getMatchingFlashMap(Ljava/util/List;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/FlashMap;
             ->org/springframework/web/servlet/support/AbstractFlashMapManager.isFlashMapForRequest(Lorg/springframework/web/servlet/FlashMap;Ljavax/servlet/http/HttpServletRequest;)Z
              ->org/springframework/web/servlet/support/AbstractFlashMapManager.getOriginatingRequestParams(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
               ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingRequest.<init>(Ljavax/servlet/http/HttpServletRequest;)V
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.<init>(Ljava/lang/Class;Ljava/lang/reflect/Method;)V
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;)V
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.getPath()Ljava/lang/String;
              ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.withMappingName(Ljava/lang/String;)Lorg/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMappingName(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/String;)Lorg/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;)V
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.getPath()Ljava/lang/String;
               ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMappingName(Ljava/lang/String;)Lorg/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMappingName(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/String;)Lorg/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder;
             ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;)V
              ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.getPath()Ljava/lang/String;
               ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->springfox/documentation/spring/web/paths/AbstractPathProvider.getOperationPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/servlet/support/RequestContextUtils.saveOutputFlashMap(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
            ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromMethodInternal(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.getBaseUrlToUse(Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.fromController(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/lang/Class;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.getBaseUrlToUse(Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/web/util/UriComponentsBuilder;
             ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
              ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.cloneBuilder()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>(Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;)V
              ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<clinit>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<clinit>()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
            ->org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
            ->org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentRequestUri()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromRequestUri(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
               ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/security/web/session/RequestedUrlRedirectInvalidSessionStrategy.onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
               ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/function/DefaultServerRequest.uriBuilder()Lorg/springframework/web/util/UriBuilder;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
               ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentRequest()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
               ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->springfox/documentation/swagger/common/HostNameProvider.componentsFrom(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/web/util/UriComponents;
            ->springfox/documentation/swagger/common/HostNameProvider.fromServletMapping(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromContextPath(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
               ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
                ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentContextPath()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromContextPath(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
               ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromServletMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromContextPath(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
               ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
                ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.getBaseUrlToUse(Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentServletMapping()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromServletMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromContextPath(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
               ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
                ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
                 ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder$MethodArgumentBuilder.getPath()Ljava/lang/String;
            ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentServletMapping()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
             ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromServletMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
              ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromContextPath(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
               ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.initFromRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
                ->org/springframework/web/servlet/support/ServletUriComponentsBuilder.<init>()V
                 ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.<init>()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
            ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/server/adapter/ForwardedHeaderTransformer.apply(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
            ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getInfoUrl()Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder.getUrlToUse()Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/socket/sockjs/client/SockJsUrlInfo.getTransportUrl(Lorg/springframework/web/socket/sockjs/transport/TransportType;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidcRfc8414(Ljava/net/URI;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oauth(Ljava/net/URI;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/security/oauth2/jwt/JwtDecoderProviderConfigurationUtils.oidc(Ljava/net/URI;)Ljava/net/URI;
            ->org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/DefaultUriBuilderFactory$DefaultUriBuilder.initUriComponentsBuilder(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.isForwardedSslOn(Lorg/springframework/http/HttpHeaders;)Z
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.isForwardedSslOn(Lorg/springframework/http/HttpHeaders;)Z
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
            ->org/springframework/web/util/UriComponentsBuilder.encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
Vulnerability ID: CVE-2023-20873
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryReactiveHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryReactiveHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping$CloudFoundryLinksHandler.links(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping$CloudFoundryLinksHandler.links(Lorg/springframework/web/server/ServerWebExchange;)Lorg/reactivestreams/Publisher;
             ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$LinksHandler;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$LinksHandler;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping$CloudFoundryLinksHandler.lambda$links$0(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse;)Lorg/springframework/http/ResponseEntity;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.wrapServletWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.wrapServletWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityService;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
             ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityService;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping$CloudFoundryLinksHandler.links(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Map;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.<init>()V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.<init>()V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.<init>()V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.<init>()V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$LinksHandler;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$LinksHandler;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$200(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/apache/commons/logging/Log;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping$CloudFoundryLinksHandler.links(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Map;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping$CloudFoundryLinksHandler.sendFailureResponse(Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse;)V
             ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$200(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/apache/commons/logging/Log;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.wrapReactiveWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.wrapReactiveWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping$CloudFoundryLinksHandler.links(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Object;
            ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping$CloudFoundryLinksHandler.links(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Map;
             ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/HealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryHealthEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/HealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryHealthEndpointWebExtension;
Vulnerability ID: GHSA-ccgv-vj62-xf9h
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.getQueryParamValue(Ljava/lang/Object;)Ljava/lang/String;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.getQueryParamValue(Ljava/lang/Object;)Ljava/lang/String;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.lambda$buildInternal$0(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$buildInternal$0(Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<clinit>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<clinit>()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<init>()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.isForwardedSslOn(Lorg/springframework/http/HttpHeaders;)Z
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.isForwardedSslOn(Lorg/springframework/http/HttpHeaders;)Z
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
Vulnerability ID: CVE-2016-1000027
  Vulnerable Code: org/springframework/remoting/caucho/SimpleHessianServiceExporter.handle(Lcom/sun/net/httpserver/HttpExchange;)V
      Execution Path: 
           ->org/springframework/remoting/caucho/SimpleHessianServiceExporter.handle(Lcom/sun/net/httpserver/HttpExchange;)V
  Vulnerable Code: org/springframework/remoting/caucho/SimpleHessianServiceExporter.<init>()V
      Execution Path: 
           ->org/springframework/remoting/caucho/SimpleHessianServiceExporter.<init>()V
Vulnerability ID: CVE-2021-37136
  Vulnerable Code: io/netty/handler/codec/compression/Bzip2Decoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      Execution Path: 
           ->io/netty/handler/codec/compression/Bzip2Decoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
Vulnerability ID: CVE-2019-12402
  Vulnerable Code: org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
Vulnerability ID: CVE-2021-37137
  Vulnerable Code: io/netty/handler/codec/compression/SnappyFrameDecoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      Execution Path: 
           ->io/netty/handler/codec/compression/SnappyFrameDecoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
Vulnerability ID: GHSA-8qv5-68g4-248j
Vulnerability ID: GHSA-53x6-4x5p-rrvv
  Vulnerable Code: org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/NioZipEncoding.encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
Vulnerability ID: CVE-2023-3635
  Vulnerable Code: okio/GzipSource.consumeHeader()V
      Execution Path: 
           ->okio/GzipSource.read(Lokio/Buffer;J)J
            ->okio/GzipSource.consumeHeader()V
Vulnerability ID: GHSA-36p3-wjmg-h94x
Vulnerability ID: CVE-2020-25649
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
            ->com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer$NodeDeserializer.<init>()V
            ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer$DocumentDeserializer.<init>()V
            ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
Vulnerability ID: GHSA-jgwr-3qm3-26f3
  Vulnerable Code: org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile()Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile()Ljava/io/File;
  Vulnerable Code: org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile(Ljava/io/File;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/servlets/DefaultServlet.doHead(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/DefaultServlet.serveResource(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLjava/lang/String;)V
             ->org/apache/catalina/servlets/DefaultServlet.render(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Lorg/apache/catalina/WebResource;Ljava/lang/String;)Ljava/io/InputStream;
              ->org/apache/catalina/servlets/DefaultServlet.findXsltSource(Lorg/apache/catalina/WebResource;)Ljavax/xml/transform/Source;
               ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile()Ljava/io/File;
                ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile(Ljava/io/File;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/servlets/WebdavServlet.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/DefaultServlet.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
             ->org/apache/catalina/servlets/DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
              ->org/apache/catalina/servlets/DefaultServlet.serveResource(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLjava/lang/String;)V
               ->org/apache/catalina/servlets/DefaultServlet.render(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Lorg/apache/catalina/WebResource;Ljava/lang/String;)Ljava/io/InputStream;
                ->org/apache/catalina/servlets/DefaultServlet.findXsltSource(Lorg/apache/catalina/WebResource;)Ljavax/xml/transform/Source;
                 ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile()Ljava/io/File;
                  ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile(Ljava/io/File;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/servlets/DefaultServlet.doPost(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
             ->org/apache/catalina/servlets/DefaultServlet.serveResource(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLjava/lang/String;)V
              ->org/apache/catalina/servlets/DefaultServlet.render(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Lorg/apache/catalina/WebResource;Ljava/lang/String;)Ljava/io/InputStream;
               ->org/apache/catalina/servlets/DefaultServlet.findXsltSource(Lorg/apache/catalina/WebResource;)Ljavax/xml/transform/Source;
                ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile()Ljava/io/File;
                 ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile(Ljava/io/File;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/servlets/DefaultServlet.render(Ljava/lang/String;Lorg/apache/catalina/WebResource;Ljava/lang/String;)Ljava/io/InputStream;
            ->org/apache/catalina/servlets/DefaultServlet.render(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Lorg/apache/catalina/WebResource;Ljava/lang/String;)Ljava/io/InputStream;
             ->org/apache/catalina/servlets/DefaultServlet.findXsltSource(Lorg/apache/catalina/WebResource;)Ljavax/xml/transform/Source;
              ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile()Ljava/io/File;
               ->org/apache/catalina/servlets/DefaultServlet.validateGlobalXsltFile(Ljava/io/File;)Ljava/io/File;
  Vulnerable Code: org/apache/catalina/session/FileStore.file(Ljava/lang/String;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/session/FileStore.clear()V
            ->org/apache/catalina/session/FileStore.remove(Ljava/lang/String;)V
             ->org/apache/catalina/session/FileStore.file(Ljava/lang/String;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/session/FileStore.save(Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/session/FileStore.file(Ljava/lang/String;)Ljava/io/File;
      Execution Path: 
           ->org/apache/catalina/session/FileStore.load(Ljava/lang/String;)Lorg/apache/catalina/Session;
            ->org/apache/catalina/session/FileStore.file(Ljava/lang/String;)Ljava/io/File;
Vulnerability ID: GHSA-g5h3-w546-pj7f
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryReactiveHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryReactiveHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$LinksHandler;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$LinksHandler;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.wrapServletWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.wrapServletWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$ServletWebOperation;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityService;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCloudFoundrySecurityService(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityService;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryWebEndpointServletHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointsSupplier;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryWebFluxEndpointHandlerMapping(Lorg/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/reactive/function/client/WebClient$Builder;Lorg/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointsSupplier;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$000(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.<init>(Lorg/springframework/boot/actuate/endpoint/web/EndpointMapping;Ljava/util/Collection;Lorg/springframework/boot/actuate/endpoint/web/EndpointMediaTypes;Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;)V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.<init>()V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.<init>()V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.<init>()V
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.<init>()V
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$LinksHandler;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.getLinksHandler()Lorg/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping$LinksHandler;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$200(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/apache/commons/logging/Log;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$200(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/apache/commons/logging/Log;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getSecurityInterceptor(Lorg/springframework/boot/web/client/RestTemplateBuilder;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundrySecurityInterceptor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryInfoEndpointWebExtension(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtension;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.getCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.lambda$cloudFoundryInfoEndpointWebExtension$0(Lorg/springframework/boot/info/GitProperties;Lorg/springframework/boot/actuate/info/InfoContributor;)Lorg/springframework/boot/actuate/info/InfoContributor;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.wrapReactiveWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.wrapReactiveWebOperation(Lorg/springframework/boot/actuate/endpoint/web/ExposableWebEndpoint;Lorg/springframework/boot/actuate/endpoint/web/WebOperation;Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;)Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.access$100(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping;)Lorg/springframework/boot/actuate/endpoint/web/EndpointLinksResolver;
  Vulnerable Code: org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/HealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryHealthEndpointWebExtension;
      Execution Path: 
           ->org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.cloudFoundryHealthEndpointWebExtension(Lorg/springframework/boot/actuate/health/HealthEndpointWebExtension;)Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryHealthEndpointWebExtension;
Vulnerability ID: GHSA-j39c-c8hj-x4j3
Vulnerability ID: CVE-2021-46877
  Vulnerable Code: com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
Vulnerability ID: CVE-2021-36090
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read()I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([B)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read()I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/CommandLineTextExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createEncryptedOOXMLExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbededDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbeddedDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/ooxml/extractor/ExtractorFactory.createEncryptedOOXMLExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
               ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XMLSlideShow.<init>()V
            ->org/apache/poi/xslf/usermodel/XMLSlideShow.empty()Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xwpf/usermodel/XWPFDocument.<init>(Ljava/io/InputStream;)V
            ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Lorg/apache/poi/openxml4j/opc/PackagePart;)V
            ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.plot(Lorg/apache/poi/xddf/usermodel/chart/XDDFChartData;)V
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.formatRange(Lorg/apache/poi/ss/util/CellRangeAddress;)Ljava/lang/String;
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xddf/usermodel/chart/XDDFChart.setSheetTitle(Ljava/lang/String;I)Lorg/apache/poi/ss/util/CellReference;
            ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getSheet()Lorg/apache/poi/xssf/usermodel/XSSFSheet;
             ->org/apache/poi/xddf/usermodel/chart/XDDFChart.getWorkbook()Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
              ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/InputStream;)V
               ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XMLSlideShow.<init>(Ljava/io/InputStream;)V
            ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/util/HierarchyPrinter.main([Ljava/lang/String;)V
            ->org/apache/poi/xdgf/usermodel/XmlVisioDocument.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/util/VsdxToPng.main([Ljava/lang/String;)V
            ->org/apache/poi/xdgf/usermodel/XmlVisioDocument.<init>(Ljava/io/InputStream;)V
             ->org/apache/poi/ooxml/util/PackageHelper.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbookFactory.createWorkbook(Ljava/io/InputStream;)Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFMetroShape.parseShape([B)Lorg/apache/poi/sl/usermodel/Shape;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFSlideShowFactory.createSlideShow(Ljava/io/InputStream;)Lorg/apache/poi/xslf/usermodel/XMLSlideShow;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
               ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/InputStream;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/POIFSFileSystem;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                 ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.getEmbeddedDocsTextExtractors(Lorg/apache/poi/extractor/POIOLE2TextExtractor;)[Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Lorg/apache/poi/poifs/filesystem/DirectoryNode;)Lorg/apache/poi/extractor/POITextExtractor;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                 ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                  ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/extractor/ExtractorFactory.createExtractor(Ljava/io/File;)Lorg/apache/poi/extractor/POITextExtractor;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/ooxml/util/PackageHelper.clone(Lorg/apache/poi/openxml4j/opc/OPCPackage;Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                    ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/OPCPackage.openOrCreate(Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                    ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xdgf/extractor/XDGFVisioExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/POIXMLDocument.openPackage(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xwpf/extractor/XWPFWordExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/ooxml/POIXMLDocument.openPackage(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/extractor/XSSFBEventBasedExcelExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/xssf/extractor/XSSFBEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
             ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                     ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                      ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                        ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.main([Ljava/lang/String;)V
            ->org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.<init>(Ljava/lang/String;)V
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
               ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/lang/String;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                   ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                    ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                     ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                      ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                       ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbookFactory.createWorkbook(Ljava/io/File;Z)Lorg/apache/poi/xssf/usermodel/XSSFWorkbook;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xssf/usermodel/XSSFWorkbook.<init>(Ljava/io/File;)V
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
              ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                  ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                   ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                     ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/xslf/usermodel/XSLFSlideShowFactory.createSlideShow(Ljava/io/File;Z)Lorg/apache/poi/xslf/usermodel/XMLSlideShow;
            ->org/apache/poi/openxml4j/opc/OPCPackage.open(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)Lorg/apache/poi/openxml4j/opc/OPCPackage;
             ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/File;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
              ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/File;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
               ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
                 ->org/apache/poi/openxml4j/util/ZipInputStreamZipEntrySource.<init>(Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;)V
                  ->org/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                   ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
                    ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/SXSSFWorkbookWithCustomZipEntrySource.write(Ljava/io/OutputStream;)V
            ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.createZipEntrySource(Ljava/io/InputStream;)Lorg/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource;
             ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches([BI)Z
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/ZipPackage.openZipEntrySourceStream(Ljava/io/FileInputStream;)Lorg/apache/poi/openxml4j/util/ZipEntrySource;
            ->org/apache/poi/openxml4j/opc/internal/ZipHelper.openZipStream(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/openxml4j/opc/ZipPackage.<init>(Ljava/io/InputStream;Lorg/apache/poi/openxml4j/opc/PackageAccess;)V
            ->org/apache/poi/openxml4j/opc/internal/ZipHelper.openZipStream(Ljava/io/InputStream;)Lorg/apache/poi/openxml4j/util/ZipArchiveThresholdInputStream;
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
                ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/poi/poifs/crypt/temp/AesZipFileZipEntrySource.copyToFile(Ljava/io/InputStream;Ljava/io/File;[B[B)V
            ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/jar/JarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
               ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
Vulnerability ID: GHSA-288c-cq4h-88gq
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
Vulnerability ID: GHSA-hfrx-6qgj-fp6c
Vulnerability ID: CVE-2023-34454
  Vulnerable Code: org/xerial/snappy/Snappy.compress([D)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([D)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress([C)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([C)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress([B)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress(Ljava/lang/String;)[B
            ->org/xerial/snappy/Snappy.compress(Ljava/lang/String;Ljava/lang/String;)[B
             ->org/xerial/snappy/Snappy.compress([B)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress(Ljava/lang/String;Ljava/nio/charset/Charset;)[B
            ->org/xerial/snappy/Snappy.compress([B)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress([F)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([F)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress([I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([I)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.close()V
            ->org/xerial/snappy/SnappyOutputStream.flush()V
             ->org/xerial/snappy/SnappyOutputStream.compressInput()V
              ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write([BII)V
            ->org/xerial/snappy/SnappyOutputStream.compressInput()V
             ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write([F)V
            ->org/xerial/snappy/SnappyOutputStream.write([FII)V
             ->org/xerial/snappy/SnappyOutputStream.rawWrite(Ljava/lang/Object;II)V
              ->org/xerial/snappy/SnappyOutputStream.compressInput()V
               ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write([D)V
            ->org/xerial/snappy/SnappyOutputStream.write([DII)V
             ->org/xerial/snappy/SnappyOutputStream.rawWrite(Ljava/lang/Object;II)V
              ->org/xerial/snappy/SnappyOutputStream.compressInput()V
               ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write([S)V
            ->org/xerial/snappy/SnappyOutputStream.write([SII)V
             ->org/xerial/snappy/SnappyOutputStream.rawWrite(Ljava/lang/Object;II)V
              ->org/xerial/snappy/SnappyOutputStream.compressInput()V
               ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write([J)V
            ->org/xerial/snappy/SnappyOutputStream.write([JII)V
             ->org/xerial/snappy/SnappyOutputStream.rawWrite(Ljava/lang/Object;II)V
              ->org/xerial/snappy/SnappyOutputStream.compressInput()V
               ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write([I)V
            ->org/xerial/snappy/SnappyOutputStream.write([III)V
             ->org/xerial/snappy/SnappyOutputStream.rawWrite(Ljava/lang/Object;II)V
              ->org/xerial/snappy/SnappyOutputStream.compressInput()V
               ->org/xerial/snappy/Snappy.compress([BII[BI)I
      Execution Path: 
           ->org/xerial/snappy/SnappyOutputStream.write(I)V
            ->org/xerial/snappy/SnappyOutputStream.compressInput()V
             ->org/xerial/snappy/Snappy.compress([BII[BI)I
  Vulnerable Code: org/xerial/snappy/Snappy.compress(Ljava/lang/String;)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress(Ljava/lang/String;)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress(Ljava/lang/String;Ljava/nio/charset/Charset;)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress(Ljava/lang/String;Ljava/nio/charset/Charset;)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/SnappyFramedOutputStream.transferFrom(Ljava/nio/channels/ReadableByteChannel;)J
            ->org/xerial/snappy/SnappyFramedOutputStream.flushBuffer()V
             ->org/xerial/snappy/SnappyFramedOutputStream.writeCompressed(Ljava/nio/ByteBuffer;)V
              ->org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/SnappyFramedOutputStream.close()V
            ->org/xerial/snappy/SnappyFramedOutputStream.flush()V
             ->org/xerial/snappy/SnappyFramedOutputStream.flushBuffer()V
              ->org/xerial/snappy/SnappyFramedOutputStream.writeCompressed(Ljava/nio/ByteBuffer;)V
               ->org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/SnappyFramedOutputStream.write(I)V
            ->org/xerial/snappy/SnappyFramedOutputStream.flushBuffer()V
             ->org/xerial/snappy/SnappyFramedOutputStream.writeCompressed(Ljava/nio/ByteBuffer;)V
              ->org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/SnappyFramedOutputStream.write(Ljava/nio/ByteBuffer;)I
            ->org/xerial/snappy/SnappyFramedOutputStream.flushBuffer()V
             ->org/xerial/snappy/SnappyFramedOutputStream.writeCompressed(Ljava/nio/ByteBuffer;)V
              ->org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/SnappyFramedOutputStream.write([BII)V
            ->org/xerial/snappy/SnappyFramedOutputStream.flushBuffer()V
             ->org/xerial/snappy/SnappyFramedOutputStream.writeCompressed(Ljava/nio/ByteBuffer;)V
              ->org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/SnappyFramedOutputStream.transferFrom(Ljava/io/InputStream;)J
            ->org/xerial/snappy/SnappyFramedOutputStream.flushBuffer()V
             ->org/xerial/snappy/SnappyFramedOutputStream.writeCompressed(Ljava/nio/ByteBuffer;)V
              ->org/xerial/snappy/Snappy.compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;II[BI)I
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([BII[BI)I
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;II[BI)I
  Vulnerable Code: org/xerial/snappy/Snappy.compress(Ljava/lang/String;Ljava/lang/String;)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress(Ljava/lang/String;Ljava/lang/String;)[B
  Vulnerable Code: org/xerial/snappy/Snappy.rawCompress(JJJ)J
      Execution Path: 
           ->org/xerial/snappy/Snappy.rawCompress(JJJ)J
  Vulnerable Code: org/xerial/snappy/Snappy.compress([J)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([J)[B
  Vulnerable Code: org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([B)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([D)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([C)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([F)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([I)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([J)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([S)[B
            ->org/xerial/snappy/Snappy.rawCompress(Ljava/lang/Object;I)[B
  Vulnerable Code: org/xerial/snappy/Snappy.compress([S)[B
      Execution Path: 
           ->org/xerial/snappy/Snappy.compress([S)[B
Vulnerability ID: CVE-2023-34453
  Vulnerable Code: org/xerial/snappy/BitShuffle.shuffle([F)[B
      Execution Path: 
           ->org/xerial/snappy/BitShuffle.shuffle([F)[B
  Vulnerable Code: org/xerial/snappy/BitShuffle.shuffle([I)[B
      Execution Path: 
           ->org/xerial/snappy/BitShuffle.shuffle([I)[B
  Vulnerable Code: org/xerial/snappy/BitShuffle.shuffle([D)[B
      Execution Path: 
           ->org/xerial/snappy/BitShuffle.shuffle([D)[B
  Vulnerable Code: org/xerial/snappy/BitShuffle.shuffle(Ljava/nio/ByteBuffer;Lorg/xerial/snappy/BitShuffleType;Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/xerial/snappy/BitShuffle.shuffle(Ljava/nio/ByteBuffer;Lorg/xerial/snappy/BitShuffleType;Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/xerial/snappy/BitShuffle.shuffle([J)[B
      Execution Path: 
           ->org/xerial/snappy/BitShuffle.shuffle([J)[B
  Vulnerable Code: org/xerial/snappy/BitShuffle.shuffle([S)[B
      Execution Path: 
           ->org/xerial/snappy/BitShuffle.shuffle([S)[B
Vulnerability ID: GHSA-2f88-5hg8-9x2x
  Vulnerable Code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
      Execution Path: 
           ->org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
  Vulnerable Code: org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
      Execution Path: 
           ->org/apache/maven/repository/DefaultMirrorSelector.getMirror(Lorg/apache/maven/artifact/repository/ArtifactRepository;Ljava/util/List;)Lorg/apache/maven/settings/Mirror;
            ->org/apache/maven/repository/DefaultMirrorSelector.matchPattern(Lorg/apache/maven/artifact/repository/ArtifactRepository;Ljava/lang/String;)Z
             ->org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
Vulnerability ID: CVE-2022-1471
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
            ->org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor$FilteringConstructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
            ->org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/CustomClassLoaderConstructor.<init>(Ljava/lang/ClassLoader;)V
            ->org/yaml/snakeyaml/constructor/CustomClassLoaderConstructor.<init>(Ljava/lang/Class;Ljava/lang/ClassLoader;)V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/extensions/compactnotation/PackageCompactConstructor.<init>(Ljava/lang/String;)V
            ->org/yaml/snakeyaml/extensions/compactnotation/CompactConstructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
                ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/LoaderOptions;)V
            ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseMap$0(Ljava/lang/String;)Ljava/util/Map;
            ->org/yaml/snakeyaml/Yaml.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
                ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/boot/json/YamlJsonParser.lambda$parseList$1(Ljava/lang/String;)Ljava/util/List;
            ->org/yaml/snakeyaml/Yaml.<init>()V
             ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
                ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/springframework/boot/env/OriginTrackedYamlLoader$OriginTrackingConstructor.<init>(Lorg/springframework/boot/env/OriginTrackedYamlLoader;Lorg/springframework/boot/env/OriginTrackedYamlLoader$1;)V
             ->org/springframework/boot/env/OriginTrackedYamlLoader$OriginTrackingConstructor.<init>(Lorg/springframework/boot/env/OriginTrackedYamlLoader;)V
              ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
               ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
                ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
                 ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
            ->org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.construct(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.getConstructor(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
             ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.construct2ndStep(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)V
            ->org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject.getConstructor(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
             ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
            ->org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
Vulnerability ID: GHSA-rhgr-952r-6p8q
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutionPreamble()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutionPreamble()Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.<init>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.setDefaultShell()V
            ->org/apache/maven/shared/utils/cli/shell/CmdShell.<init>()V
             ->org/apache/maven/shared/utils/cli/shell/Shell.<init>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.setDefaultShell()V
            ->org/apache/maven/shared/utils/cli/shell/CommandShell.<init>()V
             ->org/apache/maven/shared/utils/cli/shell/Shell.<init>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.<init>()V
            ->org/apache/maven/shared/utils/cli/shell/Shell.<init>()V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setShellArgs([Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setShellArgs([Ljava/lang/String;)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.<init>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.<init>(Ljava/lang/String;)V
            ->org/apache/maven/shared/utils/cli/Commandline.setDefaultShell()V
             ->org/apache/maven/shared/utils/cli/shell/BourneShell.<init>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.<init>()V
            ->org/apache/maven/shared/utils/cli/Commandline.setDefaultShell()V
             ->org/apache/maven/shared/utils/cli/shell/BourneShell.<init>()V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.isSingleQuotedArgumentEscaped()Z
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.isSingleQuotedArgumentEscaped()Z
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getShellArgs()[Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getShellArgs()[Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getShellArgs()[Ljava/lang/String;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getShellArgs()[Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.getShellArgsList()Ljava/util/List;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getShellArgsList()Ljava/util/List;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getEscapeChars(ZZ)[C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getEscapeChars(ZZ)[C
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setArgumentQuoteDelimiter(C)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setArgumentQuoteDelimiter(C)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.isQuotedArgumentsEnabled()Z
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.isQuotedArgumentsEnabled()Z
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setExecutableQuoteDelimiter(C)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setExecutableQuoteDelimiter(C)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/CmdShell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
             ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
              ->org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/javatool/AbstractJavaTool.execute(Lorg/apache/maven/shared/utils/cli/javatool/JavaToolRequest;)Lorg/apache/maven/shared/utils/cli/javatool/JavaToolResult;
            ->org/apache/maven/shared/utils/cli/javatool/AbstractJavaTool.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Lorg/apache/maven/shared/utils/cli/javatool/JavaToolRequest;)Lorg/apache/maven/shared/utils/cli/javatool/JavaToolResult;
             ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;)I
              ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;I)I
               ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;)I
                ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)I
                 ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLineAsCallable(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)Lorg/apache/maven/shared/utils/cli/CommandLineCallable;
                  ->org/apache/maven/shared/utils/cli/Commandline.execute()Ljava/lang/Process;
                   ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline()[Ljava/lang/String;
                    ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline(Z)[Ljava/lang/String;
                     ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
                      ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                       ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                        ->org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;I)I
            ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;I)I
             ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;)I
              ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)I
               ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLineAsCallable(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)Lorg/apache/maven/shared/utils/cli/CommandLineCallable;
                ->org/apache/maven/shared/utils/cli/Commandline.execute()Ljava/lang/Process;
                 ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline()[Ljava/lang/String;
                  ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline(Z)[Ljava/lang/String;
                   ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
                    ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                     ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                      ->org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;)I
            ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;I)I
             ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;)I
              ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLine(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)I
               ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLineAsCallable(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)Lorg/apache/maven/shared/utils/cli/CommandLineCallable;
                ->org/apache/maven/shared/utils/cli/Commandline.execute()Ljava/lang/Process;
                 ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline()[Ljava/lang/String;
                  ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline(Z)[Ljava/lang/String;
                   ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
                    ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                     ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                      ->org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLineAsCallable(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;)Lorg/apache/maven/shared/utils/cli/CommandLineCallable;
            ->org/apache/maven/shared/utils/cli/CommandLineUtils.executeCommandLineAsCallable(Lorg/apache/maven/shared/utils/cli/Commandline;Ljava/io/InputStream;Lorg/apache/maven/shared/utils/cli/StreamConsumer;Lorg/apache/maven/shared/utils/cli/StreamConsumer;ILjava/lang/Runnable;Ljava/nio/charset/Charset;)Lorg/apache/maven/shared/utils/cli/CommandLineCallable;
             ->org/apache/maven/shared/utils/cli/Commandline.execute()Ljava/lang/Process;
              ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline()[Ljava/lang/String;
               ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline(Z)[Ljava/lang/String;
                ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
                 ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                  ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                   ->org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.toString()Ljava/lang/String;
            ->org/apache/maven/shared/utils/cli/Commandline.getShellCommandline(Z)[Ljava/lang/String;
             ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
              ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
               ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
                ->org/apache/maven/shared/utils/cli/shell/Shell.getArgumentQuoteDelimiter()C
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.unifyQuotes(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutable()Ljava/lang/String;
            ->org/apache/maven/shared/utils/cli/shell/BourneShell.unifyQuotes(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutionPreamble()Ljava/lang/String;
            ->org/apache/maven/shared/utils/cli/shell/BourneShell.unifyQuotes(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getExecutionPreamble()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getExecutionPreamble()Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setWorkingDirectory(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.setWorkingDirectory(Ljava/lang/String;)V
            ->org/apache/maven/shared/utils/cli/shell/Shell.setWorkingDirectory(Ljava/lang/String;)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.getShellArgs()[Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getShellArgs()[Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setQuotedArgumentsEnabled(Z)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setQuotedArgumentsEnabled(Z)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.clone()Ljava/lang/Object;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.clone()Ljava/lang/Object;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setWorkingDirectory(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.setWorkingDirectory(Ljava/io/File;)V
            ->org/apache/maven/shared/utils/cli/shell/Shell.setWorkingDirectory(Ljava/io/File;)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutable()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutable()Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.isDoubleQuotedExecutableEscaped()Z
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.isDoubleQuotedExecutableEscaped()Z
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getQuotingTriggerChars()[C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getQuotingTriggerChars()[C
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.isSingleQuotedExecutableEscaped()Z
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.isSingleQuotedExecutableEscaped()Z
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.<clinit>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.<clinit>()V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.<clinit>()V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.<clinit>()V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getWorkingDirectory()Ljava/io/File;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.execute()Ljava/lang/Process;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getWorkingDirectory()Ljava/io/File;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.getWorkingDirectory()Ljava/io/File;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getWorkingDirectory()Ljava/io/File;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setQuotedExecutableEnabled(Z)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setQuotedExecutableEnabled(Z)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getExecutable()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getExecutable()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getExecutable()Ljava/lang/String;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getExecutable()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.getCommandline()[Ljava/lang/String;
            ->org/apache/maven/shared/utils/cli/Commandline.getExecutable()Ljava/lang/String;
             ->org/apache/maven/shared/utils/cli/shell/Shell.getExecutable()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getExecutable()Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getExecutableQuoteDelimiter()C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getExecutableQuoteDelimiter()C
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getShellCommand()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommand()Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/BourneShell.getQuotingTriggerChars()[C
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getQuotingTriggerChars()[C
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setSingleQuotedExecutableEscaped(Z)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setSingleQuotedExecutableEscaped(Z)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getWorkingDirectoryAsString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getWorkingDirectoryAsString()Ljava/lang/String;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setShellCommand(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setShellCommand(Ljava/lang/String;)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.isQuotedExecutableEnabled()Z
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.isQuotedExecutableEnabled()Z
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.isDoubleQuotedArgumentEscaped()Z
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getRawCommandLine(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.isDoubleQuotedArgumentEscaped()Z
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setExecutable(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/Commandline.<init>(Ljava/lang/String;)V
            ->org/apache/maven/shared/utils/cli/Commandline.setExecutable(Ljava/lang/String;)V
             ->org/apache/maven/shared/utils/cli/shell/Shell.setExecutable(Ljava/lang/String;)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.setSingleQuotedArgumentEscaped(Z)V
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.setSingleQuotedArgumentEscaped(Z)V
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getShellArgsList()Ljava/util/List;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/BourneShell.getShellArgsList()Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getShellArgsList()Ljava/util/List;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
            ->org/apache/maven/shared/utils/cli/shell/Shell.getShellArgsList()Ljava/util/List;
  Vulnerable Code: org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
      Execution Path: 
           ->org/apache/maven/shared/utils/cli/shell/Shell.getShellCommandLine([Ljava/lang/String;)Ljava/util/List;
Vulnerability ID: GHSA-3x8x-79m2-3w2w
  Vulnerable Code: com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/node/NodeSerialization.readExternal(Ljava/io/ObjectInput;)V
Vulnerability ID: GHSA-rgv9-q543-rqg4
Vulnerability ID: CVE-2023-20883
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
            ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
            ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
             ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
            ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
Vulnerability ID: CVE-2021-35517
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.writePaxHeaders(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/command/CopyArchiveToContainerCmdImpl.exec()Ljava/lang/Object;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/CopyArchiveToContainerCmdImpl.exec()Ljava/lang/Void;
             ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.tar(Ljava/nio/file/Path;Ljava/nio/file/Path;ZZ)V
              ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                  ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.visitFile(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
            ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
             ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lcom/github/dockerjava/api/command/BuildImageCmd;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lorg/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl;
             ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar()Ljava/io/InputStream;
              ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar(Ljava/io/File;)Ljava/io/InputStream;
               ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.archiveTARFiles(Ljava/io/File;Ljava/lang/Iterable;Ljava/lang/String;)Ljava/io/File;
                ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                  ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                   ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                    ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/DockerClientImpl.buildImageCmd(Ljava/io/File;)Lcom/github/dockerjava/api/command/BuildImageCmd;
            ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.<init>(Lcom/github/dockerjava/api/command/BuildImageCmd$Exec;Ljava/io/File;)V
             ->org/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl.withDockerfile(Ljava/io/File;)Lorg/testcontainers/shaded/com/github/dockerjava/core/command/BuildImageCmdImpl;
              ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar()Ljava/io/InputStream;
               ->org/testcontainers/shaded/com/github/dockerjava/core/dockerfile/Dockerfile$ScannedResult.buildDockerFolderTar(Ljava/io/File;)Ljava/io/InputStream;
                ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.archiveTARFiles(Ljava/io/File;Ljava/lang/Iterable;Ljava/lang/String;)Ljava/io/File;
                 ->org/testcontainers/shaded/com/github/dockerjava/core/util/CompressArchiveUtil.addFileToTar(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/nio/file/Path;Ljava/lang/String;)V
                  ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
                   ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                    ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                     ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.preVisitDirectory(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
            ->org/testcontainers/shaded/com/github/dockerjava/core/util/TarDirWalker.preVisitDirectory(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
            ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/utility/MountableFile.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
            ->org/testcontainers/utility/MountableFile.recursiveTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.handleLongName(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z
             ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileToContainer(Lorg/testcontainers/utility/MountableFile;Ljava/lang/String;)V
            ->org/testcontainers/containers/ContainerState.copyFileToContainer(Lorg/testcontainers/images/builder/Transferable;Ljava/lang/String;)V
             ->org/testcontainers/images/builder/Transferable.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/testcontainers/images/builder/ImageFromDockerfile.resolve()Ljava/lang/Object;
            ->org/testcontainers/images/builder/ImageFromDockerfile.resolve()Ljava/lang/String;
             ->org/testcontainers/images/builder/Transferable.transferTo(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
                 ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
              ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField(J[BIIZ)I
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
              ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
               ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField(J[BIIZ)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
             ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
             ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/testcontainers/containers/VncRecordingContainer.saveRecordingToFile(Ljava/io/File;)V
            ->org/testcontainers/containers/VncRecordingContainer.streamRecording()Ljava/io/InputStream;
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                 ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                  ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Ljava/lang/String;)V
            ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
               ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
                ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
                 ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.<init>([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([B)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
              ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
               ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([B)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
             ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
             ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
             ->org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.<init>([B)V
              ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
            ->org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
             ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/testcontainers/containers/VncRecordingContainer.streamRecording()Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
      Execution Path: 
           ->org/testcontainers/containers/ContainerState.copyFileFromContainer(Ljava/lang/String;Lorg/testcontainers/utility/ThrowingFunction;)Ljava/lang/Object;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
            ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
             ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
            ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
Vulnerability ID: GHSA-fccv-jmmp-qg76
  Vulnerable Code: org/apache/catalina/connector/Request.isUserInRole(Ljava/lang/String;)Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isUserInRole(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.isUserInRole(Ljava/lang/String;)Z
  Vulnerable Code: org/apache/catalina/connector/Request.upgrade(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.upgrade(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;
            ->org/apache/catalina/connector/Request.upgrade(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;
  Vulnerable Code: org/apache/catalina/connector/Request.addPathParameter(Ljava/lang/String;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.parsePathParameters(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;)V
             ->org/apache/catalina/connector/Request.addPathParameter(Ljava/lang/String;Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.setRemoteAddr(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setRemoteAddr(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.isRequestedSessionIdFromURL()Z
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromURL()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.isRequestedSessionIdFromUrl()Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromURL()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromURL()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isRequestedSessionIdFromURL()Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromURL()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isRequestedSessionIdFromUrl()Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromURL()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isRequestedSessionIdValid()Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
             ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
             ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
             ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$8.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
             ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getPart(Ljava/lang/String;)Ljavax/servlet/http/Part;
            ->org/apache/catalina/connector/Request.getPart(Ljava/lang/String;)Ljavax/servlet/http/Part;
             ->org/apache/catalina/connector/Request.getParts()Ljava/util/Collection;
              ->org/apache/catalina/connector/Request.parseParts(Z)V
               ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getParts()Ljava/util/Collection;
            ->org/apache/catalina/connector/Request.getParts()Ljava/util/Collection;
             ->org/apache/catalina/connector/Request.parseParts(Z)V
              ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getParameterNames()Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.parseParameters()V
             ->org/apache/catalina/connector/Request.parseParts(Z)V
              ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
             ->org/apache/catalina/connector/Request.parseParameters()V
              ->org/apache/catalina/connector/Request.parseParts(Z)V
               ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetParameterValuePrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetParameterValuePrivilegedAction.run()[Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
              ->org/apache/catalina/connector/Request.parseParameters()V
               ->org/apache/catalina/connector/Request.parseParts(Z)V
                ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getParameterMap()Ljava/util/Map;
            ->org/apache/catalina/connector/Request.getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
             ->org/apache/catalina/connector/Request.parseParameters()V
              ->org/apache/catalina/connector/Request.parseParts(Z)V
               ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetParameterPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetParameterPrivilegedAction.run()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getParameter(Ljava/lang/String;)Ljava/lang/String;
              ->org/apache/catalina/connector/Request.parseParameters()V
               ->org/apache/catalina/connector/Request.parseParts(Z)V
                ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$RequestParameterElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getParameter(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.parseParameters()V
              ->org/apache/catalina/connector/Request.parseParts(Z)V
               ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getParameter(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.parseParameters()V
              ->org/apache/catalina/connector/Request.parseParts(Z)V
               ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getParameter(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getParameter(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.parseParameters()V
              ->org/apache/catalina/connector/Request.parseParts(Z)V
               ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getMappingData()Lorg/apache/catalina/mapper/MappingData;
  Vulnerable Code: org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
  Vulnerable Code: org/apache/catalina/connector/Request.newPushBuilder()Ljavax/servlet/http/PushBuilder;
      Execution Path: 
           ->org/apache/catalina/connector/Request.newPushBuilder()Ljavax/servlet/http/PushBuilder;
  Vulnerable Code: org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/StuckThreadDetectionValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$2.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$QueryElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RequestElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$3.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getQueryString()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.validate(Lorg/apache/catalina/connector/Request;)Z
             ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getQueryString()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getLocalName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getLocalName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getLocalName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getLocalName()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getLocalName()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.parseParameters()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
  Vulnerable Code: org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getDecodedRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getDecodedRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.isContinuationRequired(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getDecodedRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.matchRequest(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getDecodedRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getDecodedRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getDecodedRequestURI()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
  Vulnerable Code: org/apache/catalina/connector/Request.isAsync()Z
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/core/AsyncContextImpl.doInternalDispatch()V
             ->org/apache/catalina/connector/Request.isAsync()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.isAsync()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.isAsync()Z
      Execution Path: 
           ->org/apache/catalina/valves/ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsync()Z
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsync()Z
      Execution Path: 
           ->org/apache/catalina/valves/PersistentValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsync()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getPathTranslated()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.isUserInRole(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolveResource(ILjava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Response.addCookie(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Response.addCookie(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Response.addCookie(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.addCookie(Ljavax/servlet/http/Cookie;)V
            ->org/apache/catalina/connector/Response.addCookie(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.changeSessionId(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Response.addSessionCookieInternal(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
            ->org/apache/catalina/connector/Response.addSessionCookieInternal(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.getWriter()Ljava/io/PrintWriter;
            ->org/apache/catalina/connector/Response.getWriter()Ljava/io/PrintWriter;
             ->org/apache/catalina/connector/Response.getCharacterEncoding()Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
            ->org/apache/catalina/connector/Response.getWriter()Ljava/io/PrintWriter;
             ->org/apache/catalina/connector/Response.getCharacterEncoding()Ljava/lang/String;
              ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
               ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.getCharacterEncoding()Ljava/lang/String;
            ->org/apache/catalina/connector/Response.getCharacterEncoding()Ljava/lang/String;
             ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.addCookie(Ljavax/servlet/http/Cookie;)V
            ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/ErrorReportValve.report(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
            ->org/apache/catalina/connector/Response.setLocale(Ljava/util/Locale;)V
             ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.setLocale(Ljava/util/Locale;)V
            ->org/apache/catalina/connector/Response.setLocale(Ljava/util/Locale;)V
             ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
            ->org/apache/catalina/connector/Response.getContext()Lorg/apache/catalina/Context;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.notifyAttributeRemoved(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.notifyAttributeAssigned(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.isRequestedSessionIdValid()Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.doConnectorAuthenticationAuthorization(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParts(Z)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getRealPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$ServletContextElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.convertCookies()V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.status(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.upgrade(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.changeSessionId()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
            ->org/apache/catalina/core/StandardHostValve.custom(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/tomcat/util/descriptor/web/ErrorPage;)Z
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.status(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/core/StandardHostValve.custom(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/tomcat/util/descriptor/web/ErrorPage;)Z
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.allowCorsPreflightBypass(Lorg/apache/catalina/connector/Request;)Z
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseCookies()V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.authenticate(Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.authenticate(Ljavax/servlet/http/HttpServletResponse;)Z
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.toEncoded(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.toEncoded(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/RequestFilterValve.denyRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getCharacterEncoding()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getCharacterEncoding()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$10.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCharacterEncoding()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetCharacterEncodingPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetCharacterEncodingPrivilegedAction.run()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getCharacterEncoding()Ljava/lang/String;
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParts(Z)V
            ->org/apache/catalina/connector/Request.getCharset()Ljava/nio/charset/Charset;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.getCharset()Ljava/nio/charset/Charset;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasResourcePermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;Lorg/apache/catalina/Context;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.validate(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.changeSessionId(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/PersistentValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getReader()Ljava/io/BufferedReader;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.reauthenticateFromSSO(Ljava/lang/String;Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.login(Ljava/lang/String;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getUserPrincipal()Ljava/security/Principal;
            ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
             ->org/apache/catalina/connector/Request.logout()V
              ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.logout()V
            ->org/apache/catalina/connector/Request.logout()V
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.readChunkedPostBody()[B
            ->org/apache/catalina/connector/Request.checkSwallowInput()V
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.finishRequest()V
            ->org/apache/catalina/connector/Request.checkSwallowInput()V
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParts(Z)V
            ->org/apache/catalina/connector/Request.checkSwallowInput()V
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.checkSwallowInput()V
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getServletContext()Ljavax/servlet/ServletContext;
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionSslId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
             ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
      Execution Path: 
           ->org/apache/catalina/connector/Request.login(Ljava/lang/String;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getContext()Lorg/apache/catalina/Context;
  Vulnerable Code: org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getUserPrincipal()Ljava/security/Principal;
  Vulnerable Code: org/apache/catalina/connector/Request.nextSlash([CI)I
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getContextPath()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.nextSlash([CI)I
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.nextSlash([CI)I
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.nextSlash([CI)I
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.nextSlash([CI)I
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.nextSlash([CI)I
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch()V
            ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.nextSlash([CI)I
  Vulnerable Code: org/apache/catalina/connector/Request.getHeaderNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getHeaderNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetHeaderNamesPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetHeaderNamesPrivilegedAction.run()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.getHeaderNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getHeaderNames()Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.getHeaderNames()Ljava/util/Enumeration;
  Vulnerable Code: org/apache/catalina/connector/Request.setCharacterEncoding(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.setCharacterEncoding(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.setCharacterEncoding(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.setCharacterEncoding(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getReader()Ljava/io/BufferedReader;
            ->org/apache/catalina/connector/Request.getReader()Ljava/io/BufferedReader;
             ->org/apache/catalina/connector/Request.setCharacterEncoding(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getPathTranslated()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getPathInfo()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
            ->org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getPathInfo()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$6.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.matchRequest(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRequestedSessionId()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/PersistentValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionSslId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getRequestedSessionId()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.setURIConverter(Lorg/apache/tomcat/util/buf/B2CConverter;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.convertURI(Lorg/apache/tomcat/util/buf/MessageBytes;Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.setURIConverter(Lorg/apache/tomcat/util/buf/B2CConverter;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getRealPath(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRealPath(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRealPath(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getServletPath()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServletPath()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getServletPath()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServletPath()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
            ->org/apache/catalina/connector/Request.getServletPath()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getServletPath()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getServletPath()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getRemotePort()I
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemotePort()I
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$PortElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemotePort()I
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRemotePort()I
            ->org/apache/catalina/connector/Request.getRemotePort()I
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$PortElement.cache(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getRemotePort()I
  Vulnerable Code: org/apache/catalina/connector/Request.clearCookies()V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.clearCookies()V
  Vulnerable Code: org/apache/catalina/connector/Request.logout()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.logout()V
  Vulnerable Code: org/apache/catalina/connector/Request.setSecure(Z)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setSecure(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.setSecure(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.getLocalAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getLocalAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getLocalAddr()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getLocalAddr()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getCharset()Ljava/nio/charset/Charset;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getCharset()Ljava/nio/charset/Charset;
  Vulnerable Code: org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/Response$PrivilegedDoIsEncodable.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/Response$PrivilegedDoIsEncodable.run()Ljava/lang/Boolean;
             ->org/apache/catalina/connector/Response.access$000(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.encodeUrl(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.encodeURL(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.encodeURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.encodeURL(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeUrl(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.encodeURL(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
              ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getServerPort()I
            ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$PortElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
             ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
              ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
              ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/ResponseFacade.sendRedirect(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
              ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
              ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
               ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
             ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
              ->org/apache/catalina/connector/Request.getServerPort()I
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getServerPort()I
  Vulnerable Code: org/apache/catalina/connector/Request.isTrailerFieldsReady()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isTrailerFieldsReady()Z
            ->org/apache/catalina/connector/Request.isTrailerFieldsReady()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getTrailerFields()Ljava/util/Map;
            ->org/apache/catalina/connector/Request.getTrailerFields()Ljava/util/Map;
             ->org/apache/catalina/connector/Request.isTrailerFieldsReady()Z
  Vulnerable Code: org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.startAsync()Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.startAsync()Ljavax/servlet/AsyncContext;
             ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
  Vulnerable Code: org/apache/catalina/connector/Request.getParts()Ljava/util/Collection;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getParts()Ljava/util/Collection;
  Vulnerable Code: org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.doConnectorAuthenticationAuthorization(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.reauthenticate(Ljava/lang/String;Lorg/apache/catalina/Realm;Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/connector/Request.setAuthType(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getDiscardFacades()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.recycle()V
            ->org/apache/catalina/connector/Request.getDiscardFacades()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Response.recycle()V
             ->org/apache/catalina/connector/Request.getDiscardFacades()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Response.recycle()V
             ->org/apache/catalina/connector/Request.getDiscardFacades()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
            ->org/apache/catalina/connector/Response.recycle()V
             ->org/apache/catalina/connector/Request.getDiscardFacades()Z
  Vulnerable Code: org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/ApplicationDispatcher.dispatch(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
            ->org/apache/catalina/core/ApplicationDispatcher.doDispatch(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
             ->org/apache/catalina/core/ApplicationDispatcher.invoke(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
              ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
               ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/ApplicationDispatcher$PrivilegedDispatch.run()Ljava/lang/Object;
            ->org/apache/catalina/core/ApplicationDispatcher$PrivilegedDispatch.run()Ljava/lang/Void;
             ->org/apache/catalina/core/ApplicationDispatcher.access$200(Lorg/apache/catalina/core/ApplicationDispatcher;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
              ->org/apache/catalina/core/ApplicationDispatcher.doDispatch(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
               ->org/apache/catalina/core/ApplicationDispatcher.invoke(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
                ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
                 ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/ApplicationDispatcher$PrivilegedInclude.run()Ljava/lang/Object;
            ->org/apache/catalina/core/ApplicationDispatcher$PrivilegedInclude.run()Ljava/lang/Void;
             ->org/apache/catalina/core/ApplicationDispatcher.access$100(Lorg/apache/catalina/core/ApplicationDispatcher;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
              ->org/apache/catalina/core/ApplicationDispatcher.doInclude(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
               ->org/apache/catalina/core/ApplicationDispatcher.invoke(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
                ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
                 ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/ApplicationDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
            ->org/apache/catalina/core/ApplicationDispatcher.doInclude(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
             ->org/apache/catalina/core/ApplicationDispatcher.invoke(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
              ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
               ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/ApplicationDispatcher$PrivilegedForward.run()Ljava/lang/Object;
            ->org/apache/catalina/core/ApplicationDispatcher$PrivilegedForward.run()Ljava/lang/Void;
             ->org/apache/catalina/core/ApplicationDispatcher.access$000(Lorg/apache/catalina/core/ApplicationDispatcher;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
              ->org/apache/catalina/core/ApplicationDispatcher.doForward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
               ->org/apache/catalina/core/ApplicationDispatcher.processRequest(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
                ->org/apache/catalina/core/ApplicationDispatcher.invoke(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
                 ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
                  ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/ApplicationDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
            ->org/apache/catalina/core/ApplicationDispatcher.doForward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
             ->org/apache/catalina/core/ApplicationDispatcher.processRequest(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
              ->org/apache/catalina/core/ApplicationDispatcher.invoke(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Lorg/apache/catalina/core/ApplicationDispatcher$State;)V
               ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
                ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
             ->org/apache/catalina/connector/Request.setFilterChain(Ljavax/servlet/FilterChain;)V
  Vulnerable Code: org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteReader.readLine()Ljava/lang/String;
            ->org/apache/catalina/connector/CoyoteReader.skip(J)J
             ->org/apache/catalina/connector/InputBuffer.skip(J)J
              ->org/apache/catalina/connector/InputBuffer.realReadChars()I
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/InputBuffer.read([C)I
            ->org/apache/catalina/connector/InputBuffer.read([CII)I
             ->org/apache/catalina/connector/InputBuffer.checkCharBufferEof()Z
              ->org/apache/catalina/connector/InputBuffer.realReadChars()I
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteReader.readLine()Ljava/lang/String;
            ->org/apache/catalina/connector/CoyoteReader.read([CII)I
             ->org/apache/catalina/connector/InputBuffer.read([CII)I
              ->org/apache/catalina/connector/InputBuffer.checkCharBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadChars()I
                ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteReader.read([C)I
            ->org/apache/catalina/connector/InputBuffer.read([CII)I
             ->org/apache/catalina/connector/InputBuffer.checkCharBufferEof()Z
              ->org/apache/catalina/connector/InputBuffer.realReadChars()I
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteReader.readLine()Ljava/lang/String;
            ->org/apache/catalina/connector/CoyoteReader.read()I
             ->org/apache/catalina/connector/InputBuffer.read()I
              ->org/apache/catalina/connector/InputBuffer.checkCharBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadChars()I
                ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/springframework/http/server/reactive/TomcatHttpHandlerAdapter$TomcatServerHttpRequest.readFromInputStream()Lorg/springframework/core/io/buffer/DataBuffer;
            ->org/apache/catalina/connector/CoyoteInputStream.read(Ljava/nio/ByteBuffer;)I
             ->org/apache/catalina/connector/InputBuffer.read(Ljava/nio/ByteBuffer;)I
              ->org/apache/catalina/connector/InputBuffer.checkByteBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteInputStream$PrivilegedReadBuffer.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/CoyoteInputStream$PrivilegedReadBuffer.run()Ljava/lang/Integer;
             ->org/apache/catalina/connector/InputBuffer.read(Ljava/nio/ByteBuffer;)I
              ->org/apache/catalina/connector/InputBuffer.checkByteBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteInputStream$PrivilegedReadArray.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/CoyoteInputStream$PrivilegedReadArray.run()Ljava/lang/Integer;
             ->org/apache/catalina/connector/InputBuffer.read([BII)I
              ->org/apache/catalina/connector/InputBuffer.checkByteBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteInputStream.read([B)I
            ->org/apache/catalina/connector/CoyoteInputStream.read([BII)I
             ->org/apache/catalina/connector/InputBuffer.read([BII)I
              ->org/apache/catalina/connector/InputBuffer.checkByteBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteInputStream.read()I
            ->org/apache/catalina/connector/InputBuffer.readByte()I
             ->org/apache/catalina/connector/InputBuffer.checkByteBufferEof()Z
              ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteInputStream$PrivilegedRead.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/CoyoteInputStream$PrivilegedRead.run()Ljava/lang/Integer;
             ->org/apache/catalina/connector/InputBuffer.readByte()I
              ->org/apache/catalina/connector/InputBuffer.checkByteBufferEof()Z
               ->org/apache/catalina/connector/InputBuffer.realReadBytes()I
  Vulnerable Code: org/apache/catalina/connector/Request.getTrailerFields()Ljava/util/Map;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getTrailerFields()Ljava/util/Map;
  Vulnerable Code: org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
  Vulnerable Code: org/apache/catalina/connector/Request.getHttpServletMapping()Ljavax/servlet/http/HttpServletMapping;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getHttpServletMapping()Ljavax/servlet/http/HttpServletMapping;
            ->org/apache/catalina/connector/Request.getHttpServletMapping()Ljavax/servlet/http/HttpServletMapping;
  Vulnerable Code: org/apache/catalina/connector/Request.createInputStream()Ljavax/servlet/ServletInputStream;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.createInputStream()Ljavax/servlet/ServletInputStream;
  Vulnerable Code: org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
      Execution Path: 
           ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
  Vulnerable Code: org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.forwardToLoginPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RequestFilterValve.process(Ljava/lang/String;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RequestElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RequestURIElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$3.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.status(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.validate(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch()V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRequestURI()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getRequestURI()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.newSubject(Ljava/security/Principal;)Ljavax/security/auth/Subject;
      Execution Path: 
           ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
            ->org/apache/catalina/connector/Request.newSubject(Ljava/security/Principal;)Ljavax/security/auth/Subject;
  Vulnerable Code: org/apache/catalina/connector/Request.getLocalPort()I
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getLocalPort()I
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getLocalPort()I
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getLocalPort()I
            ->org/apache/catalina/connector/Request.getLocalPort()I
  Vulnerable Code: org/apache/catalina/connector/Request.readChunkedPostBody()[B
      Execution Path: 
           ->org/apache/catalina/connector/Request.readChunkedPostBody()[B
  Vulnerable Code: org/apache/catalina/connector/Request.changeSessionId()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.changeSessionId()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getParameterNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getParameterNames()Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.getParameterNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetParameterNamesPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetParameterNamesPrivilegedAction.run()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.getParameterNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getParameterMap()Ljava/util/Map;
            ->org/apache/catalina/connector/Request.getParameterMap()Ljava/util/Map;
             ->org/apache/catalina/connector/Request.getParameterNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetParameterMapPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetParameterMapPrivilegedAction.run()Ljava/util/Map;
             ->org/apache/catalina/connector/Request.getParameterMap()Ljava/util/Map;
              ->org/apache/catalina/connector/Request.getParameterNames()Ljava/util/Enumeration;
  Vulnerable Code: org/apache/catalina/connector/Request.getURIConverter()Lorg/apache/tomcat/util/buf/B2CConverter;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.prepare(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
             ->org/apache/catalina/connector/CoyoteAdapter.convertURI(Lorg/apache/tomcat/util/buf/MessageBytes;Lorg/apache/catalina/connector/Request;)V
              ->org/apache/catalina/connector/Request.getURIConverter()Lorg/apache/tomcat/util/buf/B2CConverter;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
             ->org/apache/catalina/connector/CoyoteAdapter.convertURI(Lorg/apache/tomcat/util/buf/MessageBytes;Lorg/apache/catalina/connector/Request;)V
              ->org/apache/catalina/connector/Request.getURIConverter()Lorg/apache/tomcat/util/buf/B2CConverter;
  Vulnerable Code: org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getServletContext()Ljavax/servlet/ServletContext;
  Vulnerable Code: org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/core/ApplicationPushBuilder.push()V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteAddrValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParts(Z)V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/valves/SSLValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/servlets/WebdavServlet.doOptions(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/WebdavServlet.determineMethodsAllowed(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
             ->org/apache/catalina/connector/RequestFacade.getAllowTrace()Z
              ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/servlets/DefaultServlet.doOptions(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/DefaultServlet.determineMethodsAllowed(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
             ->org/apache/catalina/connector/RequestFacade.getAllowTrace()Z
              ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/servlets/WebdavServlet.doPut(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/DefaultServlet.doPut(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
             ->org/apache/catalina/servlets/DefaultServlet.sendNotAllowed(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
              ->org/apache/catalina/servlets/DefaultServlet.determineMethodsAllowed(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
               ->org/apache/catalina/connector/RequestFacade.getAllowTrace()Z
                ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/servlets/DefaultServlet.doDelete(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
            ->org/apache/catalina/servlets/DefaultServlet.sendNotAllowed(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
             ->org/apache/catalina/servlets/DefaultServlet.determineMethodsAllowed(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
              ->org/apache/catalina/connector/RequestFacade.getAllowTrace()Z
               ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/connector/Request$7.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.getUriCharset()Ljava/nio/charset/Charset;
            ->org/apache/catalina/connector/Request.getConnector()Lorg/apache/catalina/connector/Connector;
  Vulnerable Code: org/apache/catalina/connector/Request.setRequestedSessionCookie(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
             ->org/apache/catalina/connector/Request.setRequestedSessionCookie(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.getAsyncContext()Ljavax/servlet/AsyncContext;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getAsyncContext()Ljavax/servlet/AsyncContext;
  Vulnerable Code: org/apache/catalina/connector/Request.recycle()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.recycle()V
  Vulnerable Code: org/apache/catalina/connector/Request.clearLocales()V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.clearLocales()V
  Vulnerable Code: org/apache/catalina/connector/Request.isAsyncCompleting()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.isAsyncCompleting()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.isAsyncCompleting()Z
      Execution Path: 
           ->org/apache/catalina/valves/ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsyncCompleting()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getPrincipal()Ljava/security/Principal;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.logout(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getPrincipal()Ljava/security/Principal;
      Execution Path: 
           ->org/apache/catalina/authenticator/NonLoginAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getPrincipal()Ljava/security/Principal;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.matchRequest(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getPrincipal()Ljava/security/Principal;
      Execution Path: 
           ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
            ->org/apache/catalina/connector/Request.getPrincipal()Ljava/security/Principal;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasResourcePermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;Lorg/apache/catalina/Context;)Z
            ->org/apache/catalina/connector/Request.getPrincipal()Ljava/security/Principal;
  Vulnerable Code: org/apache/catalina/connector/Request.removePathParameters(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.removePathParameters(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getSession()Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getSession()Ljavax/servlet/http/HttpSession;
  Vulnerable Code: org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
  Vulnerable Code: org/apache/catalina/connector/Request.finishRequest()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.finishRequest()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.finishRequest()V
  Vulnerable Code: org/apache/catalina/connector/Request.setLocalPort(I)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setLocalPort(I)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/valves/RemoteIpValve.setPorts(Lorg/apache/catalina/connector/Request;I)V
             ->org/apache/catalina/connector/Request.setLocalPort(I)V
  Vulnerable Code: org/apache/catalina/connector/Request.addLocale(Ljava/util/Locale;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseLocales()V
            ->org/apache/catalina/connector/Request.addLocale(Ljava/util/Locale;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.addLocale(Ljava/util/Locale;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/connector/Response.generateCookieString(Ljavax/servlet/http/Cookie;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.forwardToLoginPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/AuthenticatorBase.getJaspicState(Ljavax/security/auth/message/config/AuthConfigProvider;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Z)Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;
             ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.getJaspicState(Ljavax/security/auth/message/config/AuthConfigProvider;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Z)Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;
             ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/connector/Request.notifyAttributeRemoved(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/connector/Request.notifyAttributeAssigned(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.doInternalDispatch()V
            ->org/apache/catalina/core/AsyncContextImpl.fireOnComplete()V
             ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteAddrValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.forwardToErrorPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.custom(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/tomcat/util/descriptor/web/ErrorPage;)Z
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync()Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteCIDRValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequest()Ljavax/servlet/http/HttpServletRequest;
  Vulnerable Code: org/apache/catalina/connector/Request.getLocale()Ljava/util/Locale;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getLocale()Ljava/util/Locale;
  Vulnerable Code: org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isSecure()Z
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$14.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.getAttributeNames()Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.changeSessionId()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.changeSessionId()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.changeSessionId(Ljava/lang/String;)V
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.changeSessionID(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.changeSessionId()Ljava/lang/String;
              ->org/apache/catalina/connector/Request.changeSessionId(Ljava/lang/String;)V
               ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
            ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getSessionInternal()Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Response.encodeURL(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getSessionInternal()Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.getSession()Ljavax/servlet/http/HttpSession;
            ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.forwardToLoginPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$SessionIdElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.isContinuationRequired(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/NonLoginAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/FormAuthenticator.matchRequest(Lorg/apache/catalina/connector/Request;)Z
             ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
               ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/filters/RemoteIpFilter$XForwardedRequest.newPushBuilder()Ljavax/servlet/http/PushBuilder;
            ->org/apache/catalina/connector/RequestFacade.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
             ->org/apache/catalina/connector/Request.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
              ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
               ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
                ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
                 ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/core/ApplicationHttpRequest.newPushBuilder()Ljavax/servlet/http/PushBuilder;
            ->org/apache/catalina/connector/RequestFacade.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
             ->org/apache/catalina/connector/Request.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
              ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
               ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
                ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
                 ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.newPushBuilder()Ljavax/servlet/http/PushBuilder;
            ->org/apache/catalina/connector/Request.newPushBuilder()Ljavax/servlet/http/PushBuilder;
             ->org/apache/catalina/connector/Request.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
              ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
               ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
                ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
                 ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.changeSessionId()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.reauthenticateFromSSO(Ljava/lang/String;Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
      Execution Path: 
           ->org/apache/catalina/valves/PersistentValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getSessionInternal(Z)Lorg/apache/catalina/Session;
             ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
              ->org/apache/catalina/connector/Request.isSecure()Z
  Vulnerable Code: org/apache/catalina/connector/Request.removeAttribute(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.removeAttribute(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$5.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRemoteUser()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$UserElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.login(Ljava/lang/String;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getRemoteUser()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getDateHeader(Ljava/lang/String;)J
      Execution Path: 
           ->org/apache/catalina/connector/Request.getDateHeader(Ljava/lang/String;)J
  Vulnerable Code: org/apache/catalina/connector/Request.getContentType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getContentType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.getContentType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getContentType()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getContentType()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getLocales()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getLocales()Ljava/util/Enumeration;
  Vulnerable Code: org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
             ->org/apache/catalina/connector/Request.getLocales()Ljava/util/Enumeration;
              ->org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/valves/ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/valves/ErrorReportValve.report(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
             ->org/apache/catalina/connector/Request.getLocales()Ljava/util/Enumeration;
              ->org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getLocales()Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.getLocales()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetLocalesPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetLocalesPrivilegedAction.run()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.getLocales()Ljava/util/Enumeration;
              ->org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetLocalePrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetLocalePrivilegedAction.run()Ljava/util/Locale;
             ->org/apache/catalina/connector/Request.getLocale()Ljava/util/Locale;
              ->org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getLocale()Ljava/util/Locale;
            ->org/apache/catalina/connector/Request.getLocale()Ljava/util/Locale;
             ->org/apache/catalina/connector/Request.parseLocales()V
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$11.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getLocale()Ljava/util/Locale;
             ->org/apache/catalina/connector/Request.parseLocales()V
  Vulnerable Code: org/apache/catalina/connector/Request.getSessionInternal()Lorg/apache/catalina/Session;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getSessionInternal()Lorg/apache/catalina/Session;
  Vulnerable Code: org/apache/catalina/connector/Request.setRemoteHost(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setRemoteHost(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.recycleSessionInfo()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.recycle()V
             ->org/apache/catalina/connector/Request.recycleSessionInfo()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.recycle()V
             ->org/apache/catalina/connector/Request.recycleSessionInfo()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
             ->org/apache/catalina/connector/Request.recycle()V
              ->org/apache/catalina/connector/Request.recycleSessionInfo()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.checkRecycled(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
             ->org/apache/catalina/connector/Request.recycle()V
              ->org/apache/catalina/connector/Request.recycleSessionInfo()V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.recycleSessionInfo()V
  Vulnerable Code: org/apache/catalina/connector/Request.getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getContentLength()I
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getContentLength()I
            ->org/apache/catalina/connector/Request.getContentLength()I
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.getContentLength()I
  Vulnerable Code: org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolveHttp(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.setPorts(Lorg/apache/catalina/connector/Request;I)V
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getIntHeader(Ljava/lang/String;)I
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.allowCorsPreflightBypass(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/SSLValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/valves/SSLValve.mygetHeader(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getHeader(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getDateHeader(Ljava/lang/String;)J
            ->org/apache/catalina/connector/Request.getDateHeader(Ljava/lang/String;)J
             ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$RequestHeaderElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.validate(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getHeader(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$MethodElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.forwardToLoginPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RequestElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.allowCorsPreflightBypass(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getMethod()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.parse(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Z
             ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.findSecurityConstraints(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Context;)[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;
            ->org/apache/catalina/connector/Request.getMethod()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getParameterMap()Ljava/util/Map;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getParameterMap()Ljava/util/Map;
  Vulnerable Code: org/apache/catalina/connector/Request.changeSessionId(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.changeSessionId(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.setResponse(Lorg/apache/catalina/connector/Response;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.setResponse(Lorg/apache/catalina/connector/Response;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
            ->org/apache/catalina/connector/Request.setResponse(Lorg/apache/catalina/connector/Response;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getIntHeader(Ljava/lang/String;)I
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getIntHeader(Ljava/lang/String;)I
            ->org/apache/catalina/connector/Request.getIntHeader(Ljava/lang/String;)I
  Vulnerable Code: org/apache/catalina/connector/Request.getRequestURL()Ljava/lang/StringBuffer;
      Execution Path: 
           ->org/apache/catalina/valves/StuckThreadDetectionValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestURL()Ljava/lang/StringBuffer;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRequestURL()Ljava/lang/StringBuffer;
            ->org/apache/catalina/connector/Request.getRequestURL()Ljava/lang/StringBuffer;
  Vulnerable Code: org/apache/catalina/connector/Request.isAsyncStarted()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.isAsyncStarted()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.setErrorState(Ljava/lang/Throwable;Z)V
            ->org/apache/catalina/core/AsyncContextImpl.complete()V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request$8.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.forwardToLoginPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl$AsyncRunnable.run()V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request$9.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/BasicAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getAsyncContext()Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getAsyncContext()Ljavax/servlet/AsyncContext;
             ->org/apache/catalina/connector/Request.isAsyncStarted()Z
              ->org/apache/catalina/core/AsyncContextImpl.isStarted()Z
               ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isAsyncStarted()Z
            ->org/apache/catalina/connector/Request.isAsyncStarted()Z
             ->org/apache/catalina/core/AsyncContextImpl.isStarted()Z
              ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$FirstByteTimeElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/SpnegoAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/core/AsyncContextImpl.timeout()Z
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$ThreadNameElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/core/AsyncContextImpl.setStarted(Lorg/apache/catalina/Context;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Z)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.createRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/AsyncContext;)Lorg/springframework/http/server/reactive/ServletServerHttpRequest;
            ->org/springframework/http/server/reactive/TomcatHttpHandlerAdapter$TomcatServerHttpRequest.<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/AsyncContext;Ljava/lang/String;Lorg/springframework/core/io/buffer/DataBufferFactory;I)V
             ->org/springframework/http/server/reactive/TomcatHttpHandlerAdapter$TomcatServerHttpRequest.createTomcatHttpHeaders(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
              ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$ConnectionStatusElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.setErrorState(Ljava/lang/Throwable;Z)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.getRequestCertificates(Lorg/apache/catalina/connector/Request;)[Ljava/security/cert/X509Certificate;
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.start(Ljava/lang/Runnable;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/valves/RequestFilterValve.process(Ljava/lang/String;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/valves/RequestFilterValve.denyRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request$5.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request.recycle()V
            ->org/apache/catalina/connector/Request.recycleCookieInfo(Z)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.recycleCookieInfo(Z)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request$6.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request$7.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Response.sendRedirect(Ljava/lang/String;I)V
            ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request.recycle()V
            ->org/apache/catalina/core/AsyncContextImpl.recycle()V
             ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
              ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.complete()V
            ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.doInternalDispatch()V
            ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.start(Ljava/lang/Runnable;)V
            ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/core/AsyncContextImpl.<init>(Lorg/apache/catalina/connector/Request;)V
             ->org/apache/catalina/core/AsyncContextImpl.logDebug(Ljava/lang/String;)V
              ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/core/AsyncContextImpl.setTimeout(J)V
             ->org/apache/catalina/connector/Request.getCoyoteRequest()Lorg/apache/coyote/Request;
  Vulnerable Code: org/apache/catalina/connector/Request.getNonAsyncClassNames()Ljava/util/Set;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getNonAsyncClassNames()Ljava/util/Set;
  Vulnerable Code: org/apache/catalina/connector/Request.getContentLengthLong()J
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$9.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getContentLengthLong()J
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getContentLengthLong()J
            ->org/apache/catalina/connector/Request.getContentLengthLong()J
  Vulnerable Code: org/apache/catalina/connector/Request.setCoyoteRequest(Lorg/apache/coyote/Request;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.setCoyoteRequest(Lorg/apache/coyote/Request;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
            ->org/apache/catalina/connector/Request.setCoyoteRequest(Lorg/apache/coyote/Request;)V
  Vulnerable Code: org/apache/catalina/connector/Request.startAsync()Ljavax/servlet/AsyncContext;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync()Ljavax/servlet/AsyncContext;
  Vulnerable Code: org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/FormAuthenticator.forwardToLoginPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
             ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/core/StandardWrapperValve.exception(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
             ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/core/AsyncContextImpl.setErrorState(Ljava/lang/Throwable;Z)V
             ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
              ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/core/AsyncContextImpl.setErrorState(Ljava/lang/Throwable;Z)V
             ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
              ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
             ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/FormAuthenticator.forwardToErrorPage(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/tomcat/util/descriptor/web/LoginConfig;)V
             ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
            ->org/apache/catalina/core/StandardHostValve.status(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
             ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/core/StandardHostValve.status(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
             ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.setErrorState(Ljava/lang/Throwable;Z)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/valves/SSLValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getFilterChain()Ljavax/servlet/FilterChain;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getNonAsyncClassNames()Ljava/util/Set;
            ->org/apache/catalina/connector/Request.getFilterChain()Ljavax/servlet/FilterChain;
      Execution Path: 
           ->org/apache/catalina/core/ApplicationFilterFactory.createFilterChain(Ljavax/servlet/ServletRequest;Lorg/apache/catalina/Wrapper;Ljavax/servlet/Servlet;)Lorg/apache/catalina/core/ApplicationFilterChain;
            ->org/apache/catalina/connector/Request.getFilterChain()Ljavax/servlet/FilterChain;
  Vulnerable Code: org/apache/catalina/connector/Request.parseLocalesHeader(Ljava/lang/String;Ljava/util/TreeMap;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseLocales()V
            ->org/apache/catalina/connector/Request.parseLocalesHeader(Ljava/lang/String;Ljava/util/TreeMap;)V
  Vulnerable Code: org/apache/catalina/connector/Request.setRequestedSessionId(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setRequestedSessionId(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.setRequestedSessionId(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.setRequestedSessionId(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionSslId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.setRequestedSessionId(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.<init>(Lorg/apache/catalina/connector/Connector;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Connector.createRequest()Lorg/apache/catalina/connector/Request;
             ->org/apache/catalina/connector/Request.<init>(Lorg/apache/catalina/connector/Connector;)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
            ->org/apache/catalina/connector/Connector.createRequest()Lorg/apache/catalina/connector/Request;
             ->org/apache/catalina/connector/Request.<init>(Lorg/apache/catalina/connector/Connector;)V
  Vulnerable Code: org/apache/catalina/connector/Request.authenticate(Ljavax/servlet/http/HttpServletResponse;)Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.authenticate(Ljavax/servlet/http/HttpServletResponse;)Z
  Vulnerable Code: org/apache/catalina/connector/Request.getReader()Ljava/io/BufferedReader;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getReader()Ljava/io/BufferedReader;
  Vulnerable Code: org/apache/catalina/connector/Request.parseCookies()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.getServerCookies()Lorg/apache/tomcat/util/http/ServerCookies;
            ->org/apache/catalina/connector/Request.parseCookies()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.convertCookies()V
            ->org/apache/catalina/connector/Request.parseCookies()V
  Vulnerable Code: org/apache/catalina/connector/Request.setContentType(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setContentType(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.isFinished()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.isFinished()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.isFinished()Z
  Vulnerable Code: org/apache/catalina/connector/Request.recycleCookieInfo(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.recycleCookieInfo(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.getParameter(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getParameter(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getHost()Lorg/apache/catalina/Host;
      Execution Path: 
           ->org/apache/catalina/core/StandardEngineValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getHost()Lorg/apache/catalina/Host;
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getHost()Lorg/apache/catalina/Host;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.getHost()Lorg/apache/catalina/Host;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.checkRecycled(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.getHost()Lorg/apache/catalina/Host;
      Execution Path: 
           ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
            ->org/apache/catalina/connector/Request.getHost()Lorg/apache/catalina/Host;
  Vulnerable Code: org/apache/catalina/connector/Request.isParametersParsed()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.isParametersParsed()Z
  Vulnerable Code: org/apache/catalina/connector/Request.login(Ljava/lang/String;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.login(Ljava/lang/String;Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
            ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$4.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getAuthType()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.reauthenticateFromSSO(Ljava/lang/String;Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.login(Ljava/lang/String;Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.login(Ljava/lang/String;Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.getAuthType()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.unescape(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.convertCookies()V
            ->org/apache/catalina/connector/Request.unescape(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.readChunkedPostBody()[B
             ->org/apache/catalina/connector/Request.getStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParameters()V
            ->org/apache/catalina/connector/Request.readPostBody([BI)I
             ->org/apache/catalina/connector/Request.getStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$CookieElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$CookieElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetCookiesPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetCookiesPrivilegedAction.run()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
              ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getCookies()[Ljavax/servlet/http/Cookie;
            ->org/apache/catalina/connector/Request.getCookies()[Ljavax/servlet/http/Cookie;
             ->org/apache/catalina/connector/Request.convertCookies()V
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.addCookie(Ljavax/servlet/http/Cookie;)V
             ->org/apache/catalina/connector/Request.convertCookies()V
  Vulnerable Code: org/apache/catalina/connector/Request.getServerCookies()Lorg/apache/tomcat/util/http/ServerCookies;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getServerCookies()Lorg/apache/tomcat/util/http/ServerCookies;
  Vulnerable Code: org/apache/catalina/connector/Request.addCookie(Ljavax/servlet/http/Cookie;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.addCookie(Ljavax/servlet/http/Cookie;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getContextPath()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.setAsyncSupported(Z)V
      Execution Path: 
           ->org/apache/catalina/core/StandardEngineValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAsyncSupported(Z)V
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAsyncSupported(Z)V
      Execution Path: 
           ->org/apache/catalina/core/StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAsyncSupported(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.setAsyncSupported(Z)V
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setAsyncSupported(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.isRequestedSessionIdFromCookie()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isRequestedSessionIdFromCookie()Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromCookie()Z
      Execution Path: 
           ->org/apache/catalina/connector/Response.isEncodeable(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromCookie()Z
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$7.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromCookie()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromCookie()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.doGetSession(Z)Lorg/apache/catalina/Session;
            ->org/apache/catalina/connector/Request.isRequestedSessionIdFromCookie()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getPathTranslated()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getPathTranslated()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getPathTranslated()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getPathTranslated()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.setRequestedSessionSSL(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.parseSessionSslId(Lorg/apache/catalina/connector/Request;)V
             ->org/apache/catalina/connector/Request.setRequestedSessionSSL(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.isAsyncDispatching()Z
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.isAsyncDispatching()Z
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsyncDispatching()Z
  Vulnerable Code: org/apache/catalina/connector/Request.setNote(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.setNote(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setNote(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/connector/Request.setNote(Ljava/lang/String;Ljava/lang/Object;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getDecodedRequestURIMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getDecodedRequestURIMB()Lorg/apache/tomcat/util/buf/MessageBytes;
  Vulnerable Code: org/apache/catalina/connector/Request.removeNote(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.removeNote(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.removeNote(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.setServerPort(I)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setServerPort(I)V
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.setPorts(Lorg/apache/catalina/connector/Request;I)V
            ->org/apache/catalina/connector/Request.setServerPort(I)V
  Vulnerable Code: org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$12.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$ProtocolElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RequestElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.restoreRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)Z
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getProtocol()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getProtocol()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.parseParts(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParts(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$SessionAttributeElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.doConnectorAuthenticationAuthorization(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;)V
             ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
              ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.logout(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
             ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
              ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
               ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.login(Ljava/lang/String;Ljava/lang/String;Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
             ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
              ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
               ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
             ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
              ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
               ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
                ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
                 ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
             ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
              ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
               ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
                ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
                 ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
             ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
              ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
               ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
             ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
              ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
             ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
              ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
            ->org/apache/catalina/authenticator/AuthenticatorBase.reauthenticateFromSSO(Ljava/lang/String;Lorg/apache/catalina/connector/Request;)Z
             ->org/apache/catalina/authenticator/SingleSignOn.reauthenticate(Ljava/lang/String;Lorg/apache/catalina/Realm;Lorg/apache/catalina/connector/Request;)Z
              ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
               ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
             ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/SingleSignOn.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
             ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/connector/Request.setUserPrincipal(Ljava/security/Principal;)V
             ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getSession()Ljavax/servlet/http/HttpSession;
            ->org/apache/catalina/connector/RequestFacade.getSession(Z)Ljavax/servlet/http/HttpSession;
             ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$SessionAttributeElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetSessionPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetSessionPrivilegedAction.run()Ljavax/servlet/http/HttpSession;
             ->org/apache/catalina/connector/Request.getSession(Z)Ljavax/servlet/http/HttpSession;
  Vulnerable Code: org/apache/catalina/connector/Request.notifyAttributeRemoved(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.removeAttribute(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.notifyAttributeRemoved(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.removeAttribute(Ljava/lang/String;)V
            ->org/apache/catalina/connector/Request.removeAttribute(Ljava/lang/String;)V
             ->org/apache/catalina/connector/Request.notifyAttributeRemoved(Ljava/lang/String;Ljava/lang/Object;)V
  Vulnerable Code: org/apache/catalina/connector/Request.readPostBody([BI)I
      Execution Path: 
           ->org/apache/catalina/connector/Request.readPostBody([BI)I
  Vulnerable Code: org/apache/catalina/connector/Request.getPathParameter(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getPathParameter(Ljava/lang/String;)Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getAttributeNames()Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getAttributeNames()Ljava/util/Enumeration;
  Vulnerable Code: org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RemoteAddrElement.cache(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/DigestAuthenticator.generateNonce(Lorg/apache/catalina/connector/Request;)Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRemoteAddr()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RemoteAddrElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.validate(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$HostElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$HostElement.cache(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRemoteHost()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRemoteHost()Ljava/lang/String;
             ->org/apache/catalina/connector/Request.getRemoteAddr()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getNote(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.logout(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getNote(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getNote(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.checkForCachedAuthentication(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Z)Z
            ->org/apache/catalina/connector/Request.getNote(Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/valves/HealthCheckValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/connector/Request$2.get(Lorg/apache/catalina/connector/Request;Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/core/StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.findSecurityConstraints(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Context;)[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getRequestPathMB()Lorg/apache/tomcat/util/buf/MessageBytes;
  Vulnerable Code: org/apache/catalina/connector/Request.access$000(Lorg/apache/catalina/connector/Request;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.access$000(Lorg/apache/catalina/connector/Request;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Vulnerable Code: org/apache/catalina/connector/Request.isRequestedSessionIdFromUrl()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.isRequestedSessionIdFromUrl()Z
  Vulnerable Code: org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$HostElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolveEnv(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$ProtocolElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RequestAttributeElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$PortElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$LocalServerNameElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.register(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;Ljava/security/Principal;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
            ->org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
             ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetRequestDispatcherPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetRequestDispatcherPrivilegedAction.run()Ljavax/servlet/RequestDispatcher;
             ->org/apache/catalina/connector/Request.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
              ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$ConnectionStatusElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.dispatch()V
            ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljava/lang/String;)V
             ->org/apache/catalina/core/AsyncContextImpl.dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
              ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.getRequestCertificates(Lorg/apache/catalina/connector/Request;)[Ljava/security/cert/X509Certificate;
             ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/LoadBalancerDrainingValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$RemoteAddrElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetAttributePrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetAttributePrivilegedAction.run()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.getAttributeNames()Ljava/util/Enumeration;
              ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getAttributeNames()Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.getAttributeNames()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$ByteSentElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$RequestAttributeElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionSslId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getAttribute(Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasUserDataPermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;)Z
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/ResolverImpl.resolve(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/JDBCAccessLogValve.log(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$LocalServerNameElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/rewrite/RewriteValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getServerName()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getServerName()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Response.doIsEncodeable(Lorg/apache/catalina/Context;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/valves/ExtendedAccessLogValve$13.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getScheme()Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Response.toAbsolute(Ljava/lang/String;)Ljava/lang/String;
            ->org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/authenticator/DigestAuthenticator$DigestInfo.validate(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getScheme()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getPart(Ljava/lang/String;)Ljavax/servlet/http/Part;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getPart(Ljava/lang/String;)Ljavax/servlet/http/Part;
  Vulnerable Code: org/apache/catalina/connector/Request.getDispatcherType()Ljavax/servlet/DispatcherType;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.allowCorsPreflightBypass(Lorg/apache/catalina/connector/Request;)Z
            ->org/apache/catalina/connector/Request.getDispatcherType()Ljavax/servlet/DispatcherType;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getDispatcherType()Ljavax/servlet/DispatcherType;
            ->org/apache/catalina/connector/Request.getDispatcherType()Ljavax/servlet/DispatcherType;
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getDispatcherType()Ljavax/servlet/DispatcherType;
  Vulnerable Code: org/apache/catalina/connector/Request.getAsyncContextInternal()Lorg/apache/catalina/core/AsyncContextImpl;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/Request.getAsyncContextInternal()Lorg/apache/catalina/core/AsyncContextImpl;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/Request.getAsyncContextInternal()Lorg/apache/catalina/core/AsyncContextImpl;
      Execution Path: 
           ->org/apache/catalina/core/StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getAsyncContextInternal()Lorg/apache/catalina/core/AsyncContextImpl;
  Vulnerable Code: org/apache/catalina/connector/Request.getInputStream()Ljavax/servlet/ServletInputStream;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getInputStream()Ljavax/servlet/ServletInputStream;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getInputStream()Ljavax/servlet/ServletInputStream;
            ->org/apache/catalina/connector/Request.getInputStream()Ljavax/servlet/ServletInputStream;
  Vulnerable Code: org/apache/catalina/connector/Request.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
      Execution Path: 
           ->org/apache/catalina/connector/Request.newPushBuilder(Ljavax/servlet/http/HttpServletRequest;)Ljavax/servlet/http/PushBuilder;
  Vulnerable Code: org/apache/catalina/connector/Request.getCharacterEncoding()Ljava/lang/String;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getCharacterEncoding()Ljava/lang/String;
  Vulnerable Code: org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/Request.isUserInRole(Ljava/lang/String;)Z
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/Request.getNonAsyncClassNames()Ljava/util/Set;
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.throwable(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Ljava/lang/Throwable;)V
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseParts(Z)V
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/core/StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.status(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/realm/RealmBase.hasResourcePermission(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;[Lorg/apache/tomcat/util/descriptor/web/SecurityConstraint;Lorg/apache/catalina/Context;)Z
            ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.asyncDispatch(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;Lorg/apache/tomcat/util/net/SocketEvent;)Z
            ->org/apache/catalina/connector/CoyoteAdapter.updateWrapperErrorCount(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
             ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V
            ->org/apache/catalina/connector/CoyoteAdapter.updateWrapperErrorCount(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
             ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.log(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;J)V
            ->org/apache/catalina/connector/CoyoteAdapter.updateWrapperErrorCount(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
             ->org/apache/catalina/connector/Request.getWrapper()Lorg/apache/catalina/Wrapper;
  Vulnerable Code: org/apache/catalina/connector/Request.setRequest(Ljavax/servlet/http/HttpServletRequest;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/authenticator/AuthenticatorBase.secureResponseJspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;)V
             ->org/apache/catalina/connector/Request.setRequest(Ljavax/servlet/http/HttpServletRequest;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/authenticator/AuthenticatorBase.secureResponseJspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;)V
             ->org/apache/catalina/connector/Request.setRequest(Ljavax/servlet/http/HttpServletRequest;)V
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticateJaspic(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;Lorg/apache/catalina/authenticator/AuthenticatorBase$JaspicState;Z)Z
            ->org/apache/catalina/connector/Request.setRequest(Ljavax/servlet/http/HttpServletRequest;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/Request.parseLocales()V
            ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/valves/RemoteIpValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/valves/AbstractAccessLogValve$HeaderElement.addElement(Ljava/io/CharArrayWriter;Ljava/util/Date;Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;J)V
            ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/valves/CrawlerSessionManagerValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
            ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade$GetHeadersPrivilegedAction.run()Ljava/lang/Object;
            ->org/apache/catalina/connector/RequestFacade$GetHeadersPrivilegedAction.run()Ljava/util/Enumeration;
             ->org/apache/catalina/connector/Request.getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
  Vulnerable Code: org/apache/catalina/connector/Request.notifyAttributeAssigned(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.notifyAttributeAssigned(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request$3.set(Lorg/apache/catalina/connector/Request;Ljava/lang/String;Ljava/lang/Object;)V
            ->org/apache/catalina/connector/Request.access$000(Lorg/apache/catalina/connector/Request;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
             ->org/apache/catalina/connector/Request.notifyAttributeAssigned(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Vulnerable Code: org/apache/catalina/connector/Request.isAsyncSupported()Z
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.isAsyncSupported()Z
      Execution Path: 
           ->org/apache/catalina/core/StandardEngineValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsyncSupported()Z
      Execution Path: 
           ->org/apache/catalina/connector/RequestFacade.isAsyncSupported()Z
            ->org/apache/catalina/connector/Request.isAsyncSupported()Z
      Execution Path: 
           ->org/apache/catalina/core/StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsyncSupported()Z
      Execution Path: 
           ->org/apache/catalina/core/StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
            ->org/apache/catalina/connector/Request.isAsyncSupported()Z
  Vulnerable Code: org/apache/catalina/connector/Request.checkSwallowInput()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.checkSwallowInput()V
  Vulnerable Code: org/apache/catalina/connector/Request.setRequestedSessionURL(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.postParseRequest(Lorg/apache/coyote/Request;Lorg/apache/catalina/connector/Request;Lorg/apache/coyote/Response;Lorg/apache/catalina/connector/Response;)Z
            ->org/apache/catalina/connector/Request.setRequestedSessionURL(Z)V
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.parseSessionCookiesId(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.setRequestedSessionURL(Z)V
  Vulnerable Code: org/apache/catalina/connector/Request.<clinit>()V
      Execution Path: 
           ->org/apache/catalina/connector/Request.<clinit>()V
  Vulnerable Code: org/apache/catalina/connector/Request.setPathInfo(Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/catalina/connector/Request.setPathInfo(Ljava/lang/String;)V
  Vulnerable Code: org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.saveRequest(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/Session;)V
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.logout(Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/connector/Request.startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.authenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/authenticator/AuthenticatorBase.login(Ljava/lang/String;Ljava/lang/String;Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/core/ApplicationPushBuilder.<init>(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletRequest;)V
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/authenticator/FormAuthenticator.doAuthenticate(Lorg/apache/catalina/connector/Request;Ljavax/servlet/http/HttpServletResponse;)Z
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/core/AsyncContextImpl.setErrorState(Ljava/lang/Throwable;Z)V
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
      Execution Path: 
           ->org/apache/catalina/connector/CoyoteAdapter.convertURI(Lorg/apache/tomcat/util/buf/MessageBytes;Lorg/apache/catalina/connector/Request;)V
            ->org/apache/catalina/connector/Request.getResponse()Lorg/apache/catalina/connector/Response;
Vulnerability ID: CVE-2021-35516
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$2.getUncompressedCount()J
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander$5.getNextReadableEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI$Mode$2.takeAction(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander$6.writeEntryDataTo(Lorg/apache/commons/compress/archivers/ArchiveEntry;Ljava/io/OutputStream;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read()I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read([B)I
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.read([BII)I
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/ArchiveStreamFactory.detect(Ljava/io/InputStream;)Ljava/lang/String;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/examples/Expander.expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/Lister.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/Lister.list7z(Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
               ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/CLI.main([Ljava/lang/String;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
              ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
             ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$1.count(I)V
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile$2.getCompressedCount()J
            ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
Vulnerability ID: CVE-2021-35515
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
            ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
            ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
             ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
             ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
            ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
Vulnerability ID: CVE-2021-26291
  Vulnerable Code: org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
      Execution Path: 
           ->org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;
  Vulnerable Code: org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
      Execution Path: 
           ->org/apache/maven/repository/DefaultMirrorSelector.isExternalRepo(Lorg/apache/maven/artifact/repository/ArtifactRepository;)Z
Vulnerability ID: CVE-2022-27772
  Vulnerable Code: org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir(Ljava/lang/String;)Ljava/io/File;
      Execution Path: 
           ->org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir(Ljava/lang/String;)Ljava/io/File;
Vulnerability ID: CVE-2023-2976
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.<init>(IZ)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.<init>(I)V
            ->com/google/common/io/FileBackedOutputStream.<init>(IZ)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.write(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write(I)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.update(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write([B)V
            ->com/google/common/io/FileBackedOutputStream.write([BII)V
             ->com/google/common/io/FileBackedOutputStream.update(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write(I)V
            ->com/google/common/io/FileBackedOutputStream.update(I)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.openInputStream()Ljava/io/InputStream;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream$2.openStream()Ljava/io/InputStream;
            ->com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
             ->com/google/common/io/FileBackedOutputStream.openInputStream()Ljava/io/InputStream;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream$1.openStream()Ljava/io/InputStream;
            ->com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
             ->com/google/common/io/FileBackedOutputStream.openInputStream()Ljava/io/InputStream;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.flush()V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.flush()V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.access$100(Lcom/google/common/io/FileBackedOutputStream;)Ljava/io/InputStream;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.<init>(I)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.<init>(I)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.asByteSource()Lcom/google/common/io/ByteSource;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.asByteSource()Lcom/google/common/io/ByteSource;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.write([B)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write([B)V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.close()V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream$1.finalize()V
            ->com/google/common/io/FileBackedOutputStream.reset()V
             ->com/google/common/io/FileBackedOutputStream.close()V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.getFile()Ljava/io/File;
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.getFile()Ljava/io/File;
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.reset()V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.reset()V
  Vulnerable Code: com/google/common/io/FileBackedOutputStream.write([BII)V
      Execution Path: 
           ->com/google/common/io/FileBackedOutputStream.write([BII)V
Vulnerability ID: GHSA-xqfj-vm6h-2x34
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.consumeRemainderOfLastBlock()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isEOFRecord([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isDirectory()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString(J[BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecord()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.reset()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.available()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readOldGNUSparse()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.markSupported()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum([B)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skipRecordPadding()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getRecordSize()I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.paxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseName([BII)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.tryToConsumeSecondEOFRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;IILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.readGlobalPaxHeaders()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatOctalBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes(J[BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.applyPaxHeadersToCurrentEntry(Ljava/util/Map;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getLongNameData()[B
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary(J[BIIZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.parsePaxHeaders(Ljava/io/InputStream;)Ljava/util/Map;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.isAtEOF()Z
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.mark(I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage([BIIIB)Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseOctal([BII)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;II)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;ILjava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger([BIIZ)J
  Vulnerable Code: org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/tar/TarArchiveInputStream.setAtEOF(Z)V
Vulnerability ID: GHSA-3mc7-4q67-w48m
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
              ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
               ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->io/swagger/v3/parser/util/DeserializationUtils.readYamlValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
               ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
                ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->io/swagger/v3/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
               ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
                ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->io/swagger/parser/util/DeserializationUtils.readYamlTree(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
               ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
                ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>()V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
             ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/LoaderOptions;)V
            ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;)V
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
              ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.process(Lorg/springframework/beans/factory/config/YamlProcessor$MatchCallback;)V
            ->org/springframework/beans/factory/config/YamlProcessor.createYaml()Lorg/yaml/snakeyaml/Yaml;
             ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;)V
              ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
               ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
            ->org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.<init>()V
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/springframework/boot/env/OriginTrackedYamlLoader.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/springframework/beans/factory/config/YamlProcessor.createYaml()Lorg/yaml/snakeyaml/Yaml;
            ->org/yaml/snakeyaml/LoaderOptions.<init>()V
Vulnerability ID: GHSA-mc84-pj99-q6hh
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.pushback([BII)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.findEocdRecord()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.drainCurrentEntryData()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getUncompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isFirstByteOfEocdSig(I)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skip(J)J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.closeEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getCompressedCount()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.getBytesInflated()J
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.realSkip(J)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsCompressedSizeFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStoredEntry()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.processZip64Extra(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.bufferContainsSignature(Ljava/io/ByteArrayOutputStream;III)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.isApkSigningBlock([B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFirstLocalFileHeader([B)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.cacheBytesRead(Ljava/io/ByteArrayOutputStream;III)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.currentEntryHasOutstandingBytes()Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.supportsDataDescriptorFor(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFully([BI)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.skipRemainderOfArchive()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDataDescriptor()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.fill()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readStored([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readOneByte()I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readDeflated([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.checksig([B[B)Z
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.readFromInflater([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
Vulnerability ID: GHSA-4wrc-f8pq-fpqp
  Vulnerable Code: org/springframework/remoting/caucho/SimpleHessianServiceExporter.handle(Lcom/sun/net/httpserver/HttpExchange;)V
      Execution Path: 
           ->org/springframework/remoting/caucho/SimpleHessianServiceExporter.handle(Lcom/sun/net/httpserver/HttpExchange;)V
  Vulnerable Code: org/springframework/remoting/caucho/SimpleHessianServiceExporter.<init>()V
      Execution Path: 
           ->org/springframework/remoting/caucho/SimpleHessianServiceExporter.<init>()V
Vulnerability ID: GHSA-683x-4444-jxh8
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/Reader;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/Reader;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate([B)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate([B)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.parse(Ljava/io/File;)Lorg/cyclonedx/model/Bom;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse(Ljava/io/File;)Lorg/cyclonedx/model/Bom;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/InputStream;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/InputStream;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/File;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/File;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid([B)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid([B)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.parse([B)Lorg/cyclonedx/model/Bom;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse([B)Lorg/cyclonedx/model/Bom;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.extractAllNamespaceDeclarations(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/NodeList;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse([B)Lorg/cyclonedx/model/Bom;
            ->org/cyclonedx/parsers/XmlParser.extractAllNamespaceDeclarations(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/NodeList;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse(Ljava/io/File;)Lorg/cyclonedx/model/Bom;
            ->org/cyclonedx/parsers/XmlParser.extractAllNamespaceDeclarations(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/NodeList;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.parse(Ljava/io/InputStream;)Lorg/cyclonedx/model/Bom;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse(Ljava/io/InputStream;)Lorg/cyclonedx/model/Bom;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate([BLorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid([B)Z
            ->org/cyclonedx/parsers/XmlParser.validate([B)Ljava/util/List;
             ->org/cyclonedx/parsers/XmlParser.validate([BLorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid([BLorg/cyclonedx/CycloneDxSchema$Version;)Z
            ->org/cyclonedx/parsers/XmlParser.validate([BLorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate([BLorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
            ->org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
            ->org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
            ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
             ->org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/Reader;)Z
            ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;)Ljava/util/List;
             ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
              ->org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
            ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
             ->org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/File;)Z
            ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;)Ljava/util/List;
             ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/File;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
              ->org/cyclonedx/parsers/XmlParser.validate(Ljavax/xml/transform/Source;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.<init>()V
      Execution Path: 
           ->org/cyclonedx/gradle/CycloneDxTask.createBom()V
            ->org/cyclonedx/gradle/CycloneDxTask.writeBom(Lorg/cyclonedx/model/Metadata;Ljava/util/Set;)V
             ->org/cyclonedx/gradle/CycloneDxTask.writeXMLBom(Lorg/cyclonedx/CycloneDxSchema$Version;Lorg/cyclonedx/model/Bom;)V
              ->org/cyclonedx/parsers/XmlParser.<init>()V
      Execution Path: 
           ->org/cyclonedx/BomParserFactory.createParser(Ljava/io/File;)Lorg/cyclonedx/parsers/Parser;
            ->org/cyclonedx/BomParserFactory.createParser([B)Lorg/cyclonedx/parsers/Parser;
             ->org/cyclonedx/parsers/XmlParser.<init>()V
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
            ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/InputStream;)Z
            ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;)Ljava/util/List;
             ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.parse(Ljava/io/Reader;)Lorg/cyclonedx/model/Bom;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse(Ljava/io/Reader;)Lorg/cyclonedx/model/Bom;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid([BLorg/cyclonedx/CycloneDxSchema$Version;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid([BLorg/cyclonedx/CycloneDxSchema$Version;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.isValid(Ljava/io/InputStream;Lorg/cyclonedx/CycloneDxSchema$Version;)Z
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.identifySchemaVersion(Lorg/w3c/dom/NodeList;)Ljava/lang/String;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse([B)Lorg/cyclonedx/model/Bom;
            ->org/cyclonedx/parsers/XmlParser.identifySchemaVersion(Lorg/w3c/dom/NodeList;)Ljava/lang/String;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse(Ljava/io/File;)Lorg/cyclonedx/model/Bom;
            ->org/cyclonedx/parsers/XmlParser.identifySchemaVersion(Lorg/w3c/dom/NodeList;)Ljava/lang/String;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/Reader;)Ljava/util/List;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.injectSchemaVersion(Lorg/cyclonedx/model/Bom;Ljava/lang/String;)Lorg/cyclonedx/model/Bom;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse([B)Lorg/cyclonedx/model/Bom;
            ->org/cyclonedx/parsers/XmlParser.injectSchemaVersion(Lorg/cyclonedx/model/Bom;Ljava/lang/String;)Lorg/cyclonedx/model/Bom;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.parse(Ljava/io/File;)Lorg/cyclonedx/model/Bom;
            ->org/cyclonedx/parsers/XmlParser.injectSchemaVersion(Lorg/cyclonedx/model/Bom;Ljava/lang/String;)Lorg/cyclonedx/model/Bom;
  Vulnerable Code: org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;)Ljava/util/List;
      Execution Path: 
           ->org/cyclonedx/parsers/XmlParser.validate(Ljava/io/InputStream;)Ljava/util/List;
Vulnerability ID: CVE-2023-6378
  Vulnerable Code: ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
      Execution Path: 
           ->ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
Vulnerability ID: GHSA-crv7-7245-f45f
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readArchiveProperties(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.close()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$100(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecoderStack(Lorg/apache/commons/compress/archivers/sevenz/Folder;JILorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeaders([B)Lorg/apache/commons/compress/archivers/sevenz/Archive;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.utf16Decode([C)[B
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.calculateStreamMap(Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFilesInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.buildDecodingStream()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readSubStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUint64(Ljava/nio/ByteBuffer;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([BII)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/io/File;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readPackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFolder(Ljava/nio/ByteBuffer;)Lorg/apache/commons/compress/archivers/sevenz/Folder;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read()I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getUnsignedByte(Ljava/nio/ByteBuffer;)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.skipBytesFully(Ljava/nio/ByteBuffer;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readUnpackInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readAllOrBits(Ljava/nio/ByteBuffer;I)Ljava/util/BitSet;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<clinit>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStartHeader(J)Lorg/apache/commons/compress/archivers/sevenz/StartHeader;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getCurrentStream()Ljava/io/InputStream;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readFully(Ljava/nio/ByteBuffer;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readEncodedHeader(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;[B)Ljava/nio/ByteBuffer;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$002(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;J)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.getEntries()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.read([B)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.matches([BI)Z
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[BZ)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.readStreamsInfo(Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/sevenz/Archive;)V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/SevenZFile.access$000(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)J
Vulnerability ID: GHSA-57j2-w4cx-62h2
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Map;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArrayToArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)[Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArrayToArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)[Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Map;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapObject(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Collection;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
            ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.mapArray(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
             ->com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: CVE-2022-25857
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.setWrappedToRootException(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException()Z
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.setAllowDuplicateKeys(Z)V
  Vulnerable Code: org/yaml/snakeyaml/LoaderOptions.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/LoaderOptions.<init>()V
Vulnerability ID: GHSA-vmq6-5m68-f53m
  Vulnerable Code: ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
      Execution Path: 
           ->ch/qos/logback/classic/spi/LoggingEventVO.readObject(Ljava/io/ObjectInputStream;)V
Vulnerability ID: GHSA-9vjp-v76f-g363
  Vulnerable Code: io/netty/handler/codec/compression/SnappyFrameDecoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      Execution Path: 
           ->io/netty/handler/codec/compression/SnappyFrameDecoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
Vulnerability ID: GHSA-4jrv-ppp4-jm57
  Vulnerable Code: com/google/gson/internal/LazilyParsedNumber.writeReplace()Ljava/lang/Object;
      Execution Path: 
           ->com/google/gson/internal/LazilyParsedNumber.writeReplace()Ljava/lang/Object;
Vulnerability ID: GHSA-p22x-g9px-3945
  Vulnerable Code: org/apache/coyote/http11/Http11InputBuffer.parseHeader()Lorg/apache/coyote/http11/Http11InputBuffer$HeaderParseStatus;
      Execution Path: 
           ->org/apache/coyote/http11/Http11Processor.service(Lorg/apache/tomcat/util/net/SocketWrapperBase;)Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler$SocketState;
            ->org/apache/coyote/http11/Http11InputBuffer.parseHeaders()Z
             ->org/apache/coyote/http11/Http11InputBuffer.parseHeader()Lorg/apache/coyote/http11/Http11InputBuffer$HeaderParseStatus;
Vulnerability ID: GHSA-grg4-wf29-r9vv
  Vulnerable Code: io/netty/handler/codec/compression/Bzip2Decoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      Execution Path: 
           ->io/netty/handler/codec/compression/Bzip2Decoder.decode(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
Vulnerability ID: CVE-2022-36944
Vulnerability ID: GHSA-wxqc-pxw9-g2p8
  Vulnerable Code: org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;
      Execution Path: 
           ->org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;
            ->org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;
      Execution Path: 
           ->org/springframework/expression/spel/standard/SpelExpressionParser.parseRaw(Ljava/lang/String;)Lorg/springframework/expression/spel/standard/SpelExpression;
            ->org/springframework/expression/spel/standard/SpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;
             ->org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;
      Execution Path: 
           ->org/springframework/expression/spel/standard/SpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;
            ->org/springframework/expression/spel/standard/SpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;
             ->org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;
  Vulnerable Code: org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;
      Execution Path: 
           ->org/springframework/expression/spel/standard/InternalSpelExpressionParser.doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;
Vulnerability ID: GHSA-qcwq-55hx-v3vh
  Vulnerable Code: org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.available()I
            ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
            ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read([BII)I
            ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read([F)I
            ->org/xerial/snappy/SnappyInputStream.read([FII)I
             ->org/xerial/snappy/SnappyInputStream.rawRead(Ljava/lang/Object;II)I
              ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read([D)I
            ->org/xerial/snappy/SnappyInputStream.read([DII)I
             ->org/xerial/snappy/SnappyInputStream.rawRead(Ljava/lang/Object;II)I
              ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read([S)I
            ->org/xerial/snappy/SnappyInputStream.read([SII)I
             ->org/xerial/snappy/SnappyInputStream.rawRead(Ljava/lang/Object;II)I
              ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read([J)I
            ->org/xerial/snappy/SnappyInputStream.read([JII)I
             ->org/xerial/snappy/SnappyInputStream.rawRead(Ljava/lang/Object;II)I
              ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read([I)I
            ->org/xerial/snappy/SnappyInputStream.read([III)I
             ->org/xerial/snappy/SnappyInputStream.rawRead(Ljava/lang/Object;II)I
              ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.read()I
            ->org/xerial/snappy/SnappyInputStream.read()I
             ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
Vulnerability ID: GHSA-mmmh-wcxm-2wr4
Vulnerability ID: CVE-2023-25194
  Vulnerable Code: org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/apache/kafka/common/network/ChannelBuilders.serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
            ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
             ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
              ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;)V
            ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
             ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducerForPartition()Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducerForPartition(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateTxProducer(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory$CloseSafeProducer;
              ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
               ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
                ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                 ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                  ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                      ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createNonTransactionalProducer()Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducerForPartition(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
              ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateTxProducer(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory$CloseSafeProducer;
               ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
                ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
                 ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                  ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                   ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                      ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                       ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createProducer()Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
              ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducerForPartition(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
               ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateTxProducer(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory$CloseSafeProducer;
                ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
                 ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
                  ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                   ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                    ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                      ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                       ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                        ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducerForPartition(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateTxProducer(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory$CloseSafeProducer;
              ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
               ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
                ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                 ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                  ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                      ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducer()Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateTxProducer(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory$CloseSafeProducer;
              ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
               ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
                ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                 ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                  ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                      ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createTransactionalProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateTxProducer(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory$CloseSafeProducer;
              ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
               ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
                ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                 ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                  ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                      ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaProducerFactory.doCreateProducer(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/Producer;
            ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createKafkaProducer()Lorg/apache/kafka/clients/producer/Producer;
             ->org/springframework/kafka/core/DefaultKafkaProducerFactory.createRawProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
              ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
               ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/MirrorMaker.main([Ljava/lang/String;)V
            ->kafka/tools/MirrorMaker$.main([Ljava/lang/String;)V
             ->kafka/tools/MirrorMaker$MirrorMakerOptions.checkArgs()V
              ->kafka/tools/MirrorMaker$MirrorMakerProducer.<init>(ZLjava/util/Properties;)V
               ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Properties;)V
                ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
                 ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                  ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                      ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ConsoleProducer.main([Ljava/lang/String;)V
            ->kafka/tools/ConsoleProducer$.main([Ljava/lang/String;)V
             ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
               ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/EndToEndLatency.main([Ljava/lang/String;)V
            ->kafka/tools/EndToEndLatency$.main([Ljava/lang/String;)V
             ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
               ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
            ->org/apache/kafka/clients/producer/KafkaProducer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerInterceptors;Lorg/apache/kafka/common/utils/Time;)V
             ->org/apache/kafka/clients/producer/KafkaProducer.newSender(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;)Lorg/apache/kafka/clients/producer/internals/Sender;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ReplicaVerificationTool.main([Ljava/lang/String;)V
            ->kafka/tools/ReplicaVerificationTool$.main([Ljava/lang/String;)V
             ->kafka/tools/ReplicaVerificationTool$.initialOffsets(Lscala/collection/Seq;Ljava/util/Properties;J)Lscala/collection/Map;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ConsumerPerformance.main([Ljava/lang/String;)V
            ->kafka/tools/ConsumerPerformance$.main([Ljava/lang/String;)V
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ReplicaVerificationTool$.createConsumer(Ljava/util/Properties;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
            ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/EndToEndLatency$.main([Ljava/lang/String;)V
            ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/MirrorMaker$.$anonfun$createConsumers$1$adapted(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
            ->kafka/tools/MirrorMaker$.$anonfun$createConsumers$1(Ljava/util/Properties;Ljava/lang/String;I)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/MirrorMaker$MirrorMakerOptions.checkArgs()V
            ->kafka/tools/MirrorMaker$.createConsumers(ILjava/util/Properties;Lscala/Option;Lscala/Option;)Lscala/collection/immutable/Seq;
             ->kafka/tools/MirrorMaker$.$anonfun$createConsumers$1(Ljava/util/Properties;Ljava/lang/String;I)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/MirrorMaker.createConsumers(ILjava/util/Properties;Lscala/Option;Lscala/Option;)Lscala/collection/immutable/Seq;
            ->kafka/tools/MirrorMaker$.createConsumers(ILjava/util/Properties;Lscala/Option;Lscala/Option;)Lscala/collection/immutable/Seq;
             ->kafka/tools/MirrorMaker$.$anonfun$createConsumers$1(Ljava/util/Properties;Ljava/lang/String;I)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/StreamsResetter.main([Ljava/lang/String;)V
            ->kafka/tools/StreamsResetter.run([Ljava/lang/String;)I
             ->kafka/tools/StreamsResetter.run([Ljava/lang/String;Ljava/util/Properties;)I
              ->kafka/tools/StreamsResetter.maybeResetInputAndSeekToEndIntermediateTopicOffsets(Ljava/util/Map;Z)I
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/GetOffsetShell.main([Ljava/lang/String;)V
            ->kafka/tools/GetOffsetShell$.main([Ljava/lang/String;)V
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ConsoleConsumer.run(Lkafka/tools/ConsoleConsumer$ConsumerConfig;)V
            ->kafka/tools/ConsoleConsumer$.run(Lkafka/tools/ConsoleConsumer$ConsumerConfig;)V
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ConsoleConsumer.main([Ljava/lang/String;)V
            ->kafka/tools/ConsoleConsumer$.main([Ljava/lang/String;)V
             ->kafka/tools/ConsoleConsumer$.run(Lkafka/tools/ConsoleConsumer$ConsumerConfig;)V
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
            ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
             ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/kafka/clients/consumer/Consumer;
            ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
             ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/Consumer;
            ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
             ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
            ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;ZLjava/lang/String;Z)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
             ->org/springframework/kafka/core/DefaultKafkaConsumerFactory.createKafkaConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/KafkaConsumer;
              ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
               ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Map;)V
            ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
             ->org/apache/kafka/clients/consumer/KafkaConsumer.<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/DelegationTokenCommand.main([Ljava/lang/String;)V
            ->kafka/admin/DelegationTokenCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/DelegationTokenCommand$.createAdminClient(Lkafka/admin/DelegationTokenCommand$DelegationTokenCommandOptions;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/LogDirsCommand.main([Ljava/lang/String;)V
            ->kafka/admin/LogDirsCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/LogDirsCommand$.describe([Ljava/lang/String;Ljava/io/PrintStream;)V
              ->kafka/admin/LogDirsCommand$.createAdminClient(Lkafka/admin/LogDirsCommand$LogDirsCommandOptions;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
                ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/LogDirsCommand.describe([Ljava/lang/String;Ljava/io/PrintStream;)V
            ->kafka/admin/LogDirsCommand$.describe([Ljava/lang/String;Ljava/io/PrintStream;)V
             ->kafka/admin/LogDirsCommand$.createAdminClient(Lkafka/admin/LogDirsCommand$LogDirsCommandOptions;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/DeleteRecordsCommand.execute([Ljava/lang/String;Ljava/io/PrintStream;)V
            ->kafka/admin/DeleteRecordsCommand$.execute([Ljava/lang/String;Ljava/io/PrintStream;)V
             ->kafka/admin/DeleteRecordsCommand$.createAdminClient(Lkafka/admin/DeleteRecordsCommand$DeleteRecordsCommandOptions;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/DeleteRecordsCommand.main([Ljava/lang/String;)V
            ->kafka/admin/DeleteRecordsCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/DeleteRecordsCommand$.execute([Ljava/lang/String;Ljava/io/PrintStream;)V
              ->kafka/admin/DeleteRecordsCommand$.createAdminClient(Lkafka/admin/DeleteRecordsCommand$DeleteRecordsCommandOptions;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
                ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/ReplicaVerificationTool$.main([Ljava/lang/String;)V
            ->kafka/tools/ReplicaVerificationTool$.createAdminClient(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/Admin;
             ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/EndToEndLatency.createTopic(Ljava/lang/String;Ljava/util/Properties;)V
            ->kafka/tools/EndToEndLatency$.createTopic(Ljava/lang/String;Ljava/util/Properties;)V
             ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/EndToEndLatency$.main([Ljava/lang/String;)V
            ->kafka/tools/EndToEndLatency$.createTopic(Ljava/lang/String;Ljava/util/Properties;)V
             ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.removeAcls()V
            ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
             ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/ConsumerGroupCommand.main([Ljava/lang/String;)V
            ->kafka/admin/ConsumerGroupCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/ConsumerGroupCommand$.run(Lkafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions;)V
              ->kafka/admin/ConsumerGroupCommand$ConsumerGroupService.<init>(Lkafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions;Lscala/collection/Map;)V
               ->kafka/admin/ConsumerGroupCommand$ConsumerGroupService.createAdminClient(Lscala/collection/Map;)Lorg/apache/kafka/clients/admin/Admin;
                ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
                 ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                  ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                     ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                      ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/ConsumerGroupCommand.run(Lkafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions;)V
            ->kafka/admin/ConsumerGroupCommand$.run(Lkafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions;)V
             ->kafka/admin/ConsumerGroupCommand$ConsumerGroupService.<init>(Lkafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions;Lscala/collection/Map;)V
              ->kafka/admin/ConsumerGroupCommand$ConsumerGroupService.createAdminClient(Lscala/collection/Map;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
                ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/TopicCommand.main([Ljava/lang/String;)V
            ->kafka/admin/TopicCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/TopicCommand$AdminClientTopicService$.apply(Ljava/util/Properties;Lscala/Option;)Lkafka/admin/TopicCommand$AdminClientTopicService;
              ->kafka/admin/TopicCommand$AdminClientTopicService$.createAdminClient(Ljava/util/Properties;Lscala/Option;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
                ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                 ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                    ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                     ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/LeaderElectionCommand.run([Ljava/lang/String;Lscala/concurrent/duration/Duration;)V
            ->kafka/admin/LeaderElectionCommand$.run([Ljava/lang/String;Lscala/concurrent/duration/Duration;)V
             ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/LeaderElectionCommand.main([Ljava/lang/String;)V
            ->kafka/admin/LeaderElectionCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/LeaderElectionCommand$.run([Ljava/lang/String;Lscala/concurrent/duration/Duration;)V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/tools/StreamsResetter.run([Ljava/lang/String;Ljava/util/Properties;)I
            ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
             ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/ConfigCommand.main([Ljava/lang/String;)V
            ->kafka/admin/ConfigCommand$.main([Ljava/lang/String;)V
             ->kafka/admin/ConfigCommand$.processCommand(Lkafka/admin/ConfigCommand$ConfigCommandOptions;)V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.withAdminClient(Lkafka/admin/AclCommand$AclCommandOptions;Lscala/Function1;)V
            ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
             ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/apache/kafka/clients/admin/AdminClient.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/AdminClient;
            ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
             ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/PreferredReplicaLeaderElectionCommand$.main([Ljava/lang/String;)V
            ->kafka/admin/PreferredReplicaLeaderElectionCommand$.run([Ljava/lang/String;I)V
             ->kafka/admin/PreferredReplicaLeaderElectionCommand$AdminClientCommand.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/PreferredReplicaLeaderElectionCommand.main([Ljava/lang/String;)V
            ->kafka/admin/PreferredReplicaLeaderElectionCommand$.run([Ljava/lang/String;I)V
             ->kafka/admin/PreferredReplicaLeaderElectionCommand$AdminClientCommand.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/PreferredReplicaLeaderElectionCommand.run([Ljava/lang/String;I)V
            ->kafka/admin/PreferredReplicaLeaderElectionCommand$.run([Ljava/lang/String;I)V
             ->kafka/admin/PreferredReplicaLeaderElectionCommand$AdminClientCommand.<init>(Ljava/util/Properties;)V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/ReassignPartitionsCommand.main([Ljava/lang/String;)V
            ->kafka/admin/ReassignPartitionsCommand$.main([Ljava/lang/String;)V
             ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.addAcls()V
            ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
             ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
              ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
               ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                  ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.removeAcls()V
            ->kafka/admin/AclCommand$AdminClientService.$anonfun$removeAcls$1(Lkafka/admin/AclCommand$AdminClientService;Lorg/apache/kafka/clients/admin/Admin;)V
             ->kafka/admin/AclCommand$AdminClientService.listAcls()V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.$anonfun$removeAcls$1$adapted(Lkafka/admin/AclCommand$AdminClientService;Lorg/apache/kafka/clients/admin/Admin;)Ljava/lang/Object;
            ->kafka/admin/AclCommand$AdminClientService.$anonfun$removeAcls$1(Lkafka/admin/AclCommand$AdminClientService;Lorg/apache/kafka/clients/admin/Admin;)V
             ->kafka/admin/AclCommand$AdminClientService.listAcls()V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.addAcls()V
            ->kafka/admin/AclCommand$AdminClientService.$anonfun$addAcls$1(Lkafka/admin/AclCommand$AdminClientService;Lscala/collection/immutable/Map;Lorg/apache/kafka/clients/admin/Admin;)V
             ->kafka/admin/AclCommand$AdminClientService.listAcls()V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->kafka/admin/AclCommand$AdminClientService.$anonfun$addAcls$1$adapted(Lkafka/admin/AclCommand$AdminClientService;Lscala/collection/immutable/Map;Lorg/apache/kafka/clients/admin/Admin;)Ljava/lang/Object;
            ->kafka/admin/AclCommand$AdminClientService.$anonfun$addAcls$1(Lkafka/admin/AclCommand$AdminClientService;Lscala/collection/immutable/Map;Lorg/apache/kafka/clients/admin/Admin;)V
             ->kafka/admin/AclCommand$AdminClientService.listAcls()V
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/listener/AbstractMessageListenerContainer.checkTopics()V
            ->org/apache/kafka/clients/admin/AdminClient.create(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;
             ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/Admin;
              ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
               ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                   ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/springframework/kafka/core/KafkaAdmin.afterSingletonsInstantiated()V
            ->org/springframework/kafka/core/KafkaAdmin.initialize()Z
             ->org/apache/kafka/clients/admin/AdminClient.create(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;
              ->org/apache/kafka/clients/admin/Admin.create(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/Admin;
               ->org/apache/kafka/clients/admin/KafkaAdminClient.createInternal(Lorg/apache/kafka/clients/admin/AdminClientConfig;Lorg/apache/kafka/clients/admin/KafkaAdminClient$TimeoutProcessorFactory;)Lorg/apache/kafka/clients/admin/KafkaAdminClient;
                ->org/apache/kafka/clients/ClientUtils.createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                 ->org/apache/kafka/common/network/ChannelBuilders.clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
                  ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
                   ->org/apache/kafka/common/security/JaasContext.loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
                    ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
      Execution Path: 
           ->org/apache/kafka/common/network/ChannelBuilders.create(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
            ->org/apache/kafka/common/security/JaasContext.loadClientContext(Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
             ->org/apache/kafka/common/security/JaasContext.load(Lorg/apache/kafka/common/security/JaasContext$Type;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/config/types/Password;)Lorg/apache/kafka/common/security/JaasContext;
Vulnerability ID: CVE-2023-34455
  Vulnerable Code: org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
Vulnerability ID: GHSA-mjmj-j48q-9wg2
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/Class;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.getClassForName(Ljava/lang/String;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>()V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>()V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.checkRoot(Ljava/lang/Class;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.getClassForNode(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Class;
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.<init>(Ljava/lang/String;)V
  Vulnerable Code: org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
      Execution Path: 
           ->org/yaml/snakeyaml/constructor/Constructor.check(Ljava/lang/String;)Ljava/lang/String;
Vulnerability ID: GHSA-wm9w-rjj3-j356
Vulnerability ID: CVE-2022-42004
Vulnerability ID: GHSA-cm59-pr5q-cw85
  Vulnerable Code: org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir(Ljava/lang/String;)Ljava/io/File;
      Execution Path: 
           ->org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.createTempDir(Ljava/lang/String;)Ljava/io/File;
Vulnerability ID: CVE-2022-42003
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: GHSA-rvwf-54qp-4r6v
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadFromReader(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/lang/String;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/InputStream;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.loadAll(Ljava/io/Reader;)Ljava/lang/Iterable;
  Vulnerable Code: org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
      Execution Path: 
           ->org/yaml/snakeyaml/Yaml.composeAll(Ljava/io/Reader;)Ljava/lang/Iterable;
Vulnerability ID: GHSA-2wrp-6fg6-hmc5
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptForwardedHost(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$queryParamIfPresent$1(Ljava/lang/String;Ljava/lang/Object;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build([Ljava/lang/Object;)Ljava/net/URI;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.resetSchemeSpecificPart()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.encode()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.getQueryParamValue(Ljava/lang/Object;)Ljava/lang/String;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.getQueryParamValue(Ljava/lang/Object;)Ljava/lang/String;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.resetHierarchicalComponents()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.clone()Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.adaptFromForwardedHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.lambda$buildInternal$0(Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.lambda$buildInternal$0(Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build()Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(I)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<clinit>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<clinit>()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.buildInternal(Lorg/springframework/web/util/UriComponentsBuilder$EncodingHint;)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.<init>()V
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.<init>()V
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build(Z)Lorg/springframework/web/util/UriComponents;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.build(Ljava/util/Map;)Ljava/net/URI;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.toUriString()Ljava/lang/String;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.isForwardedSslOn(Lorg/springframework/http/HttpHeaders;)Z
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.isForwardedSslOn(Lorg/springframework/http/HttpHeaders;)Z
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
  Vulnerable Code: org/springframework/web/util/UriComponentsBuilder.encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
      Execution Path: 
           ->org/springframework/web/util/UriComponentsBuilder.encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
Vulnerability ID: CVE-2022-25647
  Vulnerable Code: com/google/gson/internal/LazilyParsedNumber.writeReplace()Ljava/lang/Object;
      Execution Path: 
           ->com/google/gson/internal/LazilyParsedNumber.writeReplace()Ljava/lang/Object;
Vulnerability ID: GHSA-jjjh-jjxp-wpff
  Vulnerable Code: com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/deser/std/StdDeserializer._deserializeWrappedValue(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
Vulnerability ID: CVE-2023-34034
  Vulnerable Code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
            ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers([Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers([Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
Vulnerability ID: CVE-2022-31692
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.<init>(Lorg/springframework/security/authorization/AuthorizationManager;)V
      Execution Path: 
           ->org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer.configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
            ->org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer.configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
             ->org/springframework/security/web/access/intercept/AuthorizationFilter.<init>(Lorg/springframework/security/authorization/AuthorizationManager;)V
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.shouldNotFilterErrorDispatch()Z
      Execution Path: 
           ->org/springframework/security/web/access/intercept/AuthorizationFilter.shouldNotFilterErrorDispatch()Z
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.shouldNotFilterAsyncDispatch()Z
      Execution Path: 
           ->org/springframework/security/web/access/intercept/AuthorizationFilter.shouldNotFilterAsyncDispatch()Z
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.doFilterInternal(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/springframework/security/web/access/intercept/AuthorizationFilter.doFilterNestedErrorDispatch(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
            ->org/springframework/security/web/access/intercept/AuthorizationFilter.doFilterInternal(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.setAuthorizationEventPublisher(Lorg/springframework/security/authorization/AuthorizationEventPublisher;)V
      Execution Path: 
           ->org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer.configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
            ->org/springframework/security/web/access/intercept/AuthorizationFilter.setAuthorizationEventPublisher(Lorg/springframework/security/authorization/AuthorizationEventPublisher;)V
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.doFilterNestedErrorDispatch(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
      Execution Path: 
           ->org/springframework/security/web/access/intercept/AuthorizationFilter.doFilterNestedErrorDispatch(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.getAuthentication()Lorg/springframework/security/core/Authentication;
      Execution Path: 
           ->org/springframework/security/web/access/intercept/AuthorizationFilter.getAuthentication()Lorg/springframework/security/core/Authentication;
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.getAuthorizationManager()Lorg/springframework/security/authorization/AuthorizationManager;
      Execution Path: 
           ->org/springframework/security/config/annotation/web/builders/WebSecurity.performBuild()Ljava/lang/Object;
            ->org/springframework/security/config/annotation/web/builders/WebSecurity.performBuild()Ljavax/servlet/Filter;
             ->org/springframework/security/config/annotation/web/builders/WebSecurity.getRequestMatcherPrivilegeEvaluatorsEntry(Lorg/springframework/security/web/SecurityFilterChain;)Lorg/springframework/security/web/util/matcher/RequestMatcherEntry;
              ->org/springframework/security/web/access/intercept/AuthorizationFilter.getAuthorizationManager()Lorg/springframework/security/authorization/AuthorizationManager;
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.noPublish(Ljava/util/function/Supplier;Ljava/lang/Object;Lorg/springframework/security/authorization/AuthorizationDecision;)V
      Execution Path: 
           ->org/springframework/security/web/access/intercept/AuthorizationFilter.noPublish(Ljava/util/function/Supplier;Ljava/lang/Object;Lorg/springframework/security/authorization/AuthorizationDecision;)V
  Vulnerable Code: org/springframework/security/web/access/intercept/AuthorizationFilter.setShouldFilterAllDispatcherTypes(Z)V
      Execution Path: 
           ->org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer.configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
            ->org/springframework/security/web/access/intercept/AuthorizationFilter.setShouldFilterAllDispatcherTypes(Z)V
Vulnerability ID: GHSA-7hfm-57qf-j43q
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.<init>()V
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForInStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getOrderedCoders()Ljava/lang/Iterable;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.findBindPairForOutStream(I)I
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSizeForCoder(Lorg/apache/commons/compress/archivers/sevenz/Coder;)J
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.toString()Ljava/lang/String;
  Vulnerable Code: org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
      Execution Path: 
           ->org/apache/commons/compress/archivers/sevenz/Folder.getUnpackSize()J
Vulnerability ID: CVE-2020-36518
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.parse(Ljava/lang/String;)Lorg/w3c/dom/Document;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.documentBuilder()Ljavax/xml/parsers/DocumentBuilder;
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<init>(Ljava/lang/Class;)V
  Vulnerable Code: com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
      Execution Path: 
           ->com/fasterxml/jackson/databind/ext/DOMDeserializer.<clinit>()V
Vulnerability ID: CVE-2023-20860
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.<init>(Lorg/springframework/context/ApplicationContext;)V
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.<init>(Lorg/springframework/context/ApplicationContext;)V
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.initHandlerMappings(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.initHandlerMappings(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
  Vulnerable Code: org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.match(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/web/servlet/handler/RequestMatchResult;
      Execution Path: 
           ->org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.match(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/web/servlet/handler/RequestMatchResult;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$getMatchableHandlerMapping$0(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/servlet/HandlerMapping;Lorg/springframework/web/servlet/HandlerExecutionChain;)Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector$PathSettingHandlerMapping;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$getMatchableHandlerMapping$0(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/servlet/HandlerMapping;Lorg/springframework/web/servlet/HandlerExecutionChain;)Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector$PathSettingHandlerMapping;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.<init>()V
      Execution Path: 
           ->org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.mvcHandlerMappingIntrospector()Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;
            ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.<init>()V
  Vulnerable Code: org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.lambda$match$0(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/util/pattern/PathPattern;
      Execution Path: 
           ->org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.lambda$match$0(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/util/pattern/PathPattern;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.initFallback(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.afterPropertiesSet()V
            ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.initHandlerMappings(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
             ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.initFallback(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/security/config/annotation/web/builders/HttpSecurity.mvcMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
            ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.<init>(Lorg/springframework/context/ApplicationContext;)V
             ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.initHandlerMappings(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
              ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.initFallback(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$getCorsConfiguration$1(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector$AttributesPreservingRequest;Lorg/springframework/web/servlet/HandlerMapping;Lorg/springframework/web/servlet/HandlerExecutionChain;)Lorg/springframework/web/cors/CorsConfiguration;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$getCorsConfiguration$1(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector$AttributesPreservingRequest;Lorg/springframework/web/servlet/HandlerMapping;Lorg/springframework/web/servlet/HandlerExecutionChain;)Lorg/springframework/web/cors/CorsConfiguration;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.afterPropertiesSet()V
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.afterPropertiesSet()V
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMapping(Ljavax/servlet/http/HttpServletRequest;ZLjava/util/function/BiFunction;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.matches(Ljavax/servlet/http/HttpServletRequest;)Z
            ->org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.getMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
             ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.getMatchableHandlerMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
              ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMapping(Ljavax/servlet/http/HttpServletRequest;ZLjava/util/function/BiFunction;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
            ->org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
             ->org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.getMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
              ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.getMatchableHandlerMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
               ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMapping(Ljavax/servlet/http/HttpServletRequest;ZLjava/util/function/BiFunction;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
            ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMappingIgnoringException(Ljavax/servlet/http/HttpServletRequest;Ljava/util/function/BiFunction;)Ljava/lang/Object;
             ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMapping(Ljavax/servlet/http/HttpServletRequest;ZLjava/util/function/BiFunction;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.getHandler(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/HandlerExecutionChain;
      Execution Path: 
           ->org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.getHandler(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/HandlerExecutionChain;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$2(Lorg/springframework/web/servlet/HandlerMapping;)Z
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$2(Lorg/springframework/web/servlet/HandlerMapping;)Z
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$4(Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;)Z
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$4(Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;)Z
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.initPathPatternMatchableHandlerMappings(Ljava/util/List;)Ljava/util/Map;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.afterPropertiesSet()V
            ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.initPathPatternMatchableHandlerMappings(Ljava/util/List;)Ljava/util/Map;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.getHandlerMappings()Ljava/util/List;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.getHandlerMappings()Ljava/util/List;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$3(Lorg/springframework/web/servlet/HandlerMapping;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$3(Lorg/springframework/web/servlet/HandlerMapping;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.getMatchableHandlerMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.getMatchableHandlerMapping(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMappingIgnoringException(Ljavax/servlet/http/HttpServletRequest;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.doWithMatchingMappingIgnoringException(Ljavax/servlet/http/HttpServletRequest;Ljava/util/function/BiFunction;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.<init>(Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;)V
      Execution Path: 
           ->org/springframework/web/servlet/handler/PathPatternMatchableHandlerMapping.<init>(Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;)V
  Vulnerable Code: org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$5(Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;)Lorg/springframework/web/servlet/HandlerMapping;
      Execution Path: 
           ->org/springframework/web/servlet/handler/HandlerMappingIntrospector.lambda$initPathPatternMatchableHandlerMappings$5(Lorg/springframework/web/servlet/handler/MatchableHandlerMapping;)Lorg/springframework/web/servlet/HandlerMapping;
Vulnerability ID: GHSA-7286-pgfv-vxvh
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleNameCallback(Ljavax/security/auth/callback/NameCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
            ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleNameCallback(Ljavax/security/auth/callback/NameCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handlePasswordCallback(Ljavax/security/auth/callback/PasswordCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
            ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handlePasswordCallback(Ljavax/security/auth/callback/PasswordCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleRealmCallback(Ljavax/security/sasl/RealmCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
            ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleRealmCallback(Ljavax/security/sasl/RealmCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleAuthorizeCallback(Ljavax/security/sasl/AuthorizeCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
            ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleAuthorizeCallback(Ljavax/security/sasl/AuthorizeCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/QuorumPeerMain.main([Ljava/lang/String;)V
            ->org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun([Ljava/lang/String;)V
             ->org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
              ->org/apache/zookeeper/server/quorum/QuorumPeer.initialize()V
               ->org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.<init>(ZLjava/lang/String;Ljava/util/Set;)V
                ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/QuorumPeer.testingQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
            ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>()V
             ->org/apache/zookeeper/server/quorum/QuorumPeer.initialize()V
              ->org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.<init>(ZLjava/lang/String;Ljava/util/Set;)V
               ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
            ->org/apache/zookeeper/server/quorum/QuorumPeerMain.getQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
             ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>()V
              ->org/apache/zookeeper/server/quorum/QuorumPeer.initialize()V
               ->org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.<init>(ZLjava/lang/String;Ljava/util/Set;)V
                ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIII)V
            ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
             ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>()V
              ->org/apache/zookeeper/server/quorum/QuorumPeer.initialize()V
               ->org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.<init>(ZLjava/lang/String;Ljava/util/Set;)V
                ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIILorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
            ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
             ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>()V
              ->org/apache/zookeeper/server/quorum/QuorumPeer.initialize()V
               ->org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.<init>(ZLjava/lang/String;Ljava/util/Set;)V
                ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/ServerCnxnFactory;)V
            ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
             ->org/apache/zookeeper/server/quorum/QuorumPeer.<init>()V
              ->org/apache/zookeeper/server/quorum/QuorumPeer.initialize()V
               ->org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.<init>(ZLjava/lang/String;Ljava/util/Set;)V
                ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<clinit>()V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<clinit>()V
Vulnerability ID: GHSA-3h6f-g5f3-gc4w
  Vulnerable Code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers([Ljava/lang/String;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers([Ljava/lang/String;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry.pathMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
Vulnerability ID: CVE-2023-44981
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleNameCallback(Ljavax/security/auth/callback/NameCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleNameCallback(Ljavax/security/auth/callback/NameCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handle([Ljavax/security/auth/callback/Callback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handlePasswordCallback(Ljavax/security/auth/callback/PasswordCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handlePasswordCallback(Ljavax/security/auth/callback/PasswordCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleRealmCallback(Ljavax/security/sasl/RealmCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleRealmCallback(Ljavax/security/sasl/RealmCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleAuthorizeCallback(Ljavax/security/sasl/AuthorizeCallback;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.handleAuthorizeCallback(Ljavax/security/sasl/AuthorizeCallback;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
  Vulnerable Code: org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<clinit>()V
      Execution Path: 
           ->org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.<clinit>()V
Vulnerability ID: GHSA-55g7-9cwv-5qfv
  Vulnerable Code: org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
      Execution Path: 
           ->org/xerial/snappy/SnappyInputStream.hasNextChunk()Z
Vulnerability ID: GHSA-xf96-w227-r7c4
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<init>(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;Ljava/util/Optional;Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getAcceptedMediaTypes(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.setRootViewName(Ljava/lang/String;)V
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.welcomeTemplateExists(Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;Lorg/springframework/context/ApplicationContext;)Z
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.getHandlerInternal(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
  Vulnerable Code: org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
      Execution Path: 
           ->org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.<clinit>()V
Vulnerability ID: CVE-2022-40152
  Vulnerable Code: com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/sr/ValidatingStreamReader.finishDTD(Z)V
            ->com/ctc/wstx/dtd/FullDTDReader.readInternalSubset(Lcom/ctc/wstx/io/WstxInputData;Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;ZI)Lcom/ctc/wstx/dtd/DTDSubset;
             ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
              ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
               ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
                ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                 ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/FullDTDReader.flattenExternalSubset(Lcom/ctc/wstx/io/WstxInputSource;Ljava/io/Writer;ZZZ)Lcom/ctc/wstx/dtd/DTDSubset;
            ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
             ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
              ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
               ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/DTDSchemaFactory.createSchema(Ljava/io/File;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
            ->com/ctc/wstx/dtd/DTDSchemaFactory.doCreateSchema(Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/io/InputBootstrapper;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
             ->com/ctc/wstx/dtd/FullDTDReader.readExternalSubset(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/dtd/DTDSubset;ZI)Lcom/ctc/wstx/dtd/DTDSubset;
              ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
               ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
                ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
                 ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                  ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/DTDSchemaFactory.createSchema(Ljava/net/URL;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
            ->com/ctc/wstx/dtd/DTDSchemaFactory.doCreateSchema(Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/io/InputBootstrapper;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
             ->com/ctc/wstx/dtd/FullDTDReader.readExternalSubset(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/dtd/DTDSubset;ZI)Lcom/ctc/wstx/dtd/DTDSubset;
              ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
               ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
                ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
                 ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                  ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/DTDSchemaFactory.createSchema(Ljava/io/Reader;Ljava/lang/String;Ljava/lang/String;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
            ->com/ctc/wstx/dtd/DTDSchemaFactory.doCreateSchema(Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/io/InputBootstrapper;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
             ->com/ctc/wstx/dtd/FullDTDReader.readExternalSubset(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/dtd/DTDSubset;ZI)Lcom/ctc/wstx/dtd/DTDSubset;
              ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
               ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
                ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
                 ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                  ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/DTDSchemaFactory.createSchema(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
            ->com/ctc/wstx/dtd/DTDSchemaFactory.doCreateSchema(Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/io/InputBootstrapper;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Lorg/codehaus/stax2/validation/XMLValidationSchema;
             ->com/ctc/wstx/dtd/FullDTDReader.readExternalSubset(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/dtd/DTDSubset;ZI)Lcom/ctc/wstx/dtd/DTDSubset;
              ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
               ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
                ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
                 ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                  ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/sr/ValidatingStreamReader.finishDTD(Z)V
            ->com/ctc/wstx/sr/ValidatingStreamReader.findDtdExtSubset(Ljava/lang/String;Ljava/lang/String;Lcom/ctc/wstx/dtd/DTDSubset;)Lcom/ctc/wstx/dtd/DTDSubset;
             ->com/ctc/wstx/dtd/FullDTDReader.readExternalSubset(Lcom/ctc/wstx/io/WstxInputSource;Lcom/ctc/wstx/api/ReaderConfig;Lcom/ctc/wstx/dtd/DTDSubset;ZI)Lcom/ctc/wstx/dtd/DTDSubset;
              ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
               ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
                ->com/ctc/wstx/dtd/FullDTDReader.handleSuppressedDeclaration()V
                 ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
                  ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/FullDTDReader.parseDirectiveFlattened()V
            ->com/ctc/wstx/dtd/FullDTDReader.handleDeclaration(C)V
             ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
              ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/FullDTDReader.parseDTD()Lcom/ctc/wstx/dtd/DTDSubset;
            ->com/ctc/wstx/dtd/FullDTDReader.parseDirective()V
             ->com/ctc/wstx/dtd/FullDTDReader.handleDeclaration(C)V
              ->com/ctc/wstx/dtd/FullDTDReader.handleElementDecl()V
               ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
      Execution Path: 
           ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
            ->com/ctc/wstx/dtd/FullDTDReader.readContentSpec(Lcom/ctc/wstx/util/PrefixedName;ZZ)Lcom/ctc/wstx/dtd/ContentSpec;
